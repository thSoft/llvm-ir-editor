/*
* generated by Xtext
*/
grammar InternalLLVM_IR;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package com.intel.llvm.ireditor.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package com.intel.llvm.ireditor.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.intel.llvm.ireditor.services.LLVM_IRGrammarAccess;

}

@parser::members {

 	private LLVM_IRGrammarAccess grammarAccess;
 	
    public InternalLLVM_IRParser(TokenStream input, LLVM_IRGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Model";	
   	}
   	
   	@Override
   	protected LLVM_IRGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	 iv_ruleModel=ruleModel 
	 { $current=$iv_ruleModel.current; } 
	 EOF 
;

// Rule Model
ruleModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getElementsTopLevelElementParserRuleCall_0()); 
	    }
		lv_elements_0_0=ruleTopLevelElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_0_0, 
        		"TopLevelElement");
	        afterParserOrEnumRuleCall();
	    }

)
)*
;





// Entry rule entryRuleTopLevelElement
entryRuleTopLevelElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTopLevelElementRule()); }
	 iv_ruleTopLevelElement=ruleTopLevelElement 
	 { $current=$iv_ruleTopLevelElement.current; } 
	 EOF 
;

// Rule TopLevelElement
ruleTopLevelElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getTopLevelElementAccess().getTypeDefParserRuleCall_0()); 
    }
    this_TypeDef_0=ruleTypeDef
    { 
        $current = $this_TypeDef_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTopLevelElementAccess().getInlineAsmParserRuleCall_1()); 
    }
    this_InlineAsm_1=ruleInlineAsm
    { 
        $current = $this_InlineAsm_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTopLevelElementAccess().getTargetInfoParserRuleCall_2()); 
    }
    this_TargetInfo_2=ruleTargetInfo
    { 
        $current = $this_TargetInfo_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTopLevelElementAccess().getGlobalValueParserRuleCall_3()); 
    }
    this_GlobalValue_3=ruleGlobalValue
    { 
        $current = $this_GlobalValue_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTopLevelElementAccess().getNamedMetadataParserRuleCall_4()); 
    }
    this_NamedMetadata_4=ruleNamedMetadata
    { 
        $current = $this_NamedMetadata_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTopLevelElementAccess().getAttributeGroupParserRuleCall_5()); 
    }
    this_AttributeGroup_5=ruleAttributeGroup
    { 
        $current = $this_AttributeGroup_5.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleAttributeGroup
entryRuleAttributeGroup returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttributeGroupRule()); }
	 iv_ruleAttributeGroup=ruleAttributeGroup 
	 { $current=$iv_ruleAttributeGroup.current; } 
	 EOF 
;

// Rule AttributeGroup
ruleAttributeGroup returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='attributes' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAttributeGroupAccess().getAttributesKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ATTRIBUTE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getAttributeGroupAccess().getNameATTRIBUTE_IDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeGroupRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ATTRIBUTE_ID");
	    }

)
)	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAttributeGroupAccess().getEqualsSignKeyword_2());
    }
	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getAttributeGroupAccess().getLeftCurlyBracketKeyword_3());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeGroupAccess().getAttributesFunctionAttributeParserRuleCall_4_0_0()); 
	    }
		lv_attributes_4_0=ruleFunctionAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeGroupRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_4_0, 
        		"FunctionAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeGroupAccess().getAlignstackAlignStackParserRuleCall_4_1_0_0()); 
	    }
		lv_alignstack_5_0=ruleAlignStack		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeGroupRule());
	        }
       		add(
       			$current, 
       			"alignstack",
        		lv_alignstack_5_0, 
        		"AlignStack");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='=' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getAttributeGroupAccess().getEqualsSignKeyword_4_1_1());
    }
(
(
		lv_alignstackValue_7_0=RULE_INTEGER
		{
			newLeafNode(lv_alignstackValue_7_0, grammarAccess.getAttributeGroupAccess().getAlignstackValueINTEGERTerminalRuleCall_4_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeGroupRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"alignstackValue",
        		lv_alignstackValue_7_0, 
        		"INTEGER");
	    }

)
))
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeGroupAccess().getTargetSpecificAttributesTargetSpecificAttributeParserRuleCall_4_2_0()); 
	    }
		lv_targetSpecificAttributes_8_0=ruleTargetSpecificAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeGroupRule());
	        }
       		add(
       			$current, 
       			"targetSpecificAttributes",
        		lv_targetSpecificAttributes_8_0, 
        		"TargetSpecificAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
))+	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getAttributeGroupAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleTargetSpecificAttribute
entryRuleTargetSpecificAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTargetSpecificAttributeRule()); }
	 iv_ruleTargetSpecificAttribute=ruleTargetSpecificAttribute 
	 { $current=$iv_ruleTargetSpecificAttribute.current; } 
	 EOF 
;

// Rule TargetSpecificAttribute
ruleTargetSpecificAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_STRING
		{
			newLeafNode(lv_name_0_0, grammarAccess.getTargetSpecificAttributeAccess().getNameSTRINGTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTargetSpecificAttributeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"STRING");
	    }

)
)(	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTargetSpecificAttributeAccess().getEqualsSignKeyword_1_0());
    }
(
(
		lv_value_2_0=RULE_STRING
		{
			newLeafNode(lv_value_2_0, grammarAccess.getTargetSpecificAttributeAccess().getValueSTRINGTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTargetSpecificAttributeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"STRING");
	    }

)
))?)
;





// Entry rule entryRuleNamedMetadata
entryRuleNamedMetadata returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNamedMetadataRule()); }
	 iv_ruleNamedMetadata=ruleNamedMetadata 
	 { $current=$iv_ruleNamedMetadata.current; } 
	 EOF 
;

// Rule NamedMetadata
ruleNamedMetadata returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_name_0_0=RULE_META_INT
		{
			newLeafNode(lv_name_0_0, grammarAccess.getNamedMetadataAccess().getNameMETA_INTTerminalRuleCall_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNamedMetadataRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"META_INT");
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getNamedMetadataAccess().getEqualsSignKeyword_0_1());
    }
	otherlv_2='metadata' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getNamedMetadataAccess().getMetadataKeyword_0_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNamedMetadataAccess().getNodeMetadataNodeParserRuleCall_0_3_0()); 
	    }
		lv_node_3_0=ruleMetadataNode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNamedMetadataRule());
	        }
       		set(
       			$current, 
       			"node",
        		lv_node_3_0, 
        		"MetadataNode");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_name_4_0=RULE_META_NAME
		{
			newLeafNode(lv_name_4_0, grammarAccess.getNamedMetadataAccess().getNameMETA_NAMETerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNamedMetadataRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_4_0, 
        		"META_NAME");
	    }

)
)	otherlv_5='=' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getNamedMetadataAccess().getEqualsSignKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNamedMetadataAccess().getNodeMetadataNodeParserRuleCall_1_2_0()); 
	    }
		lv_node_6_0=ruleMetadataNode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNamedMetadataRule());
	        }
       		set(
       			$current, 
       			"node",
        		lv_node_6_0, 
        		"MetadataNode");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleMetadataRef
entryRuleMetadataRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMetadataRefRule()); }
	 iv_ruleMetadataRef=ruleMetadataRef 
	 { $current=$iv_ruleMetadataRef.current; } 
	 EOF 
;

// Rule MetadataRef
ruleMetadataRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMetadataRefRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getMetadataRefAccess().getRefNamedMetadataCrossReference_0()); 
	    }
		ruleMetadataIdentifier		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleMetadataIdentifier
entryRuleMetadataIdentifier returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getMetadataIdentifierRule()); } 
	 iv_ruleMetadataIdentifier=ruleMetadataIdentifier 
	 { $current=$iv_ruleMetadataIdentifier.current.getText(); }  
	 EOF 
;

// Rule MetadataIdentifier
ruleMetadataIdentifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_META_INT_0=RULE_META_INT    {
		$current.merge(this_META_INT_0);
    }

    { 
    newLeafNode(this_META_INT_0, grammarAccess.getMetadataIdentifierAccess().getMETA_INTTerminalRuleCall_0()); 
    }

    |    this_META_NAME_1=RULE_META_NAME    {
		$current.merge(this_META_NAME_1);
    }

    { 
    newLeafNode(this_META_NAME_1, grammarAccess.getMetadataIdentifierAccess().getMETA_NAMETerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleValueRef
entryRuleValueRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getValueRefRule()); }
	 iv_ruleValueRef=ruleValueRef 
	 { $current=$iv_ruleValueRef.current; } 
	 EOF 
;

// Rule ValueRef
ruleValueRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getValueRefAccess().getGlobalValueRefParserRuleCall_0()); 
    }
    this_GlobalValueRef_0=ruleGlobalValueRef
    { 
        $current = $this_GlobalValueRef_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getValueRefAccess().getLocalValueRefParserRuleCall_1()); 
    }
    this_LocalValueRef_1=ruleLocalValueRef
    { 
        $current = $this_LocalValueRef_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleGlobalValueRef
entryRuleGlobalValueRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGlobalValueRefRule()); }
	 iv_ruleGlobalValueRef=ruleGlobalValueRef 
	 { $current=$iv_ruleGlobalValueRef.current; } 
	 EOF 
;

// Rule GlobalValueRef
ruleGlobalValueRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getGlobalValueRefAccess().getConstantConstantParserRuleCall_0_0()); 
	    }
		lv_constant_0_0=ruleConstant		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGlobalValueRefRule());
	        }
       		set(
       			$current, 
       			"constant",
        		lv_constant_0_0, 
        		"Constant");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getGlobalValueRefAccess().getMetadataMetadataRefParserRuleCall_1_0()); 
	    }
		lv_metadata_1_0=ruleMetadataRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGlobalValueRefRule());
	        }
       		set(
       			$current, 
       			"metadata",
        		lv_metadata_1_0, 
        		"MetadataRef");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleLocalValueRef
entryRuleLocalValueRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLocalValueRefRule()); }
	 iv_ruleLocalValueRef=ruleLocalValueRef 
	 { $current=$iv_ruleLocalValueRef.current; } 
	 EOF 
;

// Rule LocalValueRef
ruleLocalValueRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getLocalValueRefRule());
	        }
        }
	otherlv_0=RULE_LOCAL_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getLocalValueRefAccess().getRefLocalValueCrossReference_0()); 
	}

)
)
;





// Entry rule entryRuleGlobalValue
entryRuleGlobalValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGlobalValueRule()); }
	 iv_ruleGlobalValue=ruleGlobalValue 
	 { $current=$iv_ruleGlobalValue.current; } 
	 EOF 
;

// Rule GlobalValue
ruleGlobalValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getGlobalValueAccess().getGlobalVariableParserRuleCall_0()); 
    }
    this_GlobalVariable_0=ruleGlobalVariable
    { 
        $current = $this_GlobalVariable_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getGlobalValueAccess().getFunctionParserRuleCall_1()); 
    }
    this_Function_1=ruleFunction
    { 
        $current = $this_Function_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getGlobalValueAccess().getAliasParserRuleCall_2()); 
    }
    this_Alias_2=ruleAlias
    { 
        $current = $this_Alias_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;









// Entry rule entryRuleNamedInstruction
entryRuleNamedInstruction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNamedInstructionRule()); }
	 iv_ruleNamedInstruction=ruleNamedInstruction 
	 { $current=$iv_ruleNamedInstruction.current; } 
	 EOF 
;

// Rule NamedInstruction
ruleNamedInstruction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getNamedInstructionAccess().getStartingInstructionParserRuleCall_0()); 
    }
    this_StartingInstruction_0=ruleStartingInstruction
    { 
        $current = $this_StartingInstruction_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNamedInstructionAccess().getNamedMiddleInstructionParserRuleCall_1()); 
    }
    this_NamedMiddleInstruction_1=ruleNamedMiddleInstruction
    { 
        $current = $this_NamedMiddleInstruction_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNamedInstructionAccess().getNamedTerminatorInstructionParserRuleCall_2()); 
    }
    this_NamedTerminatorInstruction_2=ruleNamedTerminatorInstruction
    { 
        $current = $this_NamedTerminatorInstruction_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;







// Entry rule entryRuleAlias
entryRuleAlias returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAliasRule()); }
	 iv_ruleAlias=ruleAlias 
	 { $current=$iv_ruleAlias.current; } 
	 EOF 
;

// Rule Alias
ruleAlias returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getAliasAccess().getNameGlobalNameParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleGlobalName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAliasRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"GlobalName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='alias' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAliasAccess().getAliasKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAliasAccess().getLinkageLinkageParserRuleCall_2_0()); 
	    }
		lv_linkage_2_0=ruleLinkage		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAliasRule());
	        }
       		set(
       			$current, 
       			"linkage",
        		lv_linkage_2_0, 
        		"Linkage");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getAliasAccess().getVisibilityVisibilityParserRuleCall_3_0()); 
	    }
		lv_visibility_3_0=ruleVisibility		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAliasRule());
	        }
       		set(
       			$current, 
       			"visibility",
        		lv_visibility_3_0, 
        		"Visibility");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getAliasAccess().getTypeTypeParserRuleCall_4_0()); 
	    }
		lv_type_4_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAliasRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_4_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAliasAccess().getAliaseeAliaseeParserRuleCall_5_0()); 
	    }
		lv_aliasee_5_0=ruleAliasee		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAliasRule());
	        }
       		set(
       			$current, 
       			"aliasee",
        		lv_aliasee_5_0, 
        		"Aliasee");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleAliasee
entryRuleAliasee returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAliaseeRule()); }
	 iv_ruleAliasee=ruleAliasee 
	 { $current=$iv_ruleAliasee.current; } 
	 EOF 
;

// Rule Aliasee
ruleAliasee returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAliaseeRule());
	        }
        }
	otherlv_0=RULE_GLOBAL_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getAliaseeAccess().getRefGlobalValueDefCrossReference_0_0()); 
	}

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getAliaseeAccess().getBitcastConstantExpression_convertParserRuleCall_1_0()); 
	    }
		lv_bitcast_1_0=ruleConstantExpression_convert		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAliaseeRule());
	        }
       		set(
       			$current, 
       			"bitcast",
        		lv_bitcast_1_0, 
        		"ConstantExpression_convert");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleTargetInfo
entryRuleTargetInfo returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTargetInfoRule()); }
	 iv_ruleTargetInfo=ruleTargetInfo 
	 { $current=$iv_ruleTargetInfo.current; } 
	 EOF 
;

// Rule TargetInfo
ruleTargetInfo returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='target' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTargetInfoAccess().getTargetKeyword_0());
    }
(
(
(
		lv_infoType_1_1=	'datalayout' 
    {
        newLeafNode(lv_infoType_1_1, grammarAccess.getTargetInfoAccess().getInfoTypeDatalayoutKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTargetInfoRule());
	        }
       		setWithLastConsumed($current, "infoType", lv_infoType_1_1, null);
	    }

    |		lv_infoType_1_2=	'triple' 
    {
        newLeafNode(lv_infoType_1_2, grammarAccess.getTargetInfoAccess().getInfoTypeTripleKeyword_1_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTargetInfoRule());
	        }
       		setWithLastConsumed($current, "infoType", lv_infoType_1_2, null);
	    }

)

)
)	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTargetInfoAccess().getEqualsSignKeyword_2());
    }
(
(
		lv_layout_3_0=RULE_STRING
		{
			newLeafNode(lv_layout_3_0, grammarAccess.getTargetInfoAccess().getLayoutSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTargetInfoRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"layout",
        		lv_layout_3_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleInlineAsm
entryRuleInlineAsm returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInlineAsmRule()); }
	 iv_ruleInlineAsm=ruleInlineAsm 
	 { $current=$iv_ruleInlineAsm.current; } 
	 EOF 
;

// Rule InlineAsm
ruleInlineAsm returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='module' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getInlineAsmAccess().getModuleKeyword_0());
    }
	otherlv_1='asm' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInlineAsmAccess().getAsmKeyword_1());
    }
(
(
		lv_asmLine_2_0=RULE_STRING
		{
			newLeafNode(lv_asmLine_2_0, grammarAccess.getInlineAsmAccess().getAsmLineSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInlineAsmRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"asmLine",
        		lv_asmLine_2_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleGlobalVariable
entryRuleGlobalVariable returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGlobalVariableRule()); }
	 iv_ruleGlobalVariable=ruleGlobalVariable 
	 { $current=$iv_ruleGlobalVariable.current; } 
	 EOF 
;

// Rule GlobalVariable
ruleGlobalVariable returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getGlobalVariableAccess().getNameGlobalNameParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleGlobalName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGlobalVariableRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"GlobalName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getGlobalVariableAccess().getLinkageLinkageParserRuleCall_1_0()); 
	    }
		lv_linkage_1_0=ruleLinkage		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGlobalVariableRule());
	        }
       		set(
       			$current, 
       			"linkage",
        		lv_linkage_1_0, 
        		"Linkage");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getGlobalVariableAccess().getAddrspaceAddressSpaceParserRuleCall_2_0()); 
	    }
		lv_addrspace_2_0=ruleAddressSpace		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGlobalVariableRule());
	        }
       		set(
       			$current, 
       			"addrspace",
        		lv_addrspace_2_0, 
        		"AddressSpace");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getGlobalVariableAccess().getTlsModelTLSmodelParserRuleCall_3_0()); 
	    }
		lv_tlsModel_3_0=ruleTLSmodel		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGlobalVariableRule());
	        }
       		set(
       			$current, 
       			"tlsModel",
        		lv_tlsModel_3_0, 
        		"TLSmodel");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		lv_unsignificantAddress_4_0=	'unnamed_addr' 
    {
        newLeafNode(lv_unsignificantAddress_4_0, grammarAccess.getGlobalVariableAccess().getUnsignificantAddressUnnamed_addrKeyword_4_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGlobalVariableRule());
	        }
       		setWithLastConsumed($current, "unsignificantAddress", true, "unnamed_addr");
	    }

)
)?((
(
		lv_constant_5_0=	'constant' 
    {
        newLeafNode(lv_constant_5_0, grammarAccess.getGlobalVariableAccess().getConstantConstantKeyword_5_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGlobalVariableRule());
	        }
       		setWithLastConsumed($current, "constant", true, "constant");
	    }

)
)
    |	otherlv_6='global' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getGlobalVariableAccess().getGlobalKeyword_5_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getGlobalVariableAccess().getTypeTypeParserRuleCall_6_0()); 
	    }
		lv_type_7_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGlobalVariableRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_7_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getGlobalVariableAccess().getInitialValueConstantParserRuleCall_7_0()); 
	    }
		lv_initialValue_8_0=ruleConstant		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGlobalVariableRule());
	        }
       		set(
       			$current, 
       			"initialValue",
        		lv_initialValue_8_0, 
        		"Constant");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getGlobalVariableAccess().getCommaKeyword_8_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGlobalVariableAccess().getSectionSectionParserRuleCall_8_1_0()); 
	    }
		lv_section_10_0=ruleSection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGlobalVariableRule());
	        }
       		set(
       			$current, 
       			"section",
        		lv_section_10_0, 
        		"Section");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_11=',' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getGlobalVariableAccess().getCommaKeyword_9_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGlobalVariableAccess().getAlignAlignParserRuleCall_9_1_0()); 
	    }
		lv_align_12_0=ruleAlign		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGlobalVariableRule());
	        }
       		set(
       			$current, 
       			"align",
        		lv_align_12_0, 
        		"Align");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleConstant
entryRuleConstant returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstantRule()); }
	 iv_ruleConstant=ruleConstant 
	 { $current=$iv_ruleConstant.current; } 
	 EOF 
;

// Rule Constant
ruleConstant returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getConstantAccess().getSimpleConstantParserRuleCall_0()); 
    }
    this_SimpleConstant_0=ruleSimpleConstant
    { 
        $current = $this_SimpleConstant_0.current; 
        afterParserOrEnumRuleCall();
    }

    |((	ruleStructureConstant)=>
    { 
        newCompositeNode(grammarAccess.getConstantAccess().getStructureConstantParserRuleCall_1()); 
    }
    this_StructureConstant_1=ruleStructureConstant
    { 
        $current = $this_StructureConstant_1.current; 
        afterParserOrEnumRuleCall();
    }
)
    |
    { 
        newCompositeNode(grammarAccess.getConstantAccess().getArrayConstantParserRuleCall_2()); 
    }
    this_ArrayConstant_2=ruleArrayConstant
    { 
        $current = $this_ArrayConstant_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getConstantAccess().getVectorConstantParserRuleCall_3()); 
    }
    this_VectorConstant_3=ruleVectorConstant
    { 
        $current = $this_VectorConstant_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getConstantAccess().getZeroInitializerParserRuleCall_4()); 
    }
    this_ZeroInitializer_4=ruleZeroInitializer
    { 
        $current = $this_ZeroInitializer_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getConstantAccess().getMetadataNodeParserRuleCall_5()); 
    }
    this_MetadataNode_5=ruleMetadataNode
    { 
        $current = $this_MetadataNode_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getConstantAccess().getMetadataStringParserRuleCall_6()); 
    }
    this_MetadataString_6=ruleMetadataString
    { 
        $current = $this_MetadataString_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getConstantAccess().getBlockAddressParserRuleCall_7()); 
    }
    this_BlockAddress_7=ruleBlockAddress
    { 
        $current = $this_BlockAddress_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getConstantAccess().getUndefParserRuleCall_8()); 
    }
    this_Undef_8=ruleUndef
    { 
        $current = $this_Undef_8.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getConstantAccess().getConstantExpressionParserRuleCall_9()); 
    }
    this_ConstantExpression_9=ruleConstantExpression
    { 
        $current = $this_ConstantExpression_9.current; 
        afterParserOrEnumRuleCall();
    }

    |(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantRule());
	        }
        }
	otherlv_10=RULE_GLOBAL_ID
	{
		newLeafNode(otherlv_10, grammarAccess.getConstantAccess().getRefGlobalValueDefCrossReference_10_0()); 
	}

)
))
;





// Entry rule entryRuleConstantExpression
entryRuleConstantExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstantExpressionRule()); }
	 iv_ruleConstantExpression=ruleConstantExpression 
	 { $current=$iv_ruleConstantExpression.current; } 
	 EOF 
;

// Rule ConstantExpression
ruleConstantExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getConstantExpressionAccess().getConstantExpression_convertParserRuleCall_0()); 
    }
    this_ConstantExpression_convert_0=ruleConstantExpression_convert
    { 
        $current = $this_ConstantExpression_convert_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getConstantExpressionAccess().getConstantExpression_getelementptrParserRuleCall_1()); 
    }
    this_ConstantExpression_getelementptr_1=ruleConstantExpression_getelementptr
    { 
        $current = $this_ConstantExpression_getelementptr_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getConstantExpressionAccess().getConstantExpression_selectParserRuleCall_2()); 
    }
    this_ConstantExpression_select_2=ruleConstantExpression_select
    { 
        $current = $this_ConstantExpression_select_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getConstantExpressionAccess().getConstantExpression_compareParserRuleCall_3()); 
    }
    this_ConstantExpression_compare_3=ruleConstantExpression_compare
    { 
        $current = $this_ConstantExpression_compare_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getConstantExpressionAccess().getConstantExpression_extractelementParserRuleCall_4()); 
    }
    this_ConstantExpression_extractelement_4=ruleConstantExpression_extractelement
    { 
        $current = $this_ConstantExpression_extractelement_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getConstantExpressionAccess().getConstantExpression_insertelementParserRuleCall_5()); 
    }
    this_ConstantExpression_insertelement_5=ruleConstantExpression_insertelement
    { 
        $current = $this_ConstantExpression_insertelement_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getConstantExpressionAccess().getConstantExpression_shufflevectorParserRuleCall_6()); 
    }
    this_ConstantExpression_shufflevector_6=ruleConstantExpression_shufflevector
    { 
        $current = $this_ConstantExpression_shufflevector_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getConstantExpressionAccess().getConstantExpression_extractvalueParserRuleCall_7()); 
    }
    this_ConstantExpression_extractvalue_7=ruleConstantExpression_extractvalue
    { 
        $current = $this_ConstantExpression_extractvalue_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getConstantExpressionAccess().getConstantExpression_insertvalueParserRuleCall_8()); 
    }
    this_ConstantExpression_insertvalue_8=ruleConstantExpression_insertvalue
    { 
        $current = $this_ConstantExpression_insertvalue_8.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getConstantExpressionAccess().getConstantExpression_binaryParserRuleCall_9()); 
    }
    this_ConstantExpression_binary_9=ruleConstantExpression_binary
    { 
        $current = $this_ConstantExpression_binary_9.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleConstantExpression_convert
entryRuleConstantExpression_convert returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstantExpression_convertRule()); }
	 iv_ruleConstantExpression_convert=ruleConstantExpression_convert 
	 { $current=$iv_ruleConstantExpression_convert.current; } 
	 EOF 
;

// Rule ConstantExpression_convert
ruleConstantExpression_convert returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getConstantExpression_convertAccess().getOpcodeConvertionOpcodeParserRuleCall_0_0()); 
	    }
		lv_opcode_0_0=ruleConvertionOpcode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstantExpression_convertRule());
	        }
       		set(
       			$current, 
       			"opcode",
        		lv_opcode_0_0, 
        		"ConvertionOpcode");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getConstantExpression_convertAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConstantExpression_convertAccess().getFromTypeTypeParserRuleCall_2_0()); 
	    }
		lv_fromType_2_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstantExpression_convertRule());
	        }
       		set(
       			$current, 
       			"fromType",
        		lv_fromType_2_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getConstantExpression_convertAccess().getConstantGlobalValueRefParserRuleCall_3_0()); 
	    }
		lv_constant_3_0=ruleGlobalValueRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstantExpression_convertRule());
	        }
       		set(
       			$current, 
       			"constant",
        		lv_constant_3_0, 
        		"GlobalValueRef");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='to' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getConstantExpression_convertAccess().getToKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConstantExpression_convertAccess().getTargetTypeTypeParserRuleCall_5_0()); 
	    }
		lv_targetType_5_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstantExpression_convertRule());
	        }
       		set(
       			$current, 
       			"targetType",
        		lv_targetType_5_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getConstantExpression_convertAccess().getRightParenthesisKeyword_6());
    }
)
;





// Entry rule entryRuleConstantExpression_getelementptr
entryRuleConstantExpression_getelementptr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstantExpression_getelementptrRule()); }
	 iv_ruleConstantExpression_getelementptr=ruleConstantExpression_getelementptr 
	 { $current=$iv_ruleConstantExpression_getelementptr.current; } 
	 EOF 
;

// Rule ConstantExpression_getelementptr
ruleConstantExpression_getelementptr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_opcode_0_0=	'getelementptr' 
    {
        newLeafNode(lv_opcode_0_0, grammarAccess.getConstantExpression_getelementptrAccess().getOpcodeGetelementptrKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantExpression_getelementptrRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_0_0, "getelementptr");
	    }

)
)(	otherlv_1='inbounds' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getConstantExpression_getelementptrAccess().getInboundsKeyword_1());
    }
)?	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getConstantExpression_getelementptrAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConstantExpression_getelementptrAccess().getConstantTypeTypeParserRuleCall_3_0()); 
	    }
		lv_constantType_3_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstantExpression_getelementptrRule());
	        }
       		set(
       			$current, 
       			"constantType",
        		lv_constantType_3_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getConstantExpression_getelementptrAccess().getConstantGlobalValueRefParserRuleCall_4_0()); 
	    }
		lv_constant_4_0=ruleGlobalValueRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstantExpression_getelementptrRule());
	        }
       		set(
       			$current, 
       			"constant",
        		lv_constant_4_0, 
        		"GlobalValueRef");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getConstantExpression_getelementptrAccess().getCommaKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConstantExpression_getelementptrAccess().getIndexTypesTypeParserRuleCall_5_1_0()); 
	    }
		lv_indexTypes_6_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstantExpression_getelementptrRule());
	        }
       		add(
       			$current, 
       			"indexTypes",
        		lv_indexTypes_6_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getConstantExpression_getelementptrAccess().getIndicesConstantParserRuleCall_5_2_0()); 
	    }
		lv_indices_7_0=ruleConstant		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstantExpression_getelementptrRule());
	        }
       		add(
       			$current, 
       			"indices",
        		lv_indices_7_0, 
        		"Constant");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_8=')' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getConstantExpression_getelementptrAccess().getRightParenthesisKeyword_6());
    }
)
;





// Entry rule entryRuleConstantExpression_select
entryRuleConstantExpression_select returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstantExpression_selectRule()); }
	 iv_ruleConstantExpression_select=ruleConstantExpression_select 
	 { $current=$iv_ruleConstantExpression_select.current; } 
	 EOF 
;

// Rule ConstantExpression_select
ruleConstantExpression_select returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_opcode_0_0=	'select' 
    {
        newLeafNode(lv_opcode_0_0, grammarAccess.getConstantExpression_selectAccess().getOpcodeSelectKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantExpression_selectRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_0_0, "select");
	    }

)
)	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getConstantExpression_selectAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConstantExpression_selectAccess().getConditionTypedValueParserRuleCall_2_0()); 
	    }
		lv_condition_2_0=ruleTypedValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstantExpression_selectRule());
	        }
       		set(
       			$current, 
       			"condition",
        		lv_condition_2_0, 
        		"TypedValue");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getConstantExpression_selectAccess().getCommaKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConstantExpression_selectAccess().getOp1TypedValueParserRuleCall_4_0()); 
	    }
		lv_op1_4_0=ruleTypedValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstantExpression_selectRule());
	        }
       		set(
       			$current, 
       			"op1",
        		lv_op1_4_0, 
        		"TypedValue");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getConstantExpression_selectAccess().getCommaKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConstantExpression_selectAccess().getOp2TypedValueParserRuleCall_6_0()); 
	    }
		lv_op2_6_0=ruleTypedValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstantExpression_selectRule());
	        }
       		set(
       			$current, 
       			"op2",
        		lv_op2_6_0, 
        		"TypedValue");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getConstantExpression_selectAccess().getRightParenthesisKeyword_7());
    }
)
;





// Entry rule entryRuleConstantExpression_compare
entryRuleConstantExpression_compare returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstantExpression_compareRule()); }
	 iv_ruleConstantExpression_compare=ruleConstantExpression_compare 
	 { $current=$iv_ruleConstantExpression_compare.current; } 
	 EOF 
;

// Rule ConstantExpression_compare
ruleConstantExpression_compare returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((((
(
		lv_opcode_0_0=	'icmp' 
    {
        newLeafNode(lv_opcode_0_0, grammarAccess.getConstantExpression_compareAccess().getOpcodeIcmpKeyword_0_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantExpression_compareRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_0_0, "icmp");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getConstantExpression_compareAccess().getConditionIcmpConditionParserRuleCall_0_0_1_0()); 
	    }
		lv_condition_1_0=ruleIcmpCondition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstantExpression_compareRule());
	        }
       		set(
       			$current, 
       			"condition",
        		lv_condition_1_0, 
        		"IcmpCondition");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_opcode_2_0=	'fcmp' 
    {
        newLeafNode(lv_opcode_2_0, grammarAccess.getConstantExpression_compareAccess().getOpcodeFcmpKeyword_0_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantExpression_compareRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_2_0, "fcmp");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getConstantExpression_compareAccess().getConditionFcmpConditionParserRuleCall_0_1_1_0()); 
	    }
		lv_condition_3_0=ruleFcmpCondition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstantExpression_compareRule());
	        }
       		set(
       			$current, 
       			"condition",
        		lv_condition_3_0, 
        		"FcmpCondition");
	        afterParserOrEnumRuleCall();
	    }

)
)))	otherlv_4='(' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getConstantExpression_compareAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConstantExpression_compareAccess().getOp1TypedValueParserRuleCall_2_0()); 
	    }
		lv_op1_5_0=ruleTypedValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstantExpression_compareRule());
	        }
       		set(
       			$current, 
       			"op1",
        		lv_op1_5_0, 
        		"TypedValue");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getConstantExpression_compareAccess().getCommaKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConstantExpression_compareAccess().getOp2TypedValueParserRuleCall_4_0()); 
	    }
		lv_op2_7_0=ruleTypedValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstantExpression_compareRule());
	        }
       		set(
       			$current, 
       			"op2",
        		lv_op2_7_0, 
        		"TypedValue");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8=')' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getConstantExpression_compareAccess().getRightParenthesisKeyword_5());
    }
)
;





// Entry rule entryRuleConstantExpression_extractelement
entryRuleConstantExpression_extractelement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstantExpression_extractelementRule()); }
	 iv_ruleConstantExpression_extractelement=ruleConstantExpression_extractelement 
	 { $current=$iv_ruleConstantExpression_extractelement.current; } 
	 EOF 
;

// Rule ConstantExpression_extractelement
ruleConstantExpression_extractelement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_opcode_0_0=	'extractelement' 
    {
        newLeafNode(lv_opcode_0_0, grammarAccess.getConstantExpression_extractelementAccess().getOpcodeExtractelementKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantExpression_extractelementRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_0_0, "extractelement");
	    }

)
)	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getConstantExpression_extractelementAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConstantExpression_extractelementAccess().getVectorTypedValueParserRuleCall_2_0()); 
	    }
		lv_vector_2_0=ruleTypedValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstantExpression_extractelementRule());
	        }
       		set(
       			$current, 
       			"vector",
        		lv_vector_2_0, 
        		"TypedValue");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getConstantExpression_extractelementAccess().getCommaKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConstantExpression_extractelementAccess().getIndexTypedValueParserRuleCall_4_0()); 
	    }
		lv_index_4_0=ruleTypedValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstantExpression_extractelementRule());
	        }
       		set(
       			$current, 
       			"index",
        		lv_index_4_0, 
        		"TypedValue");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getConstantExpression_extractelementAccess().getRightParenthesisKeyword_5());
    }
)
;





// Entry rule entryRuleConstantExpression_insertelement
entryRuleConstantExpression_insertelement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstantExpression_insertelementRule()); }
	 iv_ruleConstantExpression_insertelement=ruleConstantExpression_insertelement 
	 { $current=$iv_ruleConstantExpression_insertelement.current; } 
	 EOF 
;

// Rule ConstantExpression_insertelement
ruleConstantExpression_insertelement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_opcode_0_0=	'insertelement' 
    {
        newLeafNode(lv_opcode_0_0, grammarAccess.getConstantExpression_insertelementAccess().getOpcodeInsertelementKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantExpression_insertelementRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_0_0, "insertelement");
	    }

)
)	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getConstantExpression_insertelementAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConstantExpression_insertelementAccess().getVectorTypeVectorTypeParserRuleCall_2_0()); 
	    }
		lv_vectorType_2_0=ruleVectorType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstantExpression_insertelementRule());
	        }
       		set(
       			$current, 
       			"vectorType",
        		lv_vectorType_2_0, 
        		"VectorType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getConstantExpression_insertelementAccess().getVectorValueRefParserRuleCall_3_0()); 
	    }
		lv_vector_3_0=ruleValueRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstantExpression_insertelementRule());
	        }
       		set(
       			$current, 
       			"vector",
        		lv_vector_3_0, 
        		"ValueRef");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getConstantExpression_insertelementAccess().getCommaKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConstantExpression_insertelementAccess().getElementTypedValueParserRuleCall_5_0()); 
	    }
		lv_element_5_0=ruleTypedValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstantExpression_insertelementRule());
	        }
       		set(
       			$current, 
       			"element",
        		lv_element_5_0, 
        		"TypedValue");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getConstantExpression_insertelementAccess().getCommaKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConstantExpression_insertelementAccess().getIndexTypedValueParserRuleCall_7_0()); 
	    }
		lv_index_7_0=ruleTypedValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstantExpression_insertelementRule());
	        }
       		set(
       			$current, 
       			"index",
        		lv_index_7_0, 
        		"TypedValue");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8=')' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getConstantExpression_insertelementAccess().getRightParenthesisKeyword_8());
    }
)
;





// Entry rule entryRuleConstantExpression_shufflevector
entryRuleConstantExpression_shufflevector returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstantExpression_shufflevectorRule()); }
	 iv_ruleConstantExpression_shufflevector=ruleConstantExpression_shufflevector 
	 { $current=$iv_ruleConstantExpression_shufflevector.current; } 
	 EOF 
;

// Rule ConstantExpression_shufflevector
ruleConstantExpression_shufflevector returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_opcode_0_0=	'shufflevector' 
    {
        newLeafNode(lv_opcode_0_0, grammarAccess.getConstantExpression_shufflevectorAccess().getOpcodeShufflevectorKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantExpression_shufflevectorRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_0_0, "shufflevector");
	    }

)
)	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getConstantExpression_shufflevectorAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConstantExpression_shufflevectorAccess().getVector1TypedValueParserRuleCall_2_0()); 
	    }
		lv_vector1_2_0=ruleTypedValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstantExpression_shufflevectorRule());
	        }
       		set(
       			$current, 
       			"vector1",
        		lv_vector1_2_0, 
        		"TypedValue");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getConstantExpression_shufflevectorAccess().getCommaKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConstantExpression_shufflevectorAccess().getVector2TypedValueParserRuleCall_4_0()); 
	    }
		lv_vector2_4_0=ruleTypedValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstantExpression_shufflevectorRule());
	        }
       		set(
       			$current, 
       			"vector2",
        		lv_vector2_4_0, 
        		"TypedValue");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getConstantExpression_shufflevectorAccess().getCommaKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConstantExpression_shufflevectorAccess().getMaskTypedValueParserRuleCall_6_0()); 
	    }
		lv_mask_6_0=ruleTypedValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstantExpression_shufflevectorRule());
	        }
       		set(
       			$current, 
       			"mask",
        		lv_mask_6_0, 
        		"TypedValue");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getConstantExpression_shufflevectorAccess().getRightParenthesisKeyword_7());
    }
)
;





// Entry rule entryRuleConstantExpression_extractvalue
entryRuleConstantExpression_extractvalue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstantExpression_extractvalueRule()); }
	 iv_ruleConstantExpression_extractvalue=ruleConstantExpression_extractvalue 
	 { $current=$iv_ruleConstantExpression_extractvalue.current; } 
	 EOF 
;

// Rule ConstantExpression_extractvalue
ruleConstantExpression_extractvalue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_opcode_0_0=	'extractvalue' 
    {
        newLeafNode(lv_opcode_0_0, grammarAccess.getConstantExpression_extractvalueAccess().getOpcodeExtractvalueKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantExpression_extractvalueRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_0_0, "extractvalue");
	    }

)
)	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getConstantExpression_extractvalueAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConstantExpression_extractvalueAccess().getValueTypedValueParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleTypedValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstantExpression_extractvalueRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"TypedValue");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getConstantExpression_extractvalueAccess().getCommaKeyword_3_0());
    }
(
(
		lv_indices_4_0=RULE_INTEGER
		{
			newLeafNode(lv_indices_4_0, grammarAccess.getConstantExpression_extractvalueAccess().getIndicesINTEGERTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantExpression_extractvalueRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"indices",
        		lv_indices_4_0, 
        		"INTEGER");
	    }

)
))+	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getConstantExpression_extractvalueAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRuleConstantExpression_insertvalue
entryRuleConstantExpression_insertvalue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstantExpression_insertvalueRule()); }
	 iv_ruleConstantExpression_insertvalue=ruleConstantExpression_insertvalue 
	 { $current=$iv_ruleConstantExpression_insertvalue.current; } 
	 EOF 
;

// Rule ConstantExpression_insertvalue
ruleConstantExpression_insertvalue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_opcode_0_0=	'insertvalue' 
    {
        newLeafNode(lv_opcode_0_0, grammarAccess.getConstantExpression_insertvalueAccess().getOpcodeInsertvalueKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantExpression_insertvalueRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_0_0, "insertvalue");
	    }

)
)	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getConstantExpression_insertvalueAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConstantExpression_insertvalueAccess().getValueTypedValueParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleTypedValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstantExpression_insertvalueRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"TypedValue");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getConstantExpression_insertvalueAccess().getCommaKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConstantExpression_insertvalueAccess().getElementTypedValueParserRuleCall_4_0()); 
	    }
		lv_element_4_0=ruleTypedValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstantExpression_insertvalueRule());
	        }
       		set(
       			$current, 
       			"element",
        		lv_element_4_0, 
        		"TypedValue");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getConstantExpression_insertvalueAccess().getCommaKeyword_5_0());
    }
(
(
		lv_indices_6_0=RULE_INTEGER
		{
			newLeafNode(lv_indices_6_0, grammarAccess.getConstantExpression_insertvalueAccess().getIndicesINTEGERTerminalRuleCall_5_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantExpression_insertvalueRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"indices",
        		lv_indices_6_0, 
        		"INTEGER");
	    }

)
))+	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getConstantExpression_insertvalueAccess().getRightParenthesisKeyword_6());
    }
)
;





// Entry rule entryRuleConstantExpression_binary
entryRuleConstantExpression_binary returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstantExpression_binaryRule()); }
	 iv_ruleConstantExpression_binary=ruleConstantExpression_binary 
	 { $current=$iv_ruleConstantExpression_binary.current; } 
	 EOF 
;

// Rule ConstantExpression_binary
ruleConstantExpression_binary returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((((
(
(
		lv_opcode_0_1=	'add' 
    {
        newLeafNode(lv_opcode_0_1, grammarAccess.getConstantExpression_binaryAccess().getOpcodeAddKeyword_0_0_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantExpression_binaryRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_0_1, null);
	    }

    |		lv_opcode_0_2=	'sub' 
    {
        newLeafNode(lv_opcode_0_2, grammarAccess.getConstantExpression_binaryAccess().getOpcodeSubKeyword_0_0_0_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantExpression_binaryRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_0_2, null);
	    }

    |		lv_opcode_0_3=	'mul' 
    {
        newLeafNode(lv_opcode_0_3, grammarAccess.getConstantExpression_binaryAccess().getOpcodeMulKeyword_0_0_0_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantExpression_binaryRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_0_3, null);
	    }

    |		lv_opcode_0_4=	'shl' 
    {
        newLeafNode(lv_opcode_0_4, grammarAccess.getConstantExpression_binaryAccess().getOpcodeShlKeyword_0_0_0_0_3());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantExpression_binaryRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_0_4, null);
	    }

)

)
)(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getConstantExpression_binaryAccess().getUnorderedGroup_0_0_1());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getConstantExpression_binaryAccess().getUnorderedGroup_0_0_1(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getConstantExpression_binaryAccess().getUnorderedGroup_0_0_1(), 0);
	 				}
					({true}?=>(	otherlv_2='nuw' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getConstantExpression_binaryAccess().getNuwKeyword_0_0_1_0());
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConstantExpression_binaryAccess().getUnorderedGroup_0_0_1());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getConstantExpression_binaryAccess().getUnorderedGroup_0_0_1(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getConstantExpression_binaryAccess().getUnorderedGroup_0_0_1(), 1);
	 				}
					({true}?=>(	otherlv_3='nsw' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getConstantExpression_binaryAccess().getNswKeyword_0_0_1_1());
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConstantExpression_binaryAccess().getUnorderedGroup_0_0_1());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getConstantExpression_binaryAccess().getUnorderedGroup_0_0_1());
	}

))
    |((
(
(
		lv_opcode_4_1=	'sdiv' 
    {
        newLeafNode(lv_opcode_4_1, grammarAccess.getConstantExpression_binaryAccess().getOpcodeSdivKeyword_0_1_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantExpression_binaryRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_4_1, null);
	    }

    |		lv_opcode_4_2=	'udiv' 
    {
        newLeafNode(lv_opcode_4_2, grammarAccess.getConstantExpression_binaryAccess().getOpcodeUdivKeyword_0_1_0_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantExpression_binaryRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_4_2, null);
	    }

    |		lv_opcode_4_3=	'lshr' 
    {
        newLeafNode(lv_opcode_4_3, grammarAccess.getConstantExpression_binaryAccess().getOpcodeLshrKeyword_0_1_0_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantExpression_binaryRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_4_3, null);
	    }

    |		lv_opcode_4_4=	'ashr' 
    {
        newLeafNode(lv_opcode_4_4, grammarAccess.getConstantExpression_binaryAccess().getOpcodeAshrKeyword_0_1_0_0_3());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantExpression_binaryRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_4_4, null);
	    }

)

)
)(	otherlv_5='exact' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getConstantExpression_binaryAccess().getExactKeyword_0_1_1());
    }
)?)
    |(
(
(
		lv_opcode_6_1=	'fadd' 
    {
        newLeafNode(lv_opcode_6_1, grammarAccess.getConstantExpression_binaryAccess().getOpcodeFaddKeyword_0_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantExpression_binaryRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_6_1, null);
	    }

    |		lv_opcode_6_2=	'fsub' 
    {
        newLeafNode(lv_opcode_6_2, grammarAccess.getConstantExpression_binaryAccess().getOpcodeFsubKeyword_0_2_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantExpression_binaryRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_6_2, null);
	    }

    |		lv_opcode_6_3=	'fmul' 
    {
        newLeafNode(lv_opcode_6_3, grammarAccess.getConstantExpression_binaryAccess().getOpcodeFmulKeyword_0_2_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantExpression_binaryRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_6_3, null);
	    }

    |		lv_opcode_6_4=	'fdiv' 
    {
        newLeafNode(lv_opcode_6_4, grammarAccess.getConstantExpression_binaryAccess().getOpcodeFdivKeyword_0_2_0_3());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantExpression_binaryRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_6_4, null);
	    }

    |		lv_opcode_6_5=	'urem' 
    {
        newLeafNode(lv_opcode_6_5, grammarAccess.getConstantExpression_binaryAccess().getOpcodeUremKeyword_0_2_0_4());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantExpression_binaryRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_6_5, null);
	    }

    |		lv_opcode_6_6=	'srem' 
    {
        newLeafNode(lv_opcode_6_6, grammarAccess.getConstantExpression_binaryAccess().getOpcodeSremKeyword_0_2_0_5());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantExpression_binaryRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_6_6, null);
	    }

    |		lv_opcode_6_7=	'frem' 
    {
        newLeafNode(lv_opcode_6_7, grammarAccess.getConstantExpression_binaryAccess().getOpcodeFremKeyword_0_2_0_6());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantExpression_binaryRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_6_7, null);
	    }

    |		lv_opcode_6_8=	'and' 
    {
        newLeafNode(lv_opcode_6_8, grammarAccess.getConstantExpression_binaryAccess().getOpcodeAndKeyword_0_2_0_7());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantExpression_binaryRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_6_8, null);
	    }

    |		lv_opcode_6_9=	'or' 
    {
        newLeafNode(lv_opcode_6_9, grammarAccess.getConstantExpression_binaryAccess().getOpcodeOrKeyword_0_2_0_8());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantExpression_binaryRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_6_9, null);
	    }

    |		lv_opcode_6_10=	'xor' 
    {
        newLeafNode(lv_opcode_6_10, grammarAccess.getConstantExpression_binaryAccess().getOpcodeXorKeyword_0_2_0_9());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantExpression_binaryRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_6_10, null);
	    }

)

)
))	otherlv_7='(' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getConstantExpression_binaryAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConstantExpression_binaryAccess().getOp1TypedValueParserRuleCall_2_0()); 
	    }
		lv_op1_8_0=ruleTypedValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstantExpression_binaryRule());
	        }
       		set(
       			$current, 
       			"op1",
        		lv_op1_8_0, 
        		"TypedValue");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getConstantExpression_binaryAccess().getCommaKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConstantExpression_binaryAccess().getOp2TypedValueParserRuleCall_4_0()); 
	    }
		lv_op2_10_0=ruleTypedValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstantExpression_binaryRule());
	        }
       		set(
       			$current, 
       			"op2",
        		lv_op2_10_0, 
        		"TypedValue");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_11=')' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getConstantExpression_binaryAccess().getRightParenthesisKeyword_5());
    }
)
;





// Entry rule entryRuleUndef
entryRuleUndef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUndefRule()); }
	 iv_ruleUndef=ruleUndef 
	 { $current=$iv_ruleUndef.current; } 
	 EOF 
;

// Rule Undef
ruleUndef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='undef' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getUndefAccess().getUndefKeyword_0());
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getUndefAccess().getUndefAction_1(),
            $current);
    }
))
;





// Entry rule entryRuleBlockAddress
entryRuleBlockAddress returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBlockAddressRule()); }
	 iv_ruleBlockAddress=ruleBlockAddress 
	 { $current=$iv_ruleBlockAddress.current; } 
	 EOF 
;

// Rule BlockAddress
ruleBlockAddress returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='blockaddress' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBlockAddressAccess().getBlockaddressKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBlockAddressAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBlockAddressAccess().getFunctionGlobalValueRefParserRuleCall_2_0()); 
	    }
		lv_function_2_0=ruleGlobalValueRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBlockAddressRule());
	        }
       		set(
       			$current, 
       			"function",
        		lv_function_2_0, 
        		"GlobalValueRef");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getBlockAddressAccess().getCommaKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBlockAddressAccess().getBasicBlockBasicBlockRefParserRuleCall_4_0()); 
	    }
		lv_basicBlock_4_0=ruleBasicBlockRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBlockAddressRule());
	        }
       		set(
       			$current, 
       			"basicBlock",
        		lv_basicBlock_4_0, 
        		"BasicBlockRef");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getBlockAddressAccess().getRightParenthesisKeyword_5());
    }
)
;





// Entry rule entryRuleZeroInitializer
entryRuleZeroInitializer returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getZeroInitializerRule()); }
	 iv_ruleZeroInitializer=ruleZeroInitializer 
	 { $current=$iv_ruleZeroInitializer.current; } 
	 EOF 
;

// Rule ZeroInitializer
ruleZeroInitializer returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='zeroinitializer' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getZeroInitializerAccess().getZeroinitializerKeyword_0());
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getZeroInitializerAccess().getZeroInitializerAction_1(),
            $current);
    }
))
;





// Entry rule entryRuleStructureConstant
entryRuleStructureConstant returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStructureConstantRule()); }
	 iv_ruleStructureConstant=ruleStructureConstant 
	 { $current=$iv_ruleStructureConstant.current; } 
	 EOF 
;

// Rule StructureConstant
ruleStructureConstant returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getStructureConstantAccess().getStructureConstantAction_0(),
            $current);
    }
)((	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getStructureConstantAccess().getLeftCurlyBracketKeyword_1_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStructureConstantAccess().getListConstantListParserRuleCall_1_0_1_0()); 
	    }
		lv_list_2_0=ruleConstantList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStructureConstantRule());
	        }
       		set(
       			$current, 
       			"list",
        		lv_list_2_0, 
        		"ConstantList");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getStructureConstantAccess().getRightCurlyBracketKeyword_1_0_2());
    }
)
    |((
(
		lv_packed_4_0=	'<' 
    {
        newLeafNode(lv_packed_4_0, grammarAccess.getStructureConstantAccess().getPackedLessThanSignKeyword_1_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStructureConstantRule());
	        }
       		setWithLastConsumed($current, "packed", lv_packed_4_0, "<");
	    }

)
)	otherlv_5='{' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getStructureConstantAccess().getLeftCurlyBracketKeyword_1_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStructureConstantAccess().getListConstantListParserRuleCall_1_1_2_0()); 
	    }
		lv_list_6_0=ruleConstantList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStructureConstantRule());
	        }
       		set(
       			$current, 
       			"list",
        		lv_list_6_0, 
        		"ConstantList");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getStructureConstantAccess().getRightCurlyBracketKeyword_1_1_3());
    }
	otherlv_8='>' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getStructureConstantAccess().getGreaterThanSignKeyword_1_1_4());
    }
)))
;





// Entry rule entryRuleArrayConstant
entryRuleArrayConstant returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArrayConstantRule()); }
	 iv_ruleArrayConstant=ruleArrayConstant 
	 { $current=$iv_ruleArrayConstant.current; } 
	 EOF 
;

// Rule ArrayConstant
ruleArrayConstant returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getArrayConstantAccess().getArrayConstantAction_0(),
            $current);
    }
)	otherlv_1='[' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getArrayConstantAccess().getLeftSquareBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArrayConstantAccess().getListConstantListParserRuleCall_2_0()); 
	    }
		lv_list_2_0=ruleConstantList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArrayConstantRule());
	        }
       		set(
       			$current, 
       			"list",
        		lv_list_2_0, 
        		"ConstantList");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_3=']' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getArrayConstantAccess().getRightSquareBracketKeyword_3());
    }
)
;





// Entry rule entryRuleVectorConstant
entryRuleVectorConstant returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVectorConstantRule()); }
	 iv_ruleVectorConstant=ruleVectorConstant 
	 { $current=$iv_ruleVectorConstant.current; } 
	 EOF 
;

// Rule VectorConstant
ruleVectorConstant returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getVectorConstantAccess().getVectorConstantAction_0(),
            $current);
    }
)	otherlv_1='<' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getVectorConstantAccess().getLessThanSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVectorConstantAccess().getListConstantListParserRuleCall_2_0()); 
	    }
		lv_list_2_0=ruleConstantList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVectorConstantRule());
	        }
       		set(
       			$current, 
       			"list",
        		lv_list_2_0, 
        		"ConstantList");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_3='>' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getVectorConstantAccess().getGreaterThanSignKeyword_3());
    }
)
;





// Entry rule entryRuleConstantList
entryRuleConstantList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstantListRule()); }
	 iv_ruleConstantList=ruleConstantList 
	 { $current=$iv_ruleConstantList.current; } 
	 EOF 
;

// Rule ConstantList
ruleConstantList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getConstantListAccess().getTypedConstantsTypedConstantParserRuleCall_0_0()); 
	    }
		lv_typedConstants_0_0=ruleTypedConstant		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstantListRule());
	        }
       		add(
       			$current, 
       			"typedConstants",
        		lv_typedConstants_0_0, 
        		"TypedConstant");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getConstantListAccess().getCommaKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConstantListAccess().getTypedConstantsTypedConstantParserRuleCall_1_1_0()); 
	    }
		lv_typedConstants_2_0=ruleTypedConstant		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstantListRule());
	        }
       		add(
       			$current, 
       			"typedConstants",
        		lv_typedConstants_2_0, 
        		"TypedConstant");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleTypedConstant
entryRuleTypedConstant returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypedConstantRule()); }
	 iv_ruleTypedConstant=ruleTypedConstant 
	 { $current=$iv_ruleTypedConstant.current; } 
	 EOF 
;

// Rule TypedConstant
ruleTypedConstant returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getTypedConstantAccess().getTypeTypeParserRuleCall_0_0()); 
	    }
		lv_type_0_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypedConstantRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_0_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getTypedConstantAccess().getValueConstantParserRuleCall_1_0()); 
	    }
		lv_value_1_0=ruleConstant		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypedConstantRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"Constant");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleSimpleConstant
entryRuleSimpleConstant returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSimpleConstantRule()); }
	 iv_ruleSimpleConstant=ruleSimpleConstant 
	 { $current=$iv_ruleSimpleConstant.current; } 
	 EOF 
;

// Rule SimpleConstant
ruleSimpleConstant returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_value_0_1=RULE_INTEGER
		{
			newLeafNode(lv_value_0_1, grammarAccess.getSimpleConstantAccess().getValueINTEGERTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSimpleConstantRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_0_1, 
        		"INTEGER");
	    }

    |		lv_value_0_2=RULE_SIGNED_INT
		{
			newLeafNode(lv_value_0_2, grammarAccess.getSimpleConstantAccess().getValueSIGNED_INTTerminalRuleCall_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSimpleConstantRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_0_2, 
        		"SIGNED_INT");
	    }

    |		lv_value_0_3=RULE_FLOAT
		{
			newLeafNode(lv_value_0_3, grammarAccess.getSimpleConstantAccess().getValueFLOATTerminalRuleCall_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSimpleConstantRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_0_3, 
        		"FLOAT");
	    }

    |		lv_value_0_4=RULE_BOOLEAN
		{
			newLeafNode(lv_value_0_4, grammarAccess.getSimpleConstantAccess().getValueBOOLEANTerminalRuleCall_0_3()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSimpleConstantRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_0_4, 
        		"BOOLEAN");
	    }

    |		lv_value_0_5=RULE_NULL
		{
			newLeafNode(lv_value_0_5, grammarAccess.getSimpleConstantAccess().getValueNULLTerminalRuleCall_0_4()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSimpleConstantRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_0_5, 
        		"NULL");
	    }

    |		lv_value_0_6=RULE_CSTRING
		{
			newLeafNode(lv_value_0_6, grammarAccess.getSimpleConstantAccess().getValueCSTRINGTerminalRuleCall_0_5()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSimpleConstantRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_0_6, 
        		"CSTRING");
	    }

)

)
)
;





// Entry rule entryRuleMetadataNode
entryRuleMetadataNode returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMetadataNodeRule()); }
	 iv_ruleMetadataNode=ruleMetadataNode 
	 { $current=$iv_ruleMetadataNode.current; } 
	 EOF 
;

// Rule MetadataNode
ruleMetadataNode returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getMetadataNodeAccess().getMetadataNodeAction_0(),
            $current);
    }
)	otherlv_1='!' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMetadataNodeAccess().getExclamationMarkKeyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMetadataNodeAccess().getLeftCurlyBracketKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getMetadataNodeAccess().getElementsMetadataNodeElementParserRuleCall_3_0_0()); 
	    }
		lv_elements_3_0=ruleMetadataNodeElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMetadataNodeRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_3_0, 
        		"MetadataNodeElement");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getMetadataNodeAccess().getCommaKeyword_3_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMetadataNodeAccess().getElementsMetadataNodeElementParserRuleCall_3_1_1_0()); 
	    }
		lv_elements_5_0=ruleMetadataNodeElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMetadataNodeRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_5_0, 
        		"MetadataNodeElement");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getMetadataNodeAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleMetadataNodeElement
entryRuleMetadataNodeElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMetadataNodeElementRule()); }
	 iv_ruleMetadataNodeElement=ruleMetadataNodeElement 
	 { $current=$iv_ruleMetadataNodeElement.current; } 
	 EOF 
;

// Rule MetadataNodeElement
ruleMetadataNodeElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getMetadataNodeElementAccess().getValueTypedValueParserRuleCall_0_0()); 
	    }
		lv_value_0_0=ruleTypedValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMetadataNodeElementRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"TypedValue");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMetadataNodeElementAccess().getMetadataRefMetadataRefParserRuleCall_1_0()); 
	    }
		lv_metadataRef_1_0=ruleMetadataRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMetadataNodeElementRule());
	        }
       		set(
       			$current, 
       			"metadataRef",
        		lv_metadataRef_1_0, 
        		"MetadataRef");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		lv_null_2_0=RULE_NULL
		{
			newLeafNode(lv_null_2_0, grammarAccess.getMetadataNodeElementAccess().getNullNULLTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMetadataNodeElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"null",
        		lv_null_2_0, 
        		"NULL");
	    }

)
))
;





// Entry rule entryRuleMetadataString
entryRuleMetadataString returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMetadataStringRule()); }
	 iv_ruleMetadataString=ruleMetadataString 
	 { $current=$iv_ruleMetadataString.current; } 
	 EOF 
;

// Rule MetadataString
ruleMetadataString returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_name_0_0=RULE_METADATA_STRING
		{
			newLeafNode(lv_name_0_0, grammarAccess.getMetadataStringAccess().getNameMETADATA_STRINGTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMetadataStringRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"METADATA_STRING");
	    }

)
)
;





// Entry rule entryRuleTLSmodel
entryRuleTLSmodel returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getTLSmodelRule()); } 
	 iv_ruleTLSmodel=ruleTLSmodel 
	 { $current=$iv_ruleTLSmodel.current.getText(); }  
	 EOF 
;

// Rule TLSmodel
ruleTLSmodel returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='thread_local' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTLSmodelAccess().getThread_localKeyword_0()); 
    }

	kw='(' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTLSmodelAccess().getLeftParenthesisKeyword_1()); 
    }

    { 
        newCompositeNode(grammarAccess.getTLSmodelAccess().getTLSoptionParserRuleCall_2()); 
    }
    this_TLSoption_2=ruleTLSoption    {
		$current.merge(this_TLSoption_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }

	kw=')' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTLSmodelAccess().getRightParenthesisKeyword_3()); 
    }
)
    ;





// Entry rule entryRuleTLSoption
entryRuleTLSoption returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getTLSoptionRule()); } 
	 iv_ruleTLSoption=ruleTLSoption 
	 { $current=$iv_ruleTLSoption.current.getText(); }  
	 EOF 
;

// Rule TLSoption
ruleTLSoption returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='localdynamic' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTLSoptionAccess().getLocaldynamicKeyword_0()); 
    }

    |
	kw='initialexec' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTLSoptionAccess().getInitialexecKeyword_1()); 
    }

    |
	kw='localexec' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTLSoptionAccess().getLocalexecKeyword_2()); 
    }
)
    ;





// Entry rule entryRuleAddressSpace
entryRuleAddressSpace returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAddressSpaceRule()); }
	 iv_ruleAddressSpace=ruleAddressSpace 
	 { $current=$iv_ruleAddressSpace.current; } 
	 EOF 
;

// Rule AddressSpace
ruleAddressSpace returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='addrspace' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAddressSpaceAccess().getAddrspaceKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAddressSpaceAccess().getLeftParenthesisKeyword_1());
    }
(
(
		lv_value_2_0=RULE_INTEGER
		{
			newLeafNode(lv_value_2_0, grammarAccess.getAddressSpaceAccess().getValueINTEGERTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAddressSpaceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"INTEGER");
	    }

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getAddressSpaceAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleSection
entryRuleSection returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getSectionRule()); } 
	 iv_ruleSection=ruleSection 
	 { $current=$iv_ruleSection.current.getText(); }  
	 EOF 
;

// Rule Section
ruleSection returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='section' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSectionAccess().getSectionKeyword_0()); 
    }
    this_STRING_1=RULE_STRING    {
		$current.merge(this_STRING_1);
    }

    { 
    newLeafNode(this_STRING_1, grammarAccess.getSectionAccess().getSTRINGTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleAlign
entryRuleAlign returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getAlignRule()); } 
	 iv_ruleAlign=ruleAlign 
	 { $current=$iv_ruleAlign.current.getText(); }  
	 EOF 
;

// Rule Align
ruleAlign returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='align' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAlignAccess().getAlignKeyword_0()); 
    }
    this_INTEGER_1=RULE_INTEGER    {
		$current.merge(this_INTEGER_1);
    }

    { 
    newLeafNode(this_INTEGER_1, grammarAccess.getAlignAccess().getINTEGERTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleGc
entryRuleGc returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getGcRule()); } 
	 iv_ruleGc=ruleGc 
	 { $current=$iv_ruleGc.current.getText(); }  
	 EOF 
;

// Rule Gc
ruleGc returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='gc' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getGcAccess().getGcKeyword_0()); 
    }
    this_STRING_1=RULE_STRING    {
		$current.merge(this_STRING_1);
    }

    { 
    newLeafNode(this_STRING_1, grammarAccess.getGcAccess().getSTRINGTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleFunction
entryRuleFunction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFunctionRule()); }
	 iv_ruleFunction=ruleFunction 
	 { $current=$iv_ruleFunction.current; } 
	 EOF 
;

// Rule Function
ruleFunction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getFunctionAccess().getFunctionDefParserRuleCall_0()); 
    }
    this_FunctionDef_0=ruleFunctionDef
    { 
        $current = $this_FunctionDef_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getFunctionAccess().getFunctionDeclParserRuleCall_1()); 
    }
    this_FunctionDecl_1=ruleFunctionDecl
    { 
        $current = $this_FunctionDecl_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleFunctionDef
entryRuleFunctionDef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFunctionDefRule()); }
	 iv_ruleFunctionDef=ruleFunctionDef 
	 { $current=$iv_ruleFunctionDef.current; } 
	 EOF 
;

// Rule FunctionDef
ruleFunctionDef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='define' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFunctionDefAccess().getDefineKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionDefAccess().getHeaderFunctionHeaderParserRuleCall_1_0()); 
	    }
		lv_header_1_0=ruleFunctionHeader		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionDefRule());
	        }
       		set(
       			$current, 
       			"header",
        		lv_header_1_0, 
        		"FunctionHeader");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFunctionDefAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionDefAccess().getBasicBlocksBasicBlockParserRuleCall_3_0()); 
	    }
		lv_basicBlocks_3_0=ruleBasicBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionDefRule());
	        }
       		add(
       			$current, 
       			"basicBlocks",
        		lv_basicBlocks_3_0, 
        		"BasicBlock");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getFunctionDefAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleFunctionDecl
entryRuleFunctionDecl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFunctionDeclRule()); }
	 iv_ruleFunctionDecl=ruleFunctionDecl 
	 { $current=$iv_ruleFunctionDecl.current; } 
	 EOF 
;

// Rule FunctionDecl
ruleFunctionDecl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='declare' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFunctionDeclAccess().getDeclareKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionDeclAccess().getHeaderFunctionHeaderParserRuleCall_1_0()); 
	    }
		lv_header_1_0=ruleFunctionHeader		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionDeclRule());
	        }
       		set(
       			$current, 
       			"header",
        		lv_header_1_0, 
        		"FunctionHeader");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleFunctionHeader
entryRuleFunctionHeader returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFunctionHeaderRule()); }
	 iv_ruleFunctionHeader=ruleFunctionHeader 
	 { $current=$iv_ruleFunctionHeader.current; } 
	 EOF 
;

// Rule FunctionHeader
ruleFunctionHeader returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionHeaderAccess().getLinkageLinkageParserRuleCall_0_0()); 
	    }
		lv_linkage_0_0=ruleLinkage		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionHeaderRule());
	        }
       		set(
       			$current, 
       			"linkage",
        		lv_linkage_0_0, 
        		"Linkage");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionHeaderAccess().getVisibilityVisibilityParserRuleCall_1_0()); 
	    }
		lv_visibility_1_0=ruleVisibility		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionHeaderRule());
	        }
       		set(
       			$current, 
       			"visibility",
        		lv_visibility_1_0, 
        		"Visibility");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionHeaderAccess().getCconvCConvParserRuleCall_2_0()); 
	    }
		lv_cconv_2_0=ruleCConv		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionHeaderRule());
	        }
       		set(
       			$current, 
       			"cconv",
        		lv_cconv_2_0, 
        		"CConv");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_3='unnamed_addr' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getFunctionHeaderAccess().getUnnamed_addrKeyword_3());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionHeaderAccess().getRettypeAttrsParameterAttributesParserRuleCall_4_0()); 
	    }
		lv_rettypeAttrs_4_0=ruleParameterAttributes		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionHeaderRule());
	        }
       		set(
       			$current, 
       			"rettypeAttrs",
        		lv_rettypeAttrs_4_0, 
        		"ParameterAttributes");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionHeaderAccess().getRettypeTypeParserRuleCall_5_0()); 
	    }
		lv_rettype_5_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionHeaderRule());
	        }
       		set(
       			$current, 
       			"rettype",
        		lv_rettype_5_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_name_6_0=RULE_GLOBAL_ID
		{
			newLeafNode(lv_name_6_0, grammarAccess.getFunctionHeaderAccess().getNameGLOBAL_IDTerminalRuleCall_6_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionHeaderRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_6_0, 
        		"GLOBAL_ID");
	    }

)
)	otherlv_7='(' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getFunctionHeaderAccess().getLeftParenthesisKeyword_7());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionHeaderAccess().getParametersParametersParserRuleCall_8_0()); 
	    }
		lv_parameters_8_0=ruleParameters		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionHeaderRule());
	        }
       		set(
       			$current, 
       			"parameters",
        		lv_parameters_8_0, 
        		"Parameters");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_9=')' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getFunctionHeaderAccess().getRightParenthesisKeyword_9());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionHeaderAccess().getAttrsFunctionAttributesParserRuleCall_10_0()); 
	    }
		lv_attrs_10_0=ruleFunctionAttributes		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionHeaderRule());
	        }
       		set(
       			$current, 
       			"attrs",
        		lv_attrs_10_0, 
        		"FunctionAttributes");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionHeaderAccess().getSectionSectionParserRuleCall_11_0()); 
	    }
		lv_section_11_0=ruleSection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionHeaderRule());
	        }
       		set(
       			$current, 
       			"section",
        		lv_section_11_0, 
        		"Section");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionHeaderAccess().getAlignAlignParserRuleCall_12_0()); 
	    }
		lv_align_12_0=ruleAlign		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionHeaderRule());
	        }
       		set(
       			$current, 
       			"align",
        		lv_align_12_0, 
        		"Align");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionHeaderAccess().getGcGcParserRuleCall_13_0()); 
	    }
		lv_gc_13_0=ruleGc		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionHeaderRule());
	        }
       		set(
       			$current, 
       			"gc",
        		lv_gc_13_0, 
        		"Gc");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionHeaderAccess().getFunctionPrefixFunctionPrefixParserRuleCall_14_0()); 
	    }
		lv_functionPrefix_14_0=ruleFunctionPrefix		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionHeaderRule());
	        }
       		set(
       			$current, 
       			"functionPrefix",
        		lv_functionPrefix_14_0, 
        		"FunctionPrefix");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleFunctionPrefix
entryRuleFunctionPrefix returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFunctionPrefixRule()); }
	 iv_ruleFunctionPrefix=ruleFunctionPrefix 
	 { $current=$iv_ruleFunctionPrefix.current; } 
	 EOF 
;

// Rule FunctionPrefix
ruleFunctionPrefix returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='prefix' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFunctionPrefixAccess().getPrefixKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionPrefixAccess().getValueTypedConstantParserRuleCall_1_0()); 
	    }
		lv_value_1_0=ruleTypedConstant		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionPrefixRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"TypedConstant");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleParameters
entryRuleParameters returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParametersRule()); }
	 iv_ruleParameters=ruleParameters 
	 { $current=$iv_ruleParameters.current; } 
	 EOF 
;

// Rule Parameters
ruleParameters returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getParametersAccess().getParametersAction_0(),
            $current);
    }
)(((
(
		{ 
	        newCompositeNode(grammarAccess.getParametersAccess().getParametersParameterParserRuleCall_1_0_0_0()); 
	    }
		lv_parameters_1_0=ruleParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParametersRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_1_0, 
        		"Parameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getParametersAccess().getCommaKeyword_1_0_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getParametersAccess().getParametersParameterParserRuleCall_1_0_1_1_0()); 
	    }
		lv_parameters_3_0=ruleParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParametersRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_3_0, 
        		"Parameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getParametersAccess().getCommaKeyword_1_0_2_0());
    }
(
(
		lv_vararg_5_0=	'...' 
    {
        newLeafNode(lv_vararg_5_0, grammarAccess.getParametersAccess().getVarargFullStopFullStopFullStopKeyword_1_0_2_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getParametersRule());
	        }
       		setWithLastConsumed($current, "vararg", lv_vararg_5_0, "...");
	    }

)
))?)?
    |(
(
		lv_vararg_6_0=	'...' 
    {
        newLeafNode(lv_vararg_6_0, grammarAccess.getParametersAccess().getVarargFullStopFullStopFullStopKeyword_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getParametersRule());
	        }
       		setWithLastConsumed($current, "vararg", lv_vararg_6_0, "...");
	    }

)
)))
;





// Entry rule entryRuleFunctionAttributes
entryRuleFunctionAttributes returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFunctionAttributesRule()); }
	 iv_ruleFunctionAttributes=ruleFunctionAttributes 
	 { $current=$iv_ruleFunctionAttributes.current; } 
	 EOF 
;

// Rule FunctionAttributes
ruleFunctionAttributes returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionAttributesAccess().getFunctionAttributesFunctionAttributeParserRuleCall_0_0()); 
	    }
		lv_functionAttributes_0_0=ruleFunctionAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionAttributesRule());
	        }
       		add(
       			$current, 
       			"functionAttributes",
        		lv_functionAttributes_0_0, 
        		"FunctionAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionAttributesAccess().getAlignstackAlignStackParserRuleCall_1_0_0()); 
	    }
		lv_alignstack_1_0=ruleAlignStack		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionAttributesRule());
	        }
       		add(
       			$current, 
       			"alignstack",
        		lv_alignstack_1_0, 
        		"AlignStack");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFunctionAttributesAccess().getLeftParenthesisKeyword_1_1());
    }
(
(
		lv_alignstackValue_3_0=RULE_INTEGER
		{
			newLeafNode(lv_alignstackValue_3_0, grammarAccess.getFunctionAttributesAccess().getAlignstackValueINTEGERTerminalRuleCall_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionAttributesRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"alignstackValue",
        		lv_alignstackValue_3_0, 
        		"INTEGER");
	    }

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getFunctionAttributesAccess().getRightParenthesisKeyword_1_3());
    }
)
    |(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionAttributesRule());
	        }
        }
	otherlv_5=RULE_ATTRIBUTE_ID
	{
		newLeafNode(otherlv_5, grammarAccess.getFunctionAttributesAccess().getFunctionAttributeGroupRefsAttributeGroupCrossReference_2_0()); 
	}

)
))+
;





// Entry rule entryRuleAlignStack
entryRuleAlignStack returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAlignStackRule()); }
	 iv_ruleAlignStack=ruleAlignStack 
	 { $current=$iv_ruleAlignStack.current; } 
	 EOF 
;

// Rule AlignStack
ruleAlignStack returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getAlignStackAccess().getAlignStackAction_0(),
            $current);
    }
)	otherlv_1='alignstack' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAlignStackAccess().getAlignstackKeyword_1());
    }
)
;





// Entry rule entryRuleFunctionAttribute
entryRuleFunctionAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFunctionAttributeRule()); }
	 iv_ruleFunctionAttribute=ruleFunctionAttribute 
	 { $current=$iv_ruleFunctionAttribute.current; } 
	 EOF 
;

// Rule FunctionAttribute
ruleFunctionAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_attribute_0_1=	'alwaysinline' 
    {
        newLeafNode(lv_attribute_0_1, grammarAccess.getFunctionAttributeAccess().getAttributeAlwaysinlineKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionAttributeRule());
	        }
       		setWithLastConsumed($current, "attribute", lv_attribute_0_1, null);
	    }

    |		lv_attribute_0_2=	'builtin' 
    {
        newLeafNode(lv_attribute_0_2, grammarAccess.getFunctionAttributeAccess().getAttributeBuiltinKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionAttributeRule());
	        }
       		setWithLastConsumed($current, "attribute", lv_attribute_0_2, null);
	    }

    |		lv_attribute_0_3=	'cold' 
    {
        newLeafNode(lv_attribute_0_3, grammarAccess.getFunctionAttributeAccess().getAttributeColdKeyword_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionAttributeRule());
	        }
       		setWithLastConsumed($current, "attribute", lv_attribute_0_3, null);
	    }

    |		lv_attribute_0_4=	'inlinehint' 
    {
        newLeafNode(lv_attribute_0_4, grammarAccess.getFunctionAttributeAccess().getAttributeInlinehintKeyword_0_3());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionAttributeRule());
	        }
       		setWithLastConsumed($current, "attribute", lv_attribute_0_4, null);
	    }

    |		lv_attribute_0_5=	'naked' 
    {
        newLeafNode(lv_attribute_0_5, grammarAccess.getFunctionAttributeAccess().getAttributeNakedKeyword_0_4());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionAttributeRule());
	        }
       		setWithLastConsumed($current, "attribute", lv_attribute_0_5, null);
	    }

    |		lv_attribute_0_6=	'nobuiltin' 
    {
        newLeafNode(lv_attribute_0_6, grammarAccess.getFunctionAttributeAccess().getAttributeNobuiltinKeyword_0_5());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionAttributeRule());
	        }
       		setWithLastConsumed($current, "attribute", lv_attribute_0_6, null);
	    }

    |		lv_attribute_0_7=	'noduplicate' 
    {
        newLeafNode(lv_attribute_0_7, grammarAccess.getFunctionAttributeAccess().getAttributeNoduplicateKeyword_0_6());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionAttributeRule());
	        }
       		setWithLastConsumed($current, "attribute", lv_attribute_0_7, null);
	    }

    |		lv_attribute_0_8=	'noimplicitfloat' 
    {
        newLeafNode(lv_attribute_0_8, grammarAccess.getFunctionAttributeAccess().getAttributeNoimplicitfloatKeyword_0_7());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionAttributeRule());
	        }
       		setWithLastConsumed($current, "attribute", lv_attribute_0_8, null);
	    }

    |		lv_attribute_0_9=	'noinline' 
    {
        newLeafNode(lv_attribute_0_9, grammarAccess.getFunctionAttributeAccess().getAttributeNoinlineKeyword_0_8());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionAttributeRule());
	        }
       		setWithLastConsumed($current, "attribute", lv_attribute_0_9, null);
	    }

    |		lv_attribute_0_10=	'nonlazybind' 
    {
        newLeafNode(lv_attribute_0_10, grammarAccess.getFunctionAttributeAccess().getAttributeNonlazybindKeyword_0_9());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionAttributeRule());
	        }
       		setWithLastConsumed($current, "attribute", lv_attribute_0_10, null);
	    }

    |		lv_attribute_0_11=	'noredzone' 
    {
        newLeafNode(lv_attribute_0_11, grammarAccess.getFunctionAttributeAccess().getAttributeNoredzoneKeyword_0_10());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionAttributeRule());
	        }
       		setWithLastConsumed($current, "attribute", lv_attribute_0_11, null);
	    }

    |		lv_attribute_0_12=	'noreturn' 
    {
        newLeafNode(lv_attribute_0_12, grammarAccess.getFunctionAttributeAccess().getAttributeNoreturnKeyword_0_11());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionAttributeRule());
	        }
       		setWithLastConsumed($current, "attribute", lv_attribute_0_12, null);
	    }

    |		lv_attribute_0_13=	'nounwind' 
    {
        newLeafNode(lv_attribute_0_13, grammarAccess.getFunctionAttributeAccess().getAttributeNounwindKeyword_0_12());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionAttributeRule());
	        }
       		setWithLastConsumed($current, "attribute", lv_attribute_0_13, null);
	    }

    |		lv_attribute_0_14=	'optnone' 
    {
        newLeafNode(lv_attribute_0_14, grammarAccess.getFunctionAttributeAccess().getAttributeOptnoneKeyword_0_13());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionAttributeRule());
	        }
       		setWithLastConsumed($current, "attribute", lv_attribute_0_14, null);
	    }

    |		lv_attribute_0_15=	'optsize' 
    {
        newLeafNode(lv_attribute_0_15, grammarAccess.getFunctionAttributeAccess().getAttributeOptsizeKeyword_0_14());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionAttributeRule());
	        }
       		setWithLastConsumed($current, "attribute", lv_attribute_0_15, null);
	    }

    |		lv_attribute_0_16=	'readnone' 
    {
        newLeafNode(lv_attribute_0_16, grammarAccess.getFunctionAttributeAccess().getAttributeReadnoneKeyword_0_15());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionAttributeRule());
	        }
       		setWithLastConsumed($current, "attribute", lv_attribute_0_16, null);
	    }

    |		lv_attribute_0_17=	'readonly' 
    {
        newLeafNode(lv_attribute_0_17, grammarAccess.getFunctionAttributeAccess().getAttributeReadonlyKeyword_0_16());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionAttributeRule());
	        }
       		setWithLastConsumed($current, "attribute", lv_attribute_0_17, null);
	    }

    |		lv_attribute_0_18=	'returns_twice' 
    {
        newLeafNode(lv_attribute_0_18, grammarAccess.getFunctionAttributeAccess().getAttributeReturns_twiceKeyword_0_17());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionAttributeRule());
	        }
       		setWithLastConsumed($current, "attribute", lv_attribute_0_18, null);
	    }

    |		lv_attribute_0_19=	'sanitize_address' 
    {
        newLeafNode(lv_attribute_0_19, grammarAccess.getFunctionAttributeAccess().getAttributeSanitize_addressKeyword_0_18());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionAttributeRule());
	        }
       		setWithLastConsumed($current, "attribute", lv_attribute_0_19, null);
	    }

    |		lv_attribute_0_20=	'sanitize_memory' 
    {
        newLeafNode(lv_attribute_0_20, grammarAccess.getFunctionAttributeAccess().getAttributeSanitize_memoryKeyword_0_19());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionAttributeRule());
	        }
       		setWithLastConsumed($current, "attribute", lv_attribute_0_20, null);
	    }

    |		lv_attribute_0_21=	'sanitize_thread' 
    {
        newLeafNode(lv_attribute_0_21, grammarAccess.getFunctionAttributeAccess().getAttributeSanitize_threadKeyword_0_20());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionAttributeRule());
	        }
       		setWithLastConsumed($current, "attribute", lv_attribute_0_21, null);
	    }

    |		lv_attribute_0_22=	'ssp' 
    {
        newLeafNode(lv_attribute_0_22, grammarAccess.getFunctionAttributeAccess().getAttributeSspKeyword_0_21());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionAttributeRule());
	        }
       		setWithLastConsumed($current, "attribute", lv_attribute_0_22, null);
	    }

    |		lv_attribute_0_23=	'sspreq' 
    {
        newLeafNode(lv_attribute_0_23, grammarAccess.getFunctionAttributeAccess().getAttributeSspreqKeyword_0_22());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionAttributeRule());
	        }
       		setWithLastConsumed($current, "attribute", lv_attribute_0_23, null);
	    }

    |		lv_attribute_0_24=	'sspstrong' 
    {
        newLeafNode(lv_attribute_0_24, grammarAccess.getFunctionAttributeAccess().getAttributeSspstrongKeyword_0_23());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionAttributeRule());
	        }
       		setWithLastConsumed($current, "attribute", lv_attribute_0_24, null);
	    }

    |		lv_attribute_0_25=	'uwtable' 
    {
        newLeafNode(lv_attribute_0_25, grammarAccess.getFunctionAttributeAccess().getAttributeUwtableKeyword_0_24());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionAttributeRule());
	        }
       		setWithLastConsumed($current, "attribute", lv_attribute_0_25, null);
	    }

    |		lv_attribute_0_26=	'address_safety' 
    {
        newLeafNode(lv_attribute_0_26, grammarAccess.getFunctionAttributeAccess().getAttributeAddress_safetyKeyword_0_25());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionAttributeRule());
	        }
       		setWithLastConsumed($current, "attribute", lv_attribute_0_26, null);
	    }

    |		lv_attribute_0_27=	'thread_safety' 
    {
        newLeafNode(lv_attribute_0_27, grammarAccess.getFunctionAttributeAccess().getAttributeThread_safetyKeyword_0_26());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionAttributeRule());
	        }
       		setWithLastConsumed($current, "attribute", lv_attribute_0_27, null);
	    }

    |		lv_attribute_0_28=	'uninitialized_checks' 
    {
        newLeafNode(lv_attribute_0_28, grammarAccess.getFunctionAttributeAccess().getAttributeUninitialized_checksKeyword_0_27());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionAttributeRule());
	        }
       		setWithLastConsumed($current, "attribute", lv_attribute_0_28, null);
	    }

)

)
)
;





// Entry rule entryRuleBasicBlock
entryRuleBasicBlock returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBasicBlockRule()); }
	 iv_ruleBasicBlock=ruleBasicBlock 
	 { $current=$iv_ruleBasicBlock.current; } 
	 EOF 
;

// Rule BasicBlock
ruleBasicBlock returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getBasicBlockAccess().getNameBasicBlockNameParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleBasicBlockName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBasicBlockRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"BasicBlockName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getBasicBlockAccess().getInstructionsStartingInstructionParserRuleCall_1_0()); 
	    }
		lv_instructions_1_0=ruleStartingInstruction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBasicBlockRule());
	        }
       		add(
       			$current, 
       			"instructions",
        		lv_instructions_1_0, 
        		"StartingInstruction");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getBasicBlockAccess().getInstructionsMiddleInstructionParserRuleCall_2_0()); 
	    }
		lv_instructions_2_0=ruleMiddleInstruction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBasicBlockRule());
	        }
       		add(
       			$current, 
       			"instructions",
        		lv_instructions_2_0, 
        		"MiddleInstruction");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getBasicBlockAccess().getInstructionsTerminatorInstructionParserRuleCall_3_0()); 
	    }
		lv_instructions_3_0=ruleTerminatorInstruction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBasicBlockRule());
	        }
       		add(
       			$current, 
       			"instructions",
        		lv_instructions_3_0, 
        		"TerminatorInstruction");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleBasicBlockName
entryRuleBasicBlockName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getBasicBlockNameRule()); } 
	 iv_ruleBasicBlockName=ruleBasicBlockName 
	 { $current=$iv_ruleBasicBlockName.current.getText(); }  
	 EOF 
;

// Rule BasicBlockName
ruleBasicBlockName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_BASIC_BLOCK_ID_0=RULE_BASIC_BLOCK_ID    {
		$current.merge(this_BASIC_BLOCK_ID_0);
    }

    { 
    newLeafNode(this_BASIC_BLOCK_ID_0, grammarAccess.getBasicBlockNameAccess().getBASIC_BLOCK_IDTerminalRuleCall()); 
    }
)?
    ;





// Entry rule entryRuleMetadataSuffix
entryRuleMetadataSuffix returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMetadataSuffixRule()); }
	 iv_ruleMetadataSuffix=ruleMetadataSuffix 
	 { $current=$iv_ruleMetadataSuffix.current; } 
	 EOF 
;

// Rule MetadataSuffix
ruleMetadataSuffix returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0=',' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMetadataSuffixAccess().getCommaKeyword_0());
    }
(
(
		lv_name_1_0=RULE_META_NAME
		{
			newLeafNode(lv_name_1_0, grammarAccess.getMetadataSuffixAccess().getNameMETA_NAMETerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMetadataSuffixRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"META_NAME");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMetadataSuffixAccess().getValueMetadataRefParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleMetadataRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMetadataSuffixRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"MetadataRef");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleStartingInstruction
entryRuleStartingInstruction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStartingInstructionRule()); }
	 iv_ruleStartingInstruction=ruleStartingInstruction 
	 { $current=$iv_ruleStartingInstruction.current; } 
	 EOF 
;

// Rule StartingInstruction
ruleStartingInstruction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getStartingInstructionAccess().getInstruction_phiParserRuleCall_0()); 
    }
    this_Instruction_phi_0=ruleInstruction_phi
    { 
        $current = $this_Instruction_phi_0.current; 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStartingInstructionAccess().getMetadataMetadataSuffixParserRuleCall_1_0()); 
	    }
		lv_metadata_1_0=ruleMetadataSuffix		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStartingInstructionRule());
	        }
       		add(
       			$current, 
       			"metadata",
        		lv_metadata_1_0, 
        		"MetadataSuffix");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleMiddleInstruction
entryRuleMiddleInstruction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMiddleInstructionRule()); }
	 iv_ruleMiddleInstruction=ruleMiddleInstruction 
	 { $current=$iv_ruleMiddleInstruction.current; } 
	 EOF 
;

// Rule MiddleInstruction
ruleMiddleInstruction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    { 
        newCompositeNode(grammarAccess.getMiddleInstructionAccess().getNamedMiddleInstructionParserRuleCall_0_0()); 
    }
    this_NamedMiddleInstruction_0=ruleNamedMiddleInstruction
    { 
        $current = $this_NamedMiddleInstruction_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMiddleInstructionAccess().getInstruction_storeParserRuleCall_0_1()); 
    }
    this_Instruction_store_1=ruleInstruction_store
    { 
        $current = $this_Instruction_store_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMiddleInstructionAccess().getInstruction_fenceParserRuleCall_0_2()); 
    }
    this_Instruction_fence_2=ruleInstruction_fence
    { 
        $current = $this_Instruction_fence_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMiddleInstructionAccess().getInstruction_call_voidParserRuleCall_0_3()); 
    }
    this_Instruction_call_void_3=ruleInstruction_call_void
    { 
        $current = $this_Instruction_call_void_3.current; 
        afterParserOrEnumRuleCall();
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMiddleInstructionAccess().getMetadataMetadataSuffixParserRuleCall_1_0()); 
	    }
		lv_metadata_4_0=ruleMetadataSuffix		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMiddleInstructionRule());
	        }
       		add(
       			$current, 
       			"metadata",
        		lv_metadata_4_0, 
        		"MetadataSuffix");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleNamedMiddleInstruction
entryRuleNamedMiddleInstruction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNamedMiddleInstructionRule()); }
	 iv_ruleNamedMiddleInstruction=ruleNamedMiddleInstruction 
	 { $current=$iv_ruleNamedMiddleInstruction.current; } 
	 EOF 
;

// Rule NamedMiddleInstruction
ruleNamedMiddleInstruction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getNamedMiddleInstructionAccess().getBinaryInstructionParserRuleCall_0()); 
    }
    this_BinaryInstruction_0=ruleBinaryInstruction
    { 
        $current = $this_BinaryInstruction_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNamedMiddleInstructionAccess().getBitwiseBinaryInstructionParserRuleCall_1()); 
    }
    this_BitwiseBinaryInstruction_1=ruleBitwiseBinaryInstruction
    { 
        $current = $this_BitwiseBinaryInstruction_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNamedMiddleInstructionAccess().getVectorInstructionParserRuleCall_2()); 
    }
    this_VectorInstruction_2=ruleVectorInstruction
    { 
        $current = $this_VectorInstruction_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNamedMiddleInstructionAccess().getAggregateInstructionParserRuleCall_3()); 
    }
    this_AggregateInstruction_3=ruleAggregateInstruction
    { 
        $current = $this_AggregateInstruction_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNamedMiddleInstructionAccess().getInstruction_allocaParserRuleCall_4()); 
    }
    this_Instruction_alloca_4=ruleInstruction_alloca
    { 
        $current = $this_Instruction_alloca_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNamedMiddleInstructionAccess().getInstruction_loadParserRuleCall_5()); 
    }
    this_Instruction_load_5=ruleInstruction_load
    { 
        $current = $this_Instruction_load_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNamedMiddleInstructionAccess().getInstruction_getelementptrParserRuleCall_6()); 
    }
    this_Instruction_getelementptr_6=ruleInstruction_getelementptr
    { 
        $current = $this_Instruction_getelementptr_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNamedMiddleInstructionAccess().getInstruction_cmpxchgParserRuleCall_7()); 
    }
    this_Instruction_cmpxchg_7=ruleInstruction_cmpxchg
    { 
        $current = $this_Instruction_cmpxchg_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNamedMiddleInstructionAccess().getInstruction_atomicrmwParserRuleCall_8()); 
    }
    this_Instruction_atomicrmw_8=ruleInstruction_atomicrmw
    { 
        $current = $this_Instruction_atomicrmw_8.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNamedMiddleInstructionAccess().getConversionInstructionParserRuleCall_9()); 
    }
    this_ConversionInstruction_9=ruleConversionInstruction
    { 
        $current = $this_ConversionInstruction_9.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNamedMiddleInstructionAccess().getOtherInstructionParserRuleCall_10()); 
    }
    this_OtherInstruction_10=ruleOtherInstruction
    { 
        $current = $this_OtherInstruction_10.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNamedMiddleInstructionAccess().getInstruction_call_nonVoidParserRuleCall_11()); 
    }
    this_Instruction_call_nonVoid_11=ruleInstruction_call_nonVoid
    { 
        $current = $this_Instruction_call_nonVoid_11.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleParamName
entryRuleParamName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getParamNameRule()); } 
	 iv_ruleParamName=ruleParamName 
	 { $current=$iv_ruleParamName.current.getText(); }  
	 EOF 
;

// Rule ParamName
ruleParamName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_LOCAL_ID_0=RULE_LOCAL_ID    {
		$current.merge(this_LOCAL_ID_0);
    }

    { 
    newLeafNode(this_LOCAL_ID_0, grammarAccess.getParamNameAccess().getLOCAL_IDTerminalRuleCall()); 
    }
)?
    ;





// Entry rule entryRuleLocalName
entryRuleLocalName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getLocalNameRule()); } 
	 iv_ruleLocalName=ruleLocalName 
	 { $current=$iv_ruleLocalName.current.getText(); }  
	 EOF 
;

// Rule LocalName
ruleLocalName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_LOCAL_ID_0=RULE_LOCAL_ID    {
		$current.merge(this_LOCAL_ID_0);
    }

    { 
    newLeafNode(this_LOCAL_ID_0, grammarAccess.getLocalNameAccess().getLOCAL_IDTerminalRuleCall_0()); 
    }
(    this_WS_1=RULE_WS    {
		$current.merge(this_WS_1);
    }

    { 
    newLeafNode(this_WS_1, grammarAccess.getLocalNameAccess().getWSTerminalRuleCall_1()); 
    }
)*
	kw='=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLocalNameAccess().getEqualsSignKeyword_2()); 
    }
)?
    ;





// Entry rule entryRuleGlobalName
entryRuleGlobalName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getGlobalNameRule()); } 
	 iv_ruleGlobalName=ruleGlobalName 
	 { $current=$iv_ruleGlobalName.current.getText(); }  
	 EOF 
;

// Rule GlobalName
ruleGlobalName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_GLOBAL_ID_0=RULE_GLOBAL_ID    {
		$current.merge(this_GLOBAL_ID_0);
    }

    { 
    newLeafNode(this_GLOBAL_ID_0, grammarAccess.getGlobalNameAccess().getGLOBAL_IDTerminalRuleCall_0()); 
    }
(    this_WS_1=RULE_WS    {
		$current.merge(this_WS_1);
    }

    { 
    newLeafNode(this_WS_1, grammarAccess.getGlobalNameAccess().getWSTerminalRuleCall_1()); 
    }
)*
	kw='=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getGlobalNameAccess().getEqualsSignKeyword_2()); 
    }
)?
    ;





// Entry rule entryRuleTerminatorInstruction
entryRuleTerminatorInstruction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTerminatorInstructionRule()); }
	 iv_ruleTerminatorInstruction=ruleTerminatorInstruction 
	 { $current=$iv_ruleTerminatorInstruction.current; } 
	 EOF 
;

// Rule TerminatorInstruction
ruleTerminatorInstruction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    { 
        newCompositeNode(grammarAccess.getTerminatorInstructionAccess().getNamedTerminatorInstructionParserRuleCall_0_0()); 
    }
    this_NamedTerminatorInstruction_0=ruleNamedTerminatorInstruction
    { 
        $current = $this_NamedTerminatorInstruction_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTerminatorInstructionAccess().getInstruction_retParserRuleCall_0_1()); 
    }
    this_Instruction_ret_1=ruleInstruction_ret
    { 
        $current = $this_Instruction_ret_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTerminatorInstructionAccess().getInstruction_brParserRuleCall_0_2()); 
    }
    this_Instruction_br_2=ruleInstruction_br
    { 
        $current = $this_Instruction_br_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTerminatorInstructionAccess().getInstruction_switchParserRuleCall_0_3()); 
    }
    this_Instruction_switch_3=ruleInstruction_switch
    { 
        $current = $this_Instruction_switch_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTerminatorInstructionAccess().getInstruction_indirectbrParserRuleCall_0_4()); 
    }
    this_Instruction_indirectbr_4=ruleInstruction_indirectbr
    { 
        $current = $this_Instruction_indirectbr_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTerminatorInstructionAccess().getInstruction_resumeParserRuleCall_0_5()); 
    }
    this_Instruction_resume_5=ruleInstruction_resume
    { 
        $current = $this_Instruction_resume_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTerminatorInstructionAccess().getInstruction_unreachableParserRuleCall_0_6()); 
    }
    this_Instruction_unreachable_6=ruleInstruction_unreachable
    { 
        $current = $this_Instruction_unreachable_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTerminatorInstructionAccess().getInstruction_invoke_voidParserRuleCall_0_7()); 
    }
    this_Instruction_invoke_void_7=ruleInstruction_invoke_void
    { 
        $current = $this_Instruction_invoke_void_7.current; 
        afterParserOrEnumRuleCall();
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getTerminatorInstructionAccess().getMetadataMetadataSuffixParserRuleCall_1_0()); 
	    }
		lv_metadata_8_0=ruleMetadataSuffix		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTerminatorInstructionRule());
	        }
       		add(
       			$current, 
       			"metadata",
        		lv_metadata_8_0, 
        		"MetadataSuffix");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleNamedTerminatorInstruction
entryRuleNamedTerminatorInstruction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNamedTerminatorInstructionRule()); }
	 iv_ruleNamedTerminatorInstruction=ruleNamedTerminatorInstruction 
	 { $current=$iv_ruleNamedTerminatorInstruction.current; } 
	 EOF 
;

// Rule NamedTerminatorInstruction
ruleNamedTerminatorInstruction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getNamedTerminatorInstructionAccess().getInstruction_invoke_nonVoidParserRuleCall()); 
    }
    this_Instruction_invoke_nonVoid_0=ruleInstruction_invoke_nonVoid
    { 
        $current = $this_Instruction_invoke_nonVoid_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleInstruction_ret
entryRuleInstruction_ret returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstruction_retRule()); }
	 iv_ruleInstruction_ret=ruleInstruction_ret 
	 { $current=$iv_ruleInstruction_ret.current; } 
	 EOF 
;

// Rule Instruction_ret
ruleInstruction_ret returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_opcode_0_0=	'ret' 
    {
        newLeafNode(lv_opcode_0_0, grammarAccess.getInstruction_retAccess().getOpcodeRetKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstruction_retRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_0_0, "ret");
	    }

)
)((
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_retAccess().getValTypedValueParserRuleCall_1_0_0()); 
	    }
		lv_val_1_0=ruleTypedValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_retRule());
	        }
       		set(
       			$current, 
       			"val",
        		lv_val_1_0, 
        		"TypedValue");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |	otherlv_2='void' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInstruction_retAccess().getVoidKeyword_1_1());
    }
))
;





// Entry rule entryRuleInstruction_br
entryRuleInstruction_br returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstruction_brRule()); }
	 iv_ruleInstruction_br=ruleInstruction_br 
	 { $current=$iv_ruleInstruction_br.current; } 
	 EOF 
;

// Rule Instruction_br
ruleInstruction_br returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_opcode_0_0=	'br' 
    {
        newLeafNode(lv_opcode_0_0, grammarAccess.getInstruction_brAccess().getOpcodeBrKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstruction_brRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_0_0, "br");
	    }

)
)(((
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_brAccess().getConditionTypedValueParserRuleCall_1_0_0_0()); 
	    }
		lv_condition_1_0=ruleTypedValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_brRule());
	        }
       		set(
       			$current, 
       			"condition",
        		lv_condition_1_0, 
        		"TypedValue");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInstruction_brAccess().getCommaKeyword_1_0_1());
    }
	otherlv_3='label' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getInstruction_brAccess().getLabelKeyword_1_0_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_brAccess().getTrueBasicBlockRefParserRuleCall_1_0_3_0()); 
	    }
		lv_true_4_0=ruleBasicBlockRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_brRule());
	        }
       		set(
       			$current, 
       			"true",
        		lv_true_4_0, 
        		"BasicBlockRef");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getInstruction_brAccess().getCommaKeyword_1_0_4());
    }
	otherlv_6='label' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getInstruction_brAccess().getLabelKeyword_1_0_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_brAccess().getFalseBasicBlockRefParserRuleCall_1_0_6_0()); 
	    }
		lv_false_7_0=ruleBasicBlockRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_brRule());
	        }
       		set(
       			$current, 
       			"false",
        		lv_false_7_0, 
        		"BasicBlockRef");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_8='label' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getInstruction_brAccess().getLabelKeyword_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_brAccess().getUnconditionalBasicBlockRefParserRuleCall_1_1_1_0()); 
	    }
		lv_unconditional_9_0=ruleBasicBlockRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_brRule());
	        }
       		set(
       			$current, 
       			"unconditional",
        		lv_unconditional_9_0, 
        		"BasicBlockRef");
	        afterParserOrEnumRuleCall();
	    }

)
))))
;





// Entry rule entryRuleInstruction_switch
entryRuleInstruction_switch returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstruction_switchRule()); }
	 iv_ruleInstruction_switch=ruleInstruction_switch 
	 { $current=$iv_ruleInstruction_switch.current; } 
	 EOF 
;

// Rule Instruction_switch
ruleInstruction_switch returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_opcode_0_0=	'switch' 
    {
        newLeafNode(lv_opcode_0_0, grammarAccess.getInstruction_switchAccess().getOpcodeSwitchKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstruction_switchRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_0_0, "switch");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_switchAccess().getComparisonValueTypedValueParserRuleCall_1_0()); 
	    }
		lv_comparisonValue_1_0=ruleTypedValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_switchRule());
	        }
       		set(
       			$current, 
       			"comparisonValue",
        		lv_comparisonValue_1_0, 
        		"TypedValue");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInstruction_switchAccess().getCommaKeyword_2());
    }
	otherlv_3='label' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getInstruction_switchAccess().getLabelKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_switchAccess().getDefaultDestBasicBlockRefParserRuleCall_4_0()); 
	    }
		lv_defaultDest_4_0=ruleBasicBlockRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_switchRule());
	        }
       		set(
       			$current, 
       			"defaultDest",
        		lv_defaultDest_4_0, 
        		"BasicBlockRef");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='[' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getInstruction_switchAccess().getLeftSquareBracketKeyword_5());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_switchAccess().getCaseConditionsTypedValueParserRuleCall_6_0_0()); 
	    }
		lv_caseConditions_6_0=ruleTypedValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_switchRule());
	        }
       		add(
       			$current, 
       			"caseConditions",
        		lv_caseConditions_6_0, 
        		"TypedValue");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getInstruction_switchAccess().getCommaKeyword_6_1());
    }
	otherlv_8='label' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getInstruction_switchAccess().getLabelKeyword_6_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_switchAccess().getDestinationsBasicBlockRefParserRuleCall_6_3_0()); 
	    }
		lv_destinations_9_0=ruleBasicBlockRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_switchRule());
	        }
       		add(
       			$current, 
       			"destinations",
        		lv_destinations_9_0, 
        		"BasicBlockRef");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_10=']' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getInstruction_switchAccess().getRightSquareBracketKeyword_7());
    }
)
;





// Entry rule entryRuleInstruction_indirectbr
entryRuleInstruction_indirectbr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstruction_indirectbrRule()); }
	 iv_ruleInstruction_indirectbr=ruleInstruction_indirectbr 
	 { $current=$iv_ruleInstruction_indirectbr.current; } 
	 EOF 
;

// Rule Instruction_indirectbr
ruleInstruction_indirectbr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_opcode_0_0=	'indirectbr' 
    {
        newLeafNode(lv_opcode_0_0, grammarAccess.getInstruction_indirectbrAccess().getOpcodeIndirectbrKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstruction_indirectbrRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_0_0, "indirectbr");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_indirectbrAccess().getAddressTypedValueParserRuleCall_1_0()); 
	    }
		lv_address_1_0=ruleTypedValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_indirectbrRule());
	        }
       		set(
       			$current, 
       			"address",
        		lv_address_1_0, 
        		"TypedValue");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInstruction_indirectbrAccess().getCommaKeyword_2());
    }
	otherlv_3='[' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getInstruction_indirectbrAccess().getLeftSquareBracketKeyword_3());
    }
(	otherlv_4='label' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getInstruction_indirectbrAccess().getLabelKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_indirectbrAccess().getDestinationsBasicBlockRefParserRuleCall_4_1_0()); 
	    }
		lv_destinations_5_0=ruleBasicBlockRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_indirectbrRule());
	        }
       		add(
       			$current, 
       			"destinations",
        		lv_destinations_5_0, 
        		"BasicBlockRef");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getInstruction_indirectbrAccess().getCommaKeyword_4_2_0());
    }
	otherlv_7='label' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getInstruction_indirectbrAccess().getLabelKeyword_4_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_indirectbrAccess().getDestinationsBasicBlockRefParserRuleCall_4_2_2_0()); 
	    }
		lv_destinations_8_0=ruleBasicBlockRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_indirectbrRule());
	        }
       		add(
       			$current, 
       			"destinations",
        		lv_destinations_8_0, 
        		"BasicBlockRef");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_9=']' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getInstruction_indirectbrAccess().getRightSquareBracketKeyword_5());
    }
)
;





// Entry rule entryRuleInstruction_invoke_void
entryRuleInstruction_invoke_void returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstruction_invoke_voidRule()); }
	 iv_ruleInstruction_invoke_void=ruleInstruction_invoke_void 
	 { $current=$iv_ruleInstruction_invoke_void.current; } 
	 EOF 
;

// Rule Instruction_invoke_void
ruleInstruction_invoke_void returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_opcode_0_0=	'invoke' 
    {
        newLeafNode(lv_opcode_0_0, grammarAccess.getInstruction_invoke_voidAccess().getOpcodeInvokeKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstruction_invoke_voidRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_0_0, "invoke");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_invoke_voidAccess().getCconvCConvParserRuleCall_1_0()); 
	    }
		lv_cconv_1_0=ruleCConv		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_invoke_voidRule());
	        }
       		set(
       			$current, 
       			"cconv",
        		lv_cconv_1_0, 
        		"CConv");
	        afterParserOrEnumRuleCall();
	    }

)
)?(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getInstruction_invoke_voidAccess().getUnorderedGroup_2());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getInstruction_invoke_voidAccess().getUnorderedGroup_2(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getInstruction_invoke_voidAccess().getUnorderedGroup_2(), 0);
	 				}
					({true}?=>(	otherlv_3='zeroext' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getInstruction_invoke_voidAccess().getZeroextKeyword_2_0());
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getInstruction_invoke_voidAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getInstruction_invoke_voidAccess().getUnorderedGroup_2(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getInstruction_invoke_voidAccess().getUnorderedGroup_2(), 1);
	 				}
					({true}?=>(	otherlv_4='signext' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getInstruction_invoke_voidAccess().getSignextKeyword_2_1());
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getInstruction_invoke_voidAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getInstruction_invoke_voidAccess().getUnorderedGroup_2(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getInstruction_invoke_voidAccess().getUnorderedGroup_2(), 2);
	 				}
					({true}?=>(	otherlv_5='inreg' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getInstruction_invoke_voidAccess().getInregKeyword_2_2());
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getInstruction_invoke_voidAccess().getUnorderedGroup_2());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getInstruction_invoke_voidAccess().getUnorderedGroup_2());
	}

)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_invoke_voidAccess().getTypeVoidTypeParserRuleCall_3_0()); 
	    }
		lv_type_6_0=ruleVoidType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_invoke_voidRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_6_0, 
        		"VoidType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_invoke_voidAccess().getCalleeCalleeParserRuleCall_4_0()); 
	    }
		lv_callee_7_0=ruleCallee		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_invoke_voidRule());
	        }
       		set(
       			$current, 
       			"callee",
        		lv_callee_7_0, 
        		"Callee");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_invoke_voidAccess().getArgsArgListParserRuleCall_5_0()); 
	    }
		lv_args_8_0=ruleArgList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_invoke_voidRule());
	        }
       		set(
       			$current, 
       			"args",
        		lv_args_8_0, 
        		"ArgList");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_invoke_voidAccess().getAttributesFunctionAttributesParserRuleCall_6_0()); 
	    }
		lv_attributes_9_0=ruleFunctionAttributes		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_invoke_voidRule());
	        }
       		set(
       			$current, 
       			"attributes",
        		lv_attributes_9_0, 
        		"FunctionAttributes");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_10='to' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getInstruction_invoke_voidAccess().getToKeyword_7());
    }
	otherlv_11='label' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getInstruction_invoke_voidAccess().getLabelKeyword_8());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_invoke_voidAccess().getToLabelBasicBlockRefParserRuleCall_9_0()); 
	    }
		lv_toLabel_12_0=ruleBasicBlockRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_invoke_voidRule());
	        }
       		set(
       			$current, 
       			"toLabel",
        		lv_toLabel_12_0, 
        		"BasicBlockRef");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_13='unwind' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getInstruction_invoke_voidAccess().getUnwindKeyword_10());
    }
	otherlv_14='label' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getInstruction_invoke_voidAccess().getLabelKeyword_11());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_invoke_voidAccess().getExceptionLabelBasicBlockRefParserRuleCall_12_0()); 
	    }
		lv_exceptionLabel_15_0=ruleBasicBlockRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_invoke_voidRule());
	        }
       		set(
       			$current, 
       			"exceptionLabel",
        		lv_exceptionLabel_15_0, 
        		"BasicBlockRef");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleInstruction_invoke_nonVoid
entryRuleInstruction_invoke_nonVoid returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstruction_invoke_nonVoidRule()); }
	 iv_ruleInstruction_invoke_nonVoid=ruleInstruction_invoke_nonVoid 
	 { $current=$iv_ruleInstruction_invoke_nonVoid.current; } 
	 EOF 
;

// Rule Instruction_invoke_nonVoid
ruleInstruction_invoke_nonVoid returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_invoke_nonVoidAccess().getNameLocalNameParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleLocalName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_invoke_nonVoidRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"LocalName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_opcode_1_0=	'invoke' 
    {
        newLeafNode(lv_opcode_1_0, grammarAccess.getInstruction_invoke_nonVoidAccess().getOpcodeInvokeKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstruction_invoke_nonVoidRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_1_0, "invoke");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_invoke_nonVoidAccess().getCconvCConvParserRuleCall_2_0()); 
	    }
		lv_cconv_2_0=ruleCConv		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_invoke_nonVoidRule());
	        }
       		set(
       			$current, 
       			"cconv",
        		lv_cconv_2_0, 
        		"CConv");
	        afterParserOrEnumRuleCall();
	    }

)
)?(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getInstruction_invoke_nonVoidAccess().getUnorderedGroup_3());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getInstruction_invoke_nonVoidAccess().getUnorderedGroup_3(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getInstruction_invoke_nonVoidAccess().getUnorderedGroup_3(), 0);
	 				}
					({true}?=>(	otherlv_4='zeroext' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getInstruction_invoke_nonVoidAccess().getZeroextKeyword_3_0());
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getInstruction_invoke_nonVoidAccess().getUnorderedGroup_3());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getInstruction_invoke_nonVoidAccess().getUnorderedGroup_3(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getInstruction_invoke_nonVoidAccess().getUnorderedGroup_3(), 1);
	 				}
					({true}?=>(	otherlv_5='signext' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getInstruction_invoke_nonVoidAccess().getSignextKeyword_3_1());
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getInstruction_invoke_nonVoidAccess().getUnorderedGroup_3());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getInstruction_invoke_nonVoidAccess().getUnorderedGroup_3(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getInstruction_invoke_nonVoidAccess().getUnorderedGroup_3(), 2);
	 				}
					({true}?=>(	otherlv_6='inreg' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getInstruction_invoke_nonVoidAccess().getInregKeyword_3_2());
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getInstruction_invoke_nonVoidAccess().getUnorderedGroup_3());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getInstruction_invoke_nonVoidAccess().getUnorderedGroup_3());
	}

)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_invoke_nonVoidAccess().getTypeNonVoidTypeParserRuleCall_4_0()); 
	    }
		lv_type_7_0=ruleNonVoidType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_invoke_nonVoidRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_7_0, 
        		"NonVoidType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_invoke_nonVoidAccess().getCalleeCalleeParserRuleCall_5_0()); 
	    }
		lv_callee_8_0=ruleCallee		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_invoke_nonVoidRule());
	        }
       		set(
       			$current, 
       			"callee",
        		lv_callee_8_0, 
        		"Callee");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_invoke_nonVoidAccess().getArgsArgListParserRuleCall_6_0()); 
	    }
		lv_args_9_0=ruleArgList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_invoke_nonVoidRule());
	        }
       		set(
       			$current, 
       			"args",
        		lv_args_9_0, 
        		"ArgList");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_invoke_nonVoidAccess().getAttributesFunctionAttributesParserRuleCall_7_0()); 
	    }
		lv_attributes_10_0=ruleFunctionAttributes		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_invoke_nonVoidRule());
	        }
       		set(
       			$current, 
       			"attributes",
        		lv_attributes_10_0, 
        		"FunctionAttributes");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_11='to' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getInstruction_invoke_nonVoidAccess().getToKeyword_8());
    }
	otherlv_12='label' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getInstruction_invoke_nonVoidAccess().getLabelKeyword_9());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_invoke_nonVoidAccess().getToLabelBasicBlockRefParserRuleCall_10_0()); 
	    }
		lv_toLabel_13_0=ruleBasicBlockRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_invoke_nonVoidRule());
	        }
       		set(
       			$current, 
       			"toLabel",
        		lv_toLabel_13_0, 
        		"BasicBlockRef");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_14='unwind' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getInstruction_invoke_nonVoidAccess().getUnwindKeyword_11());
    }
	otherlv_15='label' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getInstruction_invoke_nonVoidAccess().getLabelKeyword_12());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_invoke_nonVoidAccess().getExceptionLabelBasicBlockRefParserRuleCall_13_0()); 
	    }
		lv_exceptionLabel_16_0=ruleBasicBlockRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_invoke_nonVoidRule());
	        }
       		set(
       			$current, 
       			"exceptionLabel",
        		lv_exceptionLabel_16_0, 
        		"BasicBlockRef");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleInstruction_resume
entryRuleInstruction_resume returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstruction_resumeRule()); }
	 iv_ruleInstruction_resume=ruleInstruction_resume 
	 { $current=$iv_ruleInstruction_resume.current; } 
	 EOF 
;

// Rule Instruction_resume
ruleInstruction_resume returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_opcode_0_0=	'resume' 
    {
        newLeafNode(lv_opcode_0_0, grammarAccess.getInstruction_resumeAccess().getOpcodeResumeKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstruction_resumeRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_0_0, "resume");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_resumeAccess().getValueTypedValueParserRuleCall_1_0()); 
	    }
		lv_value_1_0=ruleTypedValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_resumeRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"TypedValue");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleInstruction_unreachable
entryRuleInstruction_unreachable returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstruction_unreachableRule()); }
	 iv_ruleInstruction_unreachable=ruleInstruction_unreachable 
	 { $current=$iv_ruleInstruction_unreachable.current; } 
	 EOF 
;

// Rule Instruction_unreachable
ruleInstruction_unreachable returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_opcode_0_0=	'unreachable' 
    {
        newLeafNode(lv_opcode_0_0, grammarAccess.getInstruction_unreachableAccess().getOpcodeUnreachableKeyword_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstruction_unreachableRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_0_0, "unreachable");
	    }

)
)
;





// Entry rule entryRuleBasicBlockRef
entryRuleBasicBlockRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBasicBlockRefRule()); }
	 iv_ruleBasicBlockRef=ruleBasicBlockRef 
	 { $current=$iv_ruleBasicBlockRef.current; } 
	 EOF 
;

// Rule BasicBlockRef
ruleBasicBlockRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getBasicBlockRefRule());
	        }
        }
	otherlv_0=RULE_LOCAL_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getBasicBlockRefAccess().getRefBasicBlockCrossReference_0()); 
	}

)
)
;





// Entry rule entryRuleBinaryInstruction
entryRuleBinaryInstruction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBinaryInstructionRule()); }
	 iv_ruleBinaryInstruction=ruleBinaryInstruction 
	 { $current=$iv_ruleBinaryInstruction.current; } 
	 EOF 
;

// Rule BinaryInstruction
ruleBinaryInstruction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getBinaryInstructionAccess().getInstruction_addParserRuleCall_0()); 
    }
    this_Instruction_add_0=ruleInstruction_add
    { 
        $current = $this_Instruction_add_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBinaryInstructionAccess().getInstruction_faddParserRuleCall_1()); 
    }
    this_Instruction_fadd_1=ruleInstruction_fadd
    { 
        $current = $this_Instruction_fadd_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBinaryInstructionAccess().getInstruction_subParserRuleCall_2()); 
    }
    this_Instruction_sub_2=ruleInstruction_sub
    { 
        $current = $this_Instruction_sub_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBinaryInstructionAccess().getInstruction_fsubParserRuleCall_3()); 
    }
    this_Instruction_fsub_3=ruleInstruction_fsub
    { 
        $current = $this_Instruction_fsub_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBinaryInstructionAccess().getInstruction_mulParserRuleCall_4()); 
    }
    this_Instruction_mul_4=ruleInstruction_mul
    { 
        $current = $this_Instruction_mul_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBinaryInstructionAccess().getInstruction_fmulParserRuleCall_5()); 
    }
    this_Instruction_fmul_5=ruleInstruction_fmul
    { 
        $current = $this_Instruction_fmul_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBinaryInstructionAccess().getInstruction_udivParserRuleCall_6()); 
    }
    this_Instruction_udiv_6=ruleInstruction_udiv
    { 
        $current = $this_Instruction_udiv_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBinaryInstructionAccess().getInstruction_sdivParserRuleCall_7()); 
    }
    this_Instruction_sdiv_7=ruleInstruction_sdiv
    { 
        $current = $this_Instruction_sdiv_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBinaryInstructionAccess().getInstruction_fdivParserRuleCall_8()); 
    }
    this_Instruction_fdiv_8=ruleInstruction_fdiv
    { 
        $current = $this_Instruction_fdiv_8.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBinaryInstructionAccess().getInstruction_uremParserRuleCall_9()); 
    }
    this_Instruction_urem_9=ruleInstruction_urem
    { 
        $current = $this_Instruction_urem_9.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBinaryInstructionAccess().getInstruction_sremParserRuleCall_10()); 
    }
    this_Instruction_srem_10=ruleInstruction_srem
    { 
        $current = $this_Instruction_srem_10.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBinaryInstructionAccess().getInstruction_fremParserRuleCall_11()); 
    }
    this_Instruction_frem_11=ruleInstruction_frem
    { 
        $current = $this_Instruction_frem_11.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleInstruction_add
entryRuleInstruction_add returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstruction_addRule()); }
	 iv_ruleInstruction_add=ruleInstruction_add 
	 { $current=$iv_ruleInstruction_add.current; } 
	 EOF 
;

// Rule Instruction_add
ruleInstruction_add returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_addAccess().getNameLocalNameParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleLocalName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_addRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"LocalName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_opcode_1_0=	'add' 
    {
        newLeafNode(lv_opcode_1_0, grammarAccess.getInstruction_addAccess().getOpcodeAddKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstruction_addRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_1_0, "add");
	    }

)
)(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getInstruction_addAccess().getUnorderedGroup_2());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getInstruction_addAccess().getUnorderedGroup_2(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getInstruction_addAccess().getUnorderedGroup_2(), 0);
	 				}
					({true}?=>(	otherlv_3='nuw' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getInstruction_addAccess().getNuwKeyword_2_0());
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getInstruction_addAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getInstruction_addAccess().getUnorderedGroup_2(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getInstruction_addAccess().getUnorderedGroup_2(), 1);
	 				}
					({true}?=>(	otherlv_4='nsw' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getInstruction_addAccess().getNswKeyword_2_1());
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getInstruction_addAccess().getUnorderedGroup_2());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getInstruction_addAccess().getUnorderedGroup_2());
	}

)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_addAccess().getTypeTypeParserRuleCall_3_0()); 
	    }
		lv_type_5_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_addRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_5_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_addAccess().getOp1ValueRefParserRuleCall_4_0()); 
	    }
		lv_op1_6_0=ruleValueRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_addRule());
	        }
       		set(
       			$current, 
       			"op1",
        		lv_op1_6_0, 
        		"ValueRef");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getInstruction_addAccess().getCommaKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_addAccess().getOp2ValueRefParserRuleCall_6_0()); 
	    }
		lv_op2_8_0=ruleValueRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_addRule());
	        }
       		set(
       			$current, 
       			"op2",
        		lv_op2_8_0, 
        		"ValueRef");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleInstruction_fadd
entryRuleInstruction_fadd returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstruction_faddRule()); }
	 iv_ruleInstruction_fadd=ruleInstruction_fadd 
	 { $current=$iv_ruleInstruction_fadd.current; } 
	 EOF 
;

// Rule Instruction_fadd
ruleInstruction_fadd returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_faddAccess().getNameLocalNameParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleLocalName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_faddRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"LocalName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_opcode_1_0=	'fadd' 
    {
        newLeafNode(lv_opcode_1_0, grammarAccess.getInstruction_faddAccess().getOpcodeFaddKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstruction_faddRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_1_0, "fadd");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_faddAccess().getFastMathFlagsFastMathFlagParserRuleCall_2_0()); 
	    }
		lv_fastMathFlags_2_0=ruleFastMathFlag		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_faddRule());
	        }
       		add(
       			$current, 
       			"fastMathFlags",
        		lv_fastMathFlags_2_0, 
        		"FastMathFlag");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_faddAccess().getTypeTypeParserRuleCall_3_0()); 
	    }
		lv_type_3_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_faddRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_faddAccess().getOp1ValueRefParserRuleCall_4_0()); 
	    }
		lv_op1_4_0=ruleValueRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_faddRule());
	        }
       		set(
       			$current, 
       			"op1",
        		lv_op1_4_0, 
        		"ValueRef");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getInstruction_faddAccess().getCommaKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_faddAccess().getOp2ValueRefParserRuleCall_6_0()); 
	    }
		lv_op2_6_0=ruleValueRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_faddRule());
	        }
       		set(
       			$current, 
       			"op2",
        		lv_op2_6_0, 
        		"ValueRef");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleFastMathFlag
entryRuleFastMathFlag returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFastMathFlagRule()); }
	 iv_ruleFastMathFlag=ruleFastMathFlag 
	 { $current=$iv_ruleFastMathFlag.current; } 
	 EOF 
;

// Rule FastMathFlag
ruleFastMathFlag returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getFastMathFlagAccess().getFastMathFlagAction_0(),
            $current);
    }
)(
(
(
		lv_kind_1_1=	'nnan' 
    {
        newLeafNode(lv_kind_1_1, grammarAccess.getFastMathFlagAccess().getKindNnanKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFastMathFlagRule());
	        }
       		setWithLastConsumed($current, "kind", lv_kind_1_1, null);
	    }

    |		lv_kind_1_2=	'ninf' 
    {
        newLeafNode(lv_kind_1_2, grammarAccess.getFastMathFlagAccess().getKindNinfKeyword_1_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFastMathFlagRule());
	        }
       		setWithLastConsumed($current, "kind", lv_kind_1_2, null);
	    }

    |		lv_kind_1_3=	'nsz' 
    {
        newLeafNode(lv_kind_1_3, grammarAccess.getFastMathFlagAccess().getKindNszKeyword_1_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFastMathFlagRule());
	        }
       		setWithLastConsumed($current, "kind", lv_kind_1_3, null);
	    }

    |		lv_kind_1_4=	'arcp' 
    {
        newLeafNode(lv_kind_1_4, grammarAccess.getFastMathFlagAccess().getKindArcpKeyword_1_0_3());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFastMathFlagRule());
	        }
       		setWithLastConsumed($current, "kind", lv_kind_1_4, null);
	    }

    |		lv_kind_1_5=	'fast' 
    {
        newLeafNode(lv_kind_1_5, grammarAccess.getFastMathFlagAccess().getKindFastKeyword_1_0_4());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFastMathFlagRule());
	        }
       		setWithLastConsumed($current, "kind", lv_kind_1_5, null);
	    }

)

)
))
;





// Entry rule entryRuleInstruction_sub
entryRuleInstruction_sub returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstruction_subRule()); }
	 iv_ruleInstruction_sub=ruleInstruction_sub 
	 { $current=$iv_ruleInstruction_sub.current; } 
	 EOF 
;

// Rule Instruction_sub
ruleInstruction_sub returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_subAccess().getNameLocalNameParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleLocalName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_subRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"LocalName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_opcode_1_0=	'sub' 
    {
        newLeafNode(lv_opcode_1_0, grammarAccess.getInstruction_subAccess().getOpcodeSubKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstruction_subRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_1_0, "sub");
	    }

)
)(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getInstruction_subAccess().getUnorderedGroup_2());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getInstruction_subAccess().getUnorderedGroup_2(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getInstruction_subAccess().getUnorderedGroup_2(), 0);
	 				}
					({true}?=>(	otherlv_3='nuw' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getInstruction_subAccess().getNuwKeyword_2_0());
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getInstruction_subAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getInstruction_subAccess().getUnorderedGroup_2(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getInstruction_subAccess().getUnorderedGroup_2(), 1);
	 				}
					({true}?=>(	otherlv_4='nsw' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getInstruction_subAccess().getNswKeyword_2_1());
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getInstruction_subAccess().getUnorderedGroup_2());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getInstruction_subAccess().getUnorderedGroup_2());
	}

)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_subAccess().getTypeTypeParserRuleCall_3_0()); 
	    }
		lv_type_5_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_subRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_5_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_subAccess().getOp1ValueRefParserRuleCall_4_0()); 
	    }
		lv_op1_6_0=ruleValueRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_subRule());
	        }
       		set(
       			$current, 
       			"op1",
        		lv_op1_6_0, 
        		"ValueRef");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getInstruction_subAccess().getCommaKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_subAccess().getOp2ValueRefParserRuleCall_6_0()); 
	    }
		lv_op2_8_0=ruleValueRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_subRule());
	        }
       		set(
       			$current, 
       			"op2",
        		lv_op2_8_0, 
        		"ValueRef");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleInstruction_fsub
entryRuleInstruction_fsub returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstruction_fsubRule()); }
	 iv_ruleInstruction_fsub=ruleInstruction_fsub 
	 { $current=$iv_ruleInstruction_fsub.current; } 
	 EOF 
;

// Rule Instruction_fsub
ruleInstruction_fsub returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_fsubAccess().getNameLocalNameParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleLocalName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_fsubRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"LocalName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_opcode_1_0=	'fsub' 
    {
        newLeafNode(lv_opcode_1_0, grammarAccess.getInstruction_fsubAccess().getOpcodeFsubKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstruction_fsubRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_1_0, "fsub");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_fsubAccess().getFastMathFlagsFastMathFlagParserRuleCall_2_0()); 
	    }
		lv_fastMathFlags_2_0=ruleFastMathFlag		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_fsubRule());
	        }
       		add(
       			$current, 
       			"fastMathFlags",
        		lv_fastMathFlags_2_0, 
        		"FastMathFlag");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_fsubAccess().getTypeTypeParserRuleCall_3_0()); 
	    }
		lv_type_3_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_fsubRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_fsubAccess().getOp1ValueRefParserRuleCall_4_0()); 
	    }
		lv_op1_4_0=ruleValueRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_fsubRule());
	        }
       		set(
       			$current, 
       			"op1",
        		lv_op1_4_0, 
        		"ValueRef");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getInstruction_fsubAccess().getCommaKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_fsubAccess().getOp2ValueRefParserRuleCall_6_0()); 
	    }
		lv_op2_6_0=ruleValueRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_fsubRule());
	        }
       		set(
       			$current, 
       			"op2",
        		lv_op2_6_0, 
        		"ValueRef");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleInstruction_mul
entryRuleInstruction_mul returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstruction_mulRule()); }
	 iv_ruleInstruction_mul=ruleInstruction_mul 
	 { $current=$iv_ruleInstruction_mul.current; } 
	 EOF 
;

// Rule Instruction_mul
ruleInstruction_mul returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_mulAccess().getNameLocalNameParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleLocalName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_mulRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"LocalName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_opcode_1_0=	'mul' 
    {
        newLeafNode(lv_opcode_1_0, grammarAccess.getInstruction_mulAccess().getOpcodeMulKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstruction_mulRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_1_0, "mul");
	    }

)
)(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getInstruction_mulAccess().getUnorderedGroup_2());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getInstruction_mulAccess().getUnorderedGroup_2(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getInstruction_mulAccess().getUnorderedGroup_2(), 0);
	 				}
					({true}?=>(	otherlv_3='nuw' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getInstruction_mulAccess().getNuwKeyword_2_0());
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getInstruction_mulAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getInstruction_mulAccess().getUnorderedGroup_2(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getInstruction_mulAccess().getUnorderedGroup_2(), 1);
	 				}
					({true}?=>(	otherlv_4='nsw' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getInstruction_mulAccess().getNswKeyword_2_1());
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getInstruction_mulAccess().getUnorderedGroup_2());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getInstruction_mulAccess().getUnorderedGroup_2());
	}

)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_mulAccess().getTypeTypeParserRuleCall_3_0()); 
	    }
		lv_type_5_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_mulRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_5_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_mulAccess().getOp1ValueRefParserRuleCall_4_0()); 
	    }
		lv_op1_6_0=ruleValueRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_mulRule());
	        }
       		set(
       			$current, 
       			"op1",
        		lv_op1_6_0, 
        		"ValueRef");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getInstruction_mulAccess().getCommaKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_mulAccess().getOp2ValueRefParserRuleCall_6_0()); 
	    }
		lv_op2_8_0=ruleValueRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_mulRule());
	        }
       		set(
       			$current, 
       			"op2",
        		lv_op2_8_0, 
        		"ValueRef");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleInstruction_fmul
entryRuleInstruction_fmul returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstruction_fmulRule()); }
	 iv_ruleInstruction_fmul=ruleInstruction_fmul 
	 { $current=$iv_ruleInstruction_fmul.current; } 
	 EOF 
;

// Rule Instruction_fmul
ruleInstruction_fmul returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_fmulAccess().getNameLocalNameParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleLocalName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_fmulRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"LocalName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_opcode_1_0=	'fmul' 
    {
        newLeafNode(lv_opcode_1_0, grammarAccess.getInstruction_fmulAccess().getOpcodeFmulKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstruction_fmulRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_1_0, "fmul");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_fmulAccess().getFastMathFlagsFastMathFlagParserRuleCall_2_0()); 
	    }
		lv_fastMathFlags_2_0=ruleFastMathFlag		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_fmulRule());
	        }
       		add(
       			$current, 
       			"fastMathFlags",
        		lv_fastMathFlags_2_0, 
        		"FastMathFlag");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_fmulAccess().getTypeTypeParserRuleCall_3_0()); 
	    }
		lv_type_3_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_fmulRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_fmulAccess().getOp1ValueRefParserRuleCall_4_0()); 
	    }
		lv_op1_4_0=ruleValueRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_fmulRule());
	        }
       		set(
       			$current, 
       			"op1",
        		lv_op1_4_0, 
        		"ValueRef");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getInstruction_fmulAccess().getCommaKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_fmulAccess().getOp2ValueRefParserRuleCall_6_0()); 
	    }
		lv_op2_6_0=ruleValueRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_fmulRule());
	        }
       		set(
       			$current, 
       			"op2",
        		lv_op2_6_0, 
        		"ValueRef");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleInstruction_udiv
entryRuleInstruction_udiv returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstruction_udivRule()); }
	 iv_ruleInstruction_udiv=ruleInstruction_udiv 
	 { $current=$iv_ruleInstruction_udiv.current; } 
	 EOF 
;

// Rule Instruction_udiv
ruleInstruction_udiv returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_udivAccess().getNameLocalNameParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleLocalName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_udivRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"LocalName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_opcode_1_0=	'udiv' 
    {
        newLeafNode(lv_opcode_1_0, grammarAccess.getInstruction_udivAccess().getOpcodeUdivKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstruction_udivRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_1_0, "udiv");
	    }

)
)(	otherlv_2='exact' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInstruction_udivAccess().getExactKeyword_2());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_udivAccess().getTypeTypeParserRuleCall_3_0()); 
	    }
		lv_type_3_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_udivRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_udivAccess().getOp1ValueRefParserRuleCall_4_0()); 
	    }
		lv_op1_4_0=ruleValueRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_udivRule());
	        }
       		set(
       			$current, 
       			"op1",
        		lv_op1_4_0, 
        		"ValueRef");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getInstruction_udivAccess().getCommaKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_udivAccess().getOp2ValueRefParserRuleCall_6_0()); 
	    }
		lv_op2_6_0=ruleValueRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_udivRule());
	        }
       		set(
       			$current, 
       			"op2",
        		lv_op2_6_0, 
        		"ValueRef");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleInstruction_sdiv
entryRuleInstruction_sdiv returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstruction_sdivRule()); }
	 iv_ruleInstruction_sdiv=ruleInstruction_sdiv 
	 { $current=$iv_ruleInstruction_sdiv.current; } 
	 EOF 
;

// Rule Instruction_sdiv
ruleInstruction_sdiv returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_sdivAccess().getNameLocalNameParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleLocalName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_sdivRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"LocalName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_opcode_1_0=	'sdiv' 
    {
        newLeafNode(lv_opcode_1_0, grammarAccess.getInstruction_sdivAccess().getOpcodeSdivKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstruction_sdivRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_1_0, "sdiv");
	    }

)
)(	otherlv_2='exact' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInstruction_sdivAccess().getExactKeyword_2());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_sdivAccess().getTypeTypeParserRuleCall_3_0()); 
	    }
		lv_type_3_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_sdivRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_sdivAccess().getOp1ValueRefParserRuleCall_4_0()); 
	    }
		lv_op1_4_0=ruleValueRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_sdivRule());
	        }
       		set(
       			$current, 
       			"op1",
        		lv_op1_4_0, 
        		"ValueRef");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getInstruction_sdivAccess().getCommaKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_sdivAccess().getOp2ValueRefParserRuleCall_6_0()); 
	    }
		lv_op2_6_0=ruleValueRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_sdivRule());
	        }
       		set(
       			$current, 
       			"op2",
        		lv_op2_6_0, 
        		"ValueRef");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleInstruction_fdiv
entryRuleInstruction_fdiv returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstruction_fdivRule()); }
	 iv_ruleInstruction_fdiv=ruleInstruction_fdiv 
	 { $current=$iv_ruleInstruction_fdiv.current; } 
	 EOF 
;

// Rule Instruction_fdiv
ruleInstruction_fdiv returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_fdivAccess().getNameLocalNameParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleLocalName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_fdivRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"LocalName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_opcode_1_0=	'fdiv' 
    {
        newLeafNode(lv_opcode_1_0, grammarAccess.getInstruction_fdivAccess().getOpcodeFdivKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstruction_fdivRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_1_0, "fdiv");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_fdivAccess().getFastMathFlagsFastMathFlagParserRuleCall_2_0()); 
	    }
		lv_fastMathFlags_2_0=ruleFastMathFlag		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_fdivRule());
	        }
       		add(
       			$current, 
       			"fastMathFlags",
        		lv_fastMathFlags_2_0, 
        		"FastMathFlag");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_fdivAccess().getTypeTypeParserRuleCall_3_0()); 
	    }
		lv_type_3_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_fdivRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_fdivAccess().getOp1ValueRefParserRuleCall_4_0()); 
	    }
		lv_op1_4_0=ruleValueRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_fdivRule());
	        }
       		set(
       			$current, 
       			"op1",
        		lv_op1_4_0, 
        		"ValueRef");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getInstruction_fdivAccess().getCommaKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_fdivAccess().getOp2ValueRefParserRuleCall_6_0()); 
	    }
		lv_op2_6_0=ruleValueRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_fdivRule());
	        }
       		set(
       			$current, 
       			"op2",
        		lv_op2_6_0, 
        		"ValueRef");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleInstruction_urem
entryRuleInstruction_urem returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstruction_uremRule()); }
	 iv_ruleInstruction_urem=ruleInstruction_urem 
	 { $current=$iv_ruleInstruction_urem.current; } 
	 EOF 
;

// Rule Instruction_urem
ruleInstruction_urem returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_uremAccess().getNameLocalNameParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleLocalName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_uremRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"LocalName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_opcode_1_0=	'urem' 
    {
        newLeafNode(lv_opcode_1_0, grammarAccess.getInstruction_uremAccess().getOpcodeUremKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstruction_uremRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_1_0, "urem");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_uremAccess().getTypeTypeParserRuleCall_2_0()); 
	    }
		lv_type_2_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_uremRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_2_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_uremAccess().getOp1ValueRefParserRuleCall_3_0()); 
	    }
		lv_op1_3_0=ruleValueRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_uremRule());
	        }
       		set(
       			$current, 
       			"op1",
        		lv_op1_3_0, 
        		"ValueRef");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getInstruction_uremAccess().getCommaKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_uremAccess().getOp2ValueRefParserRuleCall_5_0()); 
	    }
		lv_op2_5_0=ruleValueRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_uremRule());
	        }
       		set(
       			$current, 
       			"op2",
        		lv_op2_5_0, 
        		"ValueRef");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleInstruction_srem
entryRuleInstruction_srem returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstruction_sremRule()); }
	 iv_ruleInstruction_srem=ruleInstruction_srem 
	 { $current=$iv_ruleInstruction_srem.current; } 
	 EOF 
;

// Rule Instruction_srem
ruleInstruction_srem returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_sremAccess().getNameLocalNameParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleLocalName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_sremRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"LocalName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_opcode_1_0=	'srem' 
    {
        newLeafNode(lv_opcode_1_0, grammarAccess.getInstruction_sremAccess().getOpcodeSremKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstruction_sremRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_1_0, "srem");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_sremAccess().getTypeTypeParserRuleCall_2_0()); 
	    }
		lv_type_2_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_sremRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_2_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_sremAccess().getOp1ValueRefParserRuleCall_3_0()); 
	    }
		lv_op1_3_0=ruleValueRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_sremRule());
	        }
       		set(
       			$current, 
       			"op1",
        		lv_op1_3_0, 
        		"ValueRef");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getInstruction_sremAccess().getCommaKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_sremAccess().getOp2ValueRefParserRuleCall_5_0()); 
	    }
		lv_op2_5_0=ruleValueRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_sremRule());
	        }
       		set(
       			$current, 
       			"op2",
        		lv_op2_5_0, 
        		"ValueRef");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleInstruction_frem
entryRuleInstruction_frem returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstruction_fremRule()); }
	 iv_ruleInstruction_frem=ruleInstruction_frem 
	 { $current=$iv_ruleInstruction_frem.current; } 
	 EOF 
;

// Rule Instruction_frem
ruleInstruction_frem returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_fremAccess().getNameLocalNameParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleLocalName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_fremRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"LocalName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_opcode_1_0=	'frem' 
    {
        newLeafNode(lv_opcode_1_0, grammarAccess.getInstruction_fremAccess().getOpcodeFremKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstruction_fremRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_1_0, "frem");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_fremAccess().getTypeTypeParserRuleCall_2_0()); 
	    }
		lv_type_2_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_fremRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_2_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_fremAccess().getOp1ValueRefParserRuleCall_3_0()); 
	    }
		lv_op1_3_0=ruleValueRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_fremRule());
	        }
       		set(
       			$current, 
       			"op1",
        		lv_op1_3_0, 
        		"ValueRef");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getInstruction_fremAccess().getCommaKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_fremAccess().getOp2ValueRefParserRuleCall_5_0()); 
	    }
		lv_op2_5_0=ruleValueRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_fremRule());
	        }
       		set(
       			$current, 
       			"op2",
        		lv_op2_5_0, 
        		"ValueRef");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleBitwiseBinaryInstruction
entryRuleBitwiseBinaryInstruction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBitwiseBinaryInstructionRule()); }
	 iv_ruleBitwiseBinaryInstruction=ruleBitwiseBinaryInstruction 
	 { $current=$iv_ruleBitwiseBinaryInstruction.current; } 
	 EOF 
;

// Rule BitwiseBinaryInstruction
ruleBitwiseBinaryInstruction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getBitwiseBinaryInstructionAccess().getInstruction_shlParserRuleCall_0()); 
    }
    this_Instruction_shl_0=ruleInstruction_shl
    { 
        $current = $this_Instruction_shl_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBitwiseBinaryInstructionAccess().getInstruction_lshrParserRuleCall_1()); 
    }
    this_Instruction_lshr_1=ruleInstruction_lshr
    { 
        $current = $this_Instruction_lshr_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBitwiseBinaryInstructionAccess().getInstruction_ashrParserRuleCall_2()); 
    }
    this_Instruction_ashr_2=ruleInstruction_ashr
    { 
        $current = $this_Instruction_ashr_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBitwiseBinaryInstructionAccess().getInstruction_andParserRuleCall_3()); 
    }
    this_Instruction_and_3=ruleInstruction_and
    { 
        $current = $this_Instruction_and_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBitwiseBinaryInstructionAccess().getInstruction_orParserRuleCall_4()); 
    }
    this_Instruction_or_4=ruleInstruction_or
    { 
        $current = $this_Instruction_or_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBitwiseBinaryInstructionAccess().getInstruction_xorParserRuleCall_5()); 
    }
    this_Instruction_xor_5=ruleInstruction_xor
    { 
        $current = $this_Instruction_xor_5.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleInstruction_shl
entryRuleInstruction_shl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstruction_shlRule()); }
	 iv_ruleInstruction_shl=ruleInstruction_shl 
	 { $current=$iv_ruleInstruction_shl.current; } 
	 EOF 
;

// Rule Instruction_shl
ruleInstruction_shl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_shlAccess().getNameLocalNameParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleLocalName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_shlRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"LocalName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_opcode_1_0=	'shl' 
    {
        newLeafNode(lv_opcode_1_0, grammarAccess.getInstruction_shlAccess().getOpcodeShlKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstruction_shlRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_1_0, "shl");
	    }

)
)(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getInstruction_shlAccess().getUnorderedGroup_2());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getInstruction_shlAccess().getUnorderedGroup_2(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getInstruction_shlAccess().getUnorderedGroup_2(), 0);
	 				}
					({true}?=>(	otherlv_3='nuw' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getInstruction_shlAccess().getNuwKeyword_2_0());
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getInstruction_shlAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getInstruction_shlAccess().getUnorderedGroup_2(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getInstruction_shlAccess().getUnorderedGroup_2(), 1);
	 				}
					({true}?=>(	otherlv_4='nsw' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getInstruction_shlAccess().getNswKeyword_2_1());
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getInstruction_shlAccess().getUnorderedGroup_2());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getInstruction_shlAccess().getUnorderedGroup_2());
	}

)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_shlAccess().getTypeTypeParserRuleCall_3_0()); 
	    }
		lv_type_5_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_shlRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_5_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_shlAccess().getOp1ValueRefParserRuleCall_4_0()); 
	    }
		lv_op1_6_0=ruleValueRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_shlRule());
	        }
       		set(
       			$current, 
       			"op1",
        		lv_op1_6_0, 
        		"ValueRef");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getInstruction_shlAccess().getCommaKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_shlAccess().getOp2ValueRefParserRuleCall_6_0()); 
	    }
		lv_op2_8_0=ruleValueRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_shlRule());
	        }
       		set(
       			$current, 
       			"op2",
        		lv_op2_8_0, 
        		"ValueRef");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleInstruction_lshr
entryRuleInstruction_lshr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstruction_lshrRule()); }
	 iv_ruleInstruction_lshr=ruleInstruction_lshr 
	 { $current=$iv_ruleInstruction_lshr.current; } 
	 EOF 
;

// Rule Instruction_lshr
ruleInstruction_lshr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_lshrAccess().getNameLocalNameParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleLocalName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_lshrRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"LocalName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_opcode_1_0=	'lshr' 
    {
        newLeafNode(lv_opcode_1_0, grammarAccess.getInstruction_lshrAccess().getOpcodeLshrKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstruction_lshrRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_1_0, "lshr");
	    }

)
)(	otherlv_2='exact' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInstruction_lshrAccess().getExactKeyword_2());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_lshrAccess().getTypeTypeParserRuleCall_3_0()); 
	    }
		lv_type_3_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_lshrRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_lshrAccess().getOp1ValueRefParserRuleCall_4_0()); 
	    }
		lv_op1_4_0=ruleValueRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_lshrRule());
	        }
       		set(
       			$current, 
       			"op1",
        		lv_op1_4_0, 
        		"ValueRef");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getInstruction_lshrAccess().getCommaKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_lshrAccess().getOp2ValueRefParserRuleCall_6_0()); 
	    }
		lv_op2_6_0=ruleValueRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_lshrRule());
	        }
       		set(
       			$current, 
       			"op2",
        		lv_op2_6_0, 
        		"ValueRef");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleInstruction_ashr
entryRuleInstruction_ashr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstruction_ashrRule()); }
	 iv_ruleInstruction_ashr=ruleInstruction_ashr 
	 { $current=$iv_ruleInstruction_ashr.current; } 
	 EOF 
;

// Rule Instruction_ashr
ruleInstruction_ashr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_ashrAccess().getNameLocalNameParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleLocalName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_ashrRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"LocalName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_opcode_1_0=	'ashr' 
    {
        newLeafNode(lv_opcode_1_0, grammarAccess.getInstruction_ashrAccess().getOpcodeAshrKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstruction_ashrRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_1_0, "ashr");
	    }

)
)(	otherlv_2='exact' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInstruction_ashrAccess().getExactKeyword_2());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_ashrAccess().getTypeTypeParserRuleCall_3_0()); 
	    }
		lv_type_3_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_ashrRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_ashrAccess().getOp1ValueRefParserRuleCall_4_0()); 
	    }
		lv_op1_4_0=ruleValueRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_ashrRule());
	        }
       		set(
       			$current, 
       			"op1",
        		lv_op1_4_0, 
        		"ValueRef");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getInstruction_ashrAccess().getCommaKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_ashrAccess().getOp2ValueRefParserRuleCall_6_0()); 
	    }
		lv_op2_6_0=ruleValueRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_ashrRule());
	        }
       		set(
       			$current, 
       			"op2",
        		lv_op2_6_0, 
        		"ValueRef");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleInstruction_and
entryRuleInstruction_and returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstruction_andRule()); }
	 iv_ruleInstruction_and=ruleInstruction_and 
	 { $current=$iv_ruleInstruction_and.current; } 
	 EOF 
;

// Rule Instruction_and
ruleInstruction_and returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_andAccess().getNameLocalNameParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleLocalName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_andRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"LocalName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_opcode_1_0=	'and' 
    {
        newLeafNode(lv_opcode_1_0, grammarAccess.getInstruction_andAccess().getOpcodeAndKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstruction_andRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_1_0, "and");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_andAccess().getTypeTypeParserRuleCall_2_0()); 
	    }
		lv_type_2_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_andRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_2_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_andAccess().getOp1ValueRefParserRuleCall_3_0()); 
	    }
		lv_op1_3_0=ruleValueRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_andRule());
	        }
       		set(
       			$current, 
       			"op1",
        		lv_op1_3_0, 
        		"ValueRef");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getInstruction_andAccess().getCommaKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_andAccess().getOp2ValueRefParserRuleCall_5_0()); 
	    }
		lv_op2_5_0=ruleValueRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_andRule());
	        }
       		set(
       			$current, 
       			"op2",
        		lv_op2_5_0, 
        		"ValueRef");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleInstruction_or
entryRuleInstruction_or returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstruction_orRule()); }
	 iv_ruleInstruction_or=ruleInstruction_or 
	 { $current=$iv_ruleInstruction_or.current; } 
	 EOF 
;

// Rule Instruction_or
ruleInstruction_or returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_orAccess().getNameLocalNameParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleLocalName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_orRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"LocalName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_opcode_1_0=	'or' 
    {
        newLeafNode(lv_opcode_1_0, grammarAccess.getInstruction_orAccess().getOpcodeOrKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstruction_orRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_1_0, "or");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_orAccess().getTypeTypeParserRuleCall_2_0()); 
	    }
		lv_type_2_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_orRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_2_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_orAccess().getOp1ValueRefParserRuleCall_3_0()); 
	    }
		lv_op1_3_0=ruleValueRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_orRule());
	        }
       		set(
       			$current, 
       			"op1",
        		lv_op1_3_0, 
        		"ValueRef");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getInstruction_orAccess().getCommaKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_orAccess().getOp2ValueRefParserRuleCall_5_0()); 
	    }
		lv_op2_5_0=ruleValueRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_orRule());
	        }
       		set(
       			$current, 
       			"op2",
        		lv_op2_5_0, 
        		"ValueRef");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleInstruction_xor
entryRuleInstruction_xor returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstruction_xorRule()); }
	 iv_ruleInstruction_xor=ruleInstruction_xor 
	 { $current=$iv_ruleInstruction_xor.current; } 
	 EOF 
;

// Rule Instruction_xor
ruleInstruction_xor returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_xorAccess().getNameLocalNameParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleLocalName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_xorRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"LocalName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_opcode_1_0=	'xor' 
    {
        newLeafNode(lv_opcode_1_0, grammarAccess.getInstruction_xorAccess().getOpcodeXorKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstruction_xorRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_1_0, "xor");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_xorAccess().getTypeTypeParserRuleCall_2_0()); 
	    }
		lv_type_2_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_xorRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_2_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_xorAccess().getOp1ValueRefParserRuleCall_3_0()); 
	    }
		lv_op1_3_0=ruleValueRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_xorRule());
	        }
       		set(
       			$current, 
       			"op1",
        		lv_op1_3_0, 
        		"ValueRef");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getInstruction_xorAccess().getCommaKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_xorAccess().getOp2ValueRefParserRuleCall_5_0()); 
	    }
		lv_op2_5_0=ruleValueRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_xorRule());
	        }
       		set(
       			$current, 
       			"op2",
        		lv_op2_5_0, 
        		"ValueRef");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleVectorInstruction
entryRuleVectorInstruction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVectorInstructionRule()); }
	 iv_ruleVectorInstruction=ruleVectorInstruction 
	 { $current=$iv_ruleVectorInstruction.current; } 
	 EOF 
;

// Rule VectorInstruction
ruleVectorInstruction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getVectorInstructionAccess().getInstruction_extractelementParserRuleCall_0()); 
    }
    this_Instruction_extractelement_0=ruleInstruction_extractelement
    { 
        $current = $this_Instruction_extractelement_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getVectorInstructionAccess().getInstruction_insertelementParserRuleCall_1()); 
    }
    this_Instruction_insertelement_1=ruleInstruction_insertelement
    { 
        $current = $this_Instruction_insertelement_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getVectorInstructionAccess().getInstruction_shufflevectorParserRuleCall_2()); 
    }
    this_Instruction_shufflevector_2=ruleInstruction_shufflevector
    { 
        $current = $this_Instruction_shufflevector_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleInstruction_extractelement
entryRuleInstruction_extractelement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstruction_extractelementRule()); }
	 iv_ruleInstruction_extractelement=ruleInstruction_extractelement 
	 { $current=$iv_ruleInstruction_extractelement.current; } 
	 EOF 
;

// Rule Instruction_extractelement
ruleInstruction_extractelement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_extractelementAccess().getNameLocalNameParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleLocalName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_extractelementRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"LocalName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_opcode_1_0=	'extractelement' 
    {
        newLeafNode(lv_opcode_1_0, grammarAccess.getInstruction_extractelementAccess().getOpcodeExtractelementKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstruction_extractelementRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_1_0, "extractelement");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_extractelementAccess().getVectorTypedValueParserRuleCall_2_0()); 
	    }
		lv_vector_2_0=ruleTypedValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_extractelementRule());
	        }
       		set(
       			$current, 
       			"vector",
        		lv_vector_2_0, 
        		"TypedValue");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getInstruction_extractelementAccess().getCommaKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_extractelementAccess().getIndexTypedValueParserRuleCall_4_0()); 
	    }
		lv_index_4_0=ruleTypedValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_extractelementRule());
	        }
       		set(
       			$current, 
       			"index",
        		lv_index_4_0, 
        		"TypedValue");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleInstruction_insertelement
entryRuleInstruction_insertelement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstruction_insertelementRule()); }
	 iv_ruleInstruction_insertelement=ruleInstruction_insertelement 
	 { $current=$iv_ruleInstruction_insertelement.current; } 
	 EOF 
;

// Rule Instruction_insertelement
ruleInstruction_insertelement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_insertelementAccess().getNameLocalNameParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleLocalName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_insertelementRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"LocalName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_opcode_1_0=	'insertelement' 
    {
        newLeafNode(lv_opcode_1_0, grammarAccess.getInstruction_insertelementAccess().getOpcodeInsertelementKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstruction_insertelementRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_1_0, "insertelement");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_insertelementAccess().getVectorTypedValueParserRuleCall_2_0()); 
	    }
		lv_vector_2_0=ruleTypedValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_insertelementRule());
	        }
       		set(
       			$current, 
       			"vector",
        		lv_vector_2_0, 
        		"TypedValue");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getInstruction_insertelementAccess().getCommaKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_insertelementAccess().getElementTypedValueParserRuleCall_4_0()); 
	    }
		lv_element_4_0=ruleTypedValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_insertelementRule());
	        }
       		set(
       			$current, 
       			"element",
        		lv_element_4_0, 
        		"TypedValue");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getInstruction_insertelementAccess().getCommaKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_insertelementAccess().getIndexTypedValueParserRuleCall_6_0()); 
	    }
		lv_index_6_0=ruleTypedValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_insertelementRule());
	        }
       		set(
       			$current, 
       			"index",
        		lv_index_6_0, 
        		"TypedValue");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleInstruction_shufflevector
entryRuleInstruction_shufflevector returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstruction_shufflevectorRule()); }
	 iv_ruleInstruction_shufflevector=ruleInstruction_shufflevector 
	 { $current=$iv_ruleInstruction_shufflevector.current; } 
	 EOF 
;

// Rule Instruction_shufflevector
ruleInstruction_shufflevector returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_shufflevectorAccess().getNameLocalNameParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleLocalName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_shufflevectorRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"LocalName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_opcode_1_0=	'shufflevector' 
    {
        newLeafNode(lv_opcode_1_0, grammarAccess.getInstruction_shufflevectorAccess().getOpcodeShufflevectorKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstruction_shufflevectorRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_1_0, "shufflevector");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_shufflevectorAccess().getVector1TypedValueParserRuleCall_2_0()); 
	    }
		lv_vector1_2_0=ruleTypedValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_shufflevectorRule());
	        }
       		set(
       			$current, 
       			"vector1",
        		lv_vector1_2_0, 
        		"TypedValue");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getInstruction_shufflevectorAccess().getCommaKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_shufflevectorAccess().getVector2TypedValueParserRuleCall_4_0()); 
	    }
		lv_vector2_4_0=ruleTypedValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_shufflevectorRule());
	        }
       		set(
       			$current, 
       			"vector2",
        		lv_vector2_4_0, 
        		"TypedValue");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getInstruction_shufflevectorAccess().getCommaKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_shufflevectorAccess().getMaskTypedValueParserRuleCall_6_0()); 
	    }
		lv_mask_6_0=ruleTypedValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_shufflevectorRule());
	        }
       		set(
       			$current, 
       			"mask",
        		lv_mask_6_0, 
        		"TypedValue");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleAggregateInstruction
entryRuleAggregateInstruction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAggregateInstructionRule()); }
	 iv_ruleAggregateInstruction=ruleAggregateInstruction 
	 { $current=$iv_ruleAggregateInstruction.current; } 
	 EOF 
;

// Rule AggregateInstruction
ruleAggregateInstruction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAggregateInstructionAccess().getInstruction_extractvalueParserRuleCall_0()); 
    }
    this_Instruction_extractvalue_0=ruleInstruction_extractvalue
    { 
        $current = $this_Instruction_extractvalue_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAggregateInstructionAccess().getInstruction_insertvalueParserRuleCall_1()); 
    }
    this_Instruction_insertvalue_1=ruleInstruction_insertvalue
    { 
        $current = $this_Instruction_insertvalue_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleInstruction_extractvalue
entryRuleInstruction_extractvalue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstruction_extractvalueRule()); }
	 iv_ruleInstruction_extractvalue=ruleInstruction_extractvalue 
	 { $current=$iv_ruleInstruction_extractvalue.current; } 
	 EOF 
;

// Rule Instruction_extractvalue
ruleInstruction_extractvalue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_extractvalueAccess().getNameLocalNameParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleLocalName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_extractvalueRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"LocalName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_opcode_1_0=	'extractvalue' 
    {
        newLeafNode(lv_opcode_1_0, grammarAccess.getInstruction_extractvalueAccess().getOpcodeExtractvalueKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstruction_extractvalueRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_1_0, "extractvalue");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_extractvalueAccess().getAggregateTypedValueParserRuleCall_2_0()); 
	    }
		lv_aggregate_2_0=ruleTypedValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_extractvalueRule());
	        }
       		set(
       			$current, 
       			"aggregate",
        		lv_aggregate_2_0, 
        		"TypedValue");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getInstruction_extractvalueAccess().getCommaKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_extractvalueAccess().getIndicesConstantParserRuleCall_3_1_0()); 
	    }
		lv_indices_4_0=ruleConstant		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_extractvalueRule());
	        }
       		add(
       			$current, 
       			"indices",
        		lv_indices_4_0, 
        		"Constant");
	        afterParserOrEnumRuleCall();
	    }

)
))+)
;





// Entry rule entryRuleInstruction_insertvalue
entryRuleInstruction_insertvalue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstruction_insertvalueRule()); }
	 iv_ruleInstruction_insertvalue=ruleInstruction_insertvalue 
	 { $current=$iv_ruleInstruction_insertvalue.current; } 
	 EOF 
;

// Rule Instruction_insertvalue
ruleInstruction_insertvalue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_insertvalueAccess().getNameLocalNameParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleLocalName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_insertvalueRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"LocalName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_opcode_1_0=	'insertvalue' 
    {
        newLeafNode(lv_opcode_1_0, grammarAccess.getInstruction_insertvalueAccess().getOpcodeInsertvalueKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstruction_insertvalueRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_1_0, "insertvalue");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_insertvalueAccess().getAggregateTypedValueParserRuleCall_2_0()); 
	    }
		lv_aggregate_2_0=ruleTypedValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_insertvalueRule());
	        }
       		set(
       			$current, 
       			"aggregate",
        		lv_aggregate_2_0, 
        		"TypedValue");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getInstruction_insertvalueAccess().getCommaKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_insertvalueAccess().getElementTypedValueParserRuleCall_4_0()); 
	    }
		lv_element_4_0=ruleTypedValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_insertvalueRule());
	        }
       		set(
       			$current, 
       			"element",
        		lv_element_4_0, 
        		"TypedValue");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getInstruction_insertvalueAccess().getCommaKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_insertvalueAccess().getIndicesConstantParserRuleCall_5_1_0()); 
	    }
		lv_indices_6_0=ruleConstant		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_insertvalueRule());
	        }
       		add(
       			$current, 
       			"indices",
        		lv_indices_6_0, 
        		"Constant");
	        afterParserOrEnumRuleCall();
	    }

)
))+)
;





// Entry rule entryRuleInstruction_alloca
entryRuleInstruction_alloca returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstruction_allocaRule()); }
	 iv_ruleInstruction_alloca=ruleInstruction_alloca 
	 { $current=$iv_ruleInstruction_alloca.current; } 
	 EOF 
;

// Rule Instruction_alloca
ruleInstruction_alloca returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_allocaAccess().getNameLocalNameParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleLocalName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_allocaRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"LocalName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_opcode_1_0=	'alloca' 
    {
        newLeafNode(lv_opcode_1_0, grammarAccess.getInstruction_allocaAccess().getOpcodeAllocaKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstruction_allocaRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_1_0, "alloca");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_allocaAccess().getTypeTypeParserRuleCall_2_0()); 
	    }
		lv_type_2_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_allocaRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_2_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getInstruction_allocaAccess().getCommaKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_allocaAccess().getNumElementsTypedValueParserRuleCall_3_1_0()); 
	    }
		lv_numElements_4_0=ruleTypedValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_allocaRule());
	        }
       		set(
       			$current, 
       			"numElements",
        		lv_numElements_4_0, 
        		"TypedValue");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getInstruction_allocaAccess().getCommaKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_allocaAccess().getAlignmentAlignParserRuleCall_4_1_0()); 
	    }
		lv_alignment_6_0=ruleAlign		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_allocaRule());
	        }
       		set(
       			$current, 
       			"alignment",
        		lv_alignment_6_0, 
        		"Align");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleInstruction_load
entryRuleInstruction_load returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstruction_loadRule()); }
	 iv_ruleInstruction_load=ruleInstruction_load 
	 { $current=$iv_ruleInstruction_load.current; } 
	 EOF 
;

// Rule Instruction_load
ruleInstruction_load returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_loadAccess().getNameLocalNameParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleLocalName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_loadRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"LocalName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_opcode_1_0=	'load' 
    {
        newLeafNode(lv_opcode_1_0, grammarAccess.getInstruction_loadAccess().getOpcodeLoadKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstruction_loadRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_1_0, "load");
	    }

)
)(((	otherlv_2='volatile' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInstruction_loadAccess().getVolatileKeyword_2_0_0());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_loadAccess().getPointerTypedValueParserRuleCall_2_0_1_0()); 
	    }
		lv_pointer_3_0=ruleTypedValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_loadRule());
	        }
       		set(
       			$current, 
       			"pointer",
        		lv_pointer_3_0, 
        		"TypedValue");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getInstruction_loadAccess().getCommaKeyword_2_0_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_loadAccess().getAlignmentAlignParserRuleCall_2_0_2_1_0()); 
	    }
		lv_alignment_5_0=ruleAlign		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_loadRule());
	        }
       		set(
       			$current, 
       			"alignment",
        		lv_alignment_5_0, 
        		"Align");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getInstruction_loadAccess().getCommaKeyword_2_0_3_0());
    }
	otherlv_7='!nontemporal' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getInstruction_loadAccess().getNontemporalKeyword_2_0_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_loadAccess().getNontemporalIndexMetadataRefParserRuleCall_2_0_3_2_0()); 
	    }
		lv_nontemporalIndex_8_0=ruleMetadataRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_loadRule());
	        }
       		set(
       			$current, 
       			"nontemporalIndex",
        		lv_nontemporalIndex_8_0, 
        		"MetadataRef");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getInstruction_loadAccess().getCommaKeyword_2_0_4_0());
    }
	otherlv_10='!invariant.load' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getInstruction_loadAccess().getInvariantLoadKeyword_2_0_4_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_loadAccess().getInvariantLoadIndexMetadataRefParserRuleCall_2_0_4_2_0()); 
	    }
		lv_invariantLoadIndex_11_0=ruleMetadataRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_loadRule());
	        }
       		set(
       			$current, 
       			"invariantLoadIndex",
        		lv_invariantLoadIndex_11_0, 
        		"MetadataRef");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
    |(	otherlv_12='atomic' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getInstruction_loadAccess().getAtomicKeyword_2_1_0());
    }
(	otherlv_13='volatile' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getInstruction_loadAccess().getVolatileKeyword_2_1_1());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_loadAccess().getPointerTypedValueParserRuleCall_2_1_2_0()); 
	    }
		lv_pointer_14_0=ruleTypedValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_loadRule());
	        }
       		set(
       			$current, 
       			"pointer",
        		lv_pointer_14_0, 
        		"TypedValue");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_15='singlethread' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getInstruction_loadAccess().getSinglethreadKeyword_2_1_3());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_loadAccess().getOrderingOrderingParserRuleCall_2_1_4_0()); 
	    }
		lv_ordering_16_0=ruleOrdering		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_loadRule());
	        }
       		set(
       			$current, 
       			"ordering",
        		lv_ordering_16_0, 
        		"Ordering");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_loadAccess().getAlignmentAlignParserRuleCall_2_1_5_0()); 
	    }
		lv_alignment_17_0=ruleAlign		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_loadRule());
	        }
       		set(
       			$current, 
       			"alignment",
        		lv_alignment_17_0, 
        		"Align");
	        afterParserOrEnumRuleCall();
	    }

)
))))
;





// Entry rule entryRuleInstruction_store
entryRuleInstruction_store returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstruction_storeRule()); }
	 iv_ruleInstruction_store=ruleInstruction_store 
	 { $current=$iv_ruleInstruction_store.current; } 
	 EOF 
;

// Rule Instruction_store
ruleInstruction_store returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_opcode_0_0=	'store' 
    {
        newLeafNode(lv_opcode_0_0, grammarAccess.getInstruction_storeAccess().getOpcodeStoreKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstruction_storeRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_0_0, "store");
	    }

)
)(((	otherlv_1='volatile' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInstruction_storeAccess().getVolatileKeyword_1_0_0());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_storeAccess().getValueTypedValueParserRuleCall_1_0_1_0()); 
	    }
		lv_value_2_0=ruleTypedValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_storeRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"TypedValue");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getInstruction_storeAccess().getCommaKeyword_1_0_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_storeAccess().getPointerTypedValueParserRuleCall_1_0_3_0()); 
	    }
		lv_pointer_4_0=ruleTypedValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_storeRule());
	        }
       		set(
       			$current, 
       			"pointer",
        		lv_pointer_4_0, 
        		"TypedValue");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getInstruction_storeAccess().getCommaKeyword_1_0_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_storeAccess().getAlignmentAlignParserRuleCall_1_0_4_1_0()); 
	    }
		lv_alignment_6_0=ruleAlign		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_storeRule());
	        }
       		set(
       			$current, 
       			"alignment",
        		lv_alignment_6_0, 
        		"Align");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getInstruction_storeAccess().getCommaKeyword_1_0_5_0());
    }
	otherlv_8='!nontemporal' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getInstruction_storeAccess().getNontemporalKeyword_1_0_5_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_storeAccess().getNontemporalIndexMetadataRefParserRuleCall_1_0_5_2_0()); 
	    }
		lv_nontemporalIndex_9_0=ruleMetadataRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_storeRule());
	        }
       		set(
       			$current, 
       			"nontemporalIndex",
        		lv_nontemporalIndex_9_0, 
        		"MetadataRef");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
    |(	otherlv_10='atomic' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getInstruction_storeAccess().getAtomicKeyword_1_1_0());
    }
(	otherlv_11='volatile' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getInstruction_storeAccess().getVolatileKeyword_1_1_1());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_storeAccess().getValueTypedValueParserRuleCall_1_1_2_0()); 
	    }
		lv_value_12_0=ruleTypedValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_storeRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_12_0, 
        		"TypedValue");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_storeAccess().getPointerTypedValueParserRuleCall_1_1_3_0()); 
	    }
		lv_pointer_13_0=ruleTypedValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_storeRule());
	        }
       		set(
       			$current, 
       			"pointer",
        		lv_pointer_13_0, 
        		"TypedValue");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_14='singlethread' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getInstruction_storeAccess().getSinglethreadKeyword_1_1_4());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_storeAccess().getOrderingOrderingParserRuleCall_1_1_5_0()); 
	    }
		lv_ordering_15_0=ruleOrdering		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_storeRule());
	        }
       		set(
       			$current, 
       			"ordering",
        		lv_ordering_15_0, 
        		"Ordering");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_storeAccess().getAlignmentAlignParserRuleCall_1_1_6_0()); 
	    }
		lv_alignment_16_0=ruleAlign		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_storeRule());
	        }
       		set(
       			$current, 
       			"alignment",
        		lv_alignment_16_0, 
        		"Align");
	        afterParserOrEnumRuleCall();
	    }

)
))))
;





// Entry rule entryRuleInstruction_fence
entryRuleInstruction_fence returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstruction_fenceRule()); }
	 iv_ruleInstruction_fence=ruleInstruction_fence 
	 { $current=$iv_ruleInstruction_fence.current; } 
	 EOF 
;

// Rule Instruction_fence
ruleInstruction_fence returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_opcode_0_0=	'fence' 
    {
        newLeafNode(lv_opcode_0_0, grammarAccess.getInstruction_fenceAccess().getOpcodeFenceKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstruction_fenceRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_0_0, "fence");
	    }

)
)(	otherlv_1='singlethread' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInstruction_fenceAccess().getSinglethreadKeyword_1());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_fenceAccess().getOrderingOrderingParserRuleCall_2_0()); 
	    }
		lv_ordering_2_0=ruleOrdering		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_fenceRule());
	        }
       		set(
       			$current, 
       			"ordering",
        		lv_ordering_2_0, 
        		"Ordering");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleInstruction_cmpxchg
entryRuleInstruction_cmpxchg returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstruction_cmpxchgRule()); }
	 iv_ruleInstruction_cmpxchg=ruleInstruction_cmpxchg 
	 { $current=$iv_ruleInstruction_cmpxchg.current; } 
	 EOF 
;

// Rule Instruction_cmpxchg
ruleInstruction_cmpxchg returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_cmpxchgAccess().getNameLocalNameParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleLocalName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_cmpxchgRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"LocalName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_opcode_1_0=	'cmpxchg' 
    {
        newLeafNode(lv_opcode_1_0, grammarAccess.getInstruction_cmpxchgAccess().getOpcodeCmpxchgKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstruction_cmpxchgRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_1_0, "cmpxchg");
	    }

)
)(	otherlv_2='volatile' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInstruction_cmpxchgAccess().getVolatileKeyword_2());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_cmpxchgAccess().getPointerTypedValueParserRuleCall_3_0()); 
	    }
		lv_pointer_3_0=ruleTypedValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_cmpxchgRule());
	        }
       		set(
       			$current, 
       			"pointer",
        		lv_pointer_3_0, 
        		"TypedValue");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getInstruction_cmpxchgAccess().getCommaKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_cmpxchgAccess().getComparedWithTypedValueParserRuleCall_5_0()); 
	    }
		lv_comparedWith_5_0=ruleTypedValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_cmpxchgRule());
	        }
       		set(
       			$current, 
       			"comparedWith",
        		lv_comparedWith_5_0, 
        		"TypedValue");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getInstruction_cmpxchgAccess().getCommaKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_cmpxchgAccess().getNewValueTypedValueParserRuleCall_7_0()); 
	    }
		lv_newValue_7_0=ruleTypedValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_cmpxchgRule());
	        }
       		set(
       			$current, 
       			"newValue",
        		lv_newValue_7_0, 
        		"TypedValue");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_8='singlethread' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getInstruction_cmpxchgAccess().getSinglethreadKeyword_8());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_cmpxchgAccess().getOrderingOrderingParserRuleCall_9_0()); 
	    }
		lv_ordering_9_0=ruleOrdering		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_cmpxchgRule());
	        }
       		set(
       			$current, 
       			"ordering",
        		lv_ordering_9_0, 
        		"Ordering");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleInstruction_atomicrmw
entryRuleInstruction_atomicrmw returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstruction_atomicrmwRule()); }
	 iv_ruleInstruction_atomicrmw=ruleInstruction_atomicrmw 
	 { $current=$iv_ruleInstruction_atomicrmw.current; } 
	 EOF 
;

// Rule Instruction_atomicrmw
ruleInstruction_atomicrmw returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_atomicrmwAccess().getNameLocalNameParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleLocalName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_atomicrmwRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"LocalName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_opcode_1_0=	'atomicrmw' 
    {
        newLeafNode(lv_opcode_1_0, grammarAccess.getInstruction_atomicrmwAccess().getOpcodeAtomicrmwKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstruction_atomicrmwRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_1_0, "atomicrmw");
	    }

)
)(	otherlv_2='volatile' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInstruction_atomicrmwAccess().getVolatileKeyword_2());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_atomicrmwAccess().getOperationAtomicrmw_operationParserRuleCall_3_0()); 
	    }
		lv_operation_3_0=ruleAtomicrmw_operation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_atomicrmwRule());
	        }
       		set(
       			$current, 
       			"operation",
        		lv_operation_3_0, 
        		"Atomicrmw_operation");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_atomicrmwAccess().getPointerTypedValueParserRuleCall_4_0()); 
	    }
		lv_pointer_4_0=ruleTypedValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_atomicrmwRule());
	        }
       		set(
       			$current, 
       			"pointer",
        		lv_pointer_4_0, 
        		"TypedValue");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getInstruction_atomicrmwAccess().getCommaKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_atomicrmwAccess().getArgumentTypedValueParserRuleCall_6_0()); 
	    }
		lv_argument_6_0=ruleTypedValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_atomicrmwRule());
	        }
       		set(
       			$current, 
       			"argument",
        		lv_argument_6_0, 
        		"TypedValue");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7='singlethread' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getInstruction_atomicrmwAccess().getSinglethreadKeyword_7());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_atomicrmwAccess().getOrderingOrderingParserRuleCall_8_0()); 
	    }
		lv_ordering_8_0=ruleOrdering		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_atomicrmwRule());
	        }
       		set(
       			$current, 
       			"ordering",
        		lv_ordering_8_0, 
        		"Ordering");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleAtomicrmw_operation
entryRuleAtomicrmw_operation returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getAtomicrmw_operationRule()); } 
	 iv_ruleAtomicrmw_operation=ruleAtomicrmw_operation 
	 { $current=$iv_ruleAtomicrmw_operation.current.getText(); }  
	 EOF 
;

// Rule Atomicrmw_operation
ruleAtomicrmw_operation returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='xchg' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAtomicrmw_operationAccess().getXchgKeyword_0()); 
    }

    |
	kw='add' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAtomicrmw_operationAccess().getAddKeyword_1()); 
    }

    |
	kw='sub' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAtomicrmw_operationAccess().getSubKeyword_2()); 
    }

    |
	kw='and' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAtomicrmw_operationAccess().getAndKeyword_3()); 
    }

    |
	kw='nand' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAtomicrmw_operationAccess().getNandKeyword_4()); 
    }

    |
	kw='or' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAtomicrmw_operationAccess().getOrKeyword_5()); 
    }

    |
	kw='xor' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAtomicrmw_operationAccess().getXorKeyword_6()); 
    }

    |
	kw='max' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAtomicrmw_operationAccess().getMaxKeyword_7()); 
    }

    |
	kw='min' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAtomicrmw_operationAccess().getMinKeyword_8()); 
    }

    |
	kw='umax' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAtomicrmw_operationAccess().getUmaxKeyword_9()); 
    }

    |
	kw='umin' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAtomicrmw_operationAccess().getUminKeyword_10()); 
    }
)
    ;





// Entry rule entryRuleInstruction_getelementptr
entryRuleInstruction_getelementptr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstruction_getelementptrRule()); }
	 iv_ruleInstruction_getelementptr=ruleInstruction_getelementptr 
	 { $current=$iv_ruleInstruction_getelementptr.current; } 
	 EOF 
;

// Rule Instruction_getelementptr
ruleInstruction_getelementptr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_getelementptrAccess().getNameLocalNameParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleLocalName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_getelementptrRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"LocalName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_opcode_1_0=	'getelementptr' 
    {
        newLeafNode(lv_opcode_1_0, grammarAccess.getInstruction_getelementptrAccess().getOpcodeGetelementptrKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstruction_getelementptrRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_1_0, "getelementptr");
	    }

)
)(	otherlv_2='inbounds' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInstruction_getelementptrAccess().getInboundsKeyword_2());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_getelementptrAccess().getBaseTypedValueParserRuleCall_3_0()); 
	    }
		lv_base_3_0=ruleTypedValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_getelementptrRule());
	        }
       		set(
       			$current, 
       			"base",
        		lv_base_3_0, 
        		"TypedValue");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getInstruction_getelementptrAccess().getCommaKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_getelementptrAccess().getIndicesTypedValueParserRuleCall_4_1_0()); 
	    }
		lv_indices_5_0=ruleTypedValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_getelementptrRule());
	        }
       		add(
       			$current, 
       			"indices",
        		lv_indices_5_0, 
        		"TypedValue");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleConversionInstruction
entryRuleConversionInstruction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConversionInstructionRule()); }
	 iv_ruleConversionInstruction=ruleConversionInstruction 
	 { $current=$iv_ruleConversionInstruction.current; } 
	 EOF 
;

// Rule ConversionInstruction
ruleConversionInstruction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getConversionInstructionAccess().getNameLocalNameParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleLocalName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConversionInstructionRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"LocalName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getConversionInstructionAccess().getOpcodeConvertionOpcodeParserRuleCall_1_0()); 
	    }
		lv_opcode_1_0=ruleConvertionOpcode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConversionInstructionRule());
	        }
       		set(
       			$current, 
       			"opcode",
        		lv_opcode_1_0, 
        		"ConvertionOpcode");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getConversionInstructionAccess().getFromTypeTypeParserRuleCall_2_0()); 
	    }
		lv_fromType_2_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConversionInstructionRule());
	        }
       		set(
       			$current, 
       			"fromType",
        		lv_fromType_2_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getConversionInstructionAccess().getValueValueRefParserRuleCall_3_0()); 
	    }
		lv_value_3_0=ruleValueRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConversionInstructionRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_3_0, 
        		"ValueRef");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='to' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getConversionInstructionAccess().getToKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConversionInstructionAccess().getTargetTypeTypeParserRuleCall_5_0()); 
	    }
		lv_targetType_5_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConversionInstructionRule());
	        }
       		set(
       			$current, 
       			"targetType",
        		lv_targetType_5_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleConvertionOpcode
entryRuleConvertionOpcode returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getConvertionOpcodeRule()); } 
	 iv_ruleConvertionOpcode=ruleConvertionOpcode 
	 { $current=$iv_ruleConvertionOpcode.current.getText(); }  
	 EOF 
;

// Rule ConvertionOpcode
ruleConvertionOpcode returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='trunc' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getConvertionOpcodeAccess().getTruncKeyword_0()); 
    }

    |
	kw='zext' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getConvertionOpcodeAccess().getZextKeyword_1()); 
    }

    |
	kw='sext' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getConvertionOpcodeAccess().getSextKeyword_2()); 
    }

    |
	kw='fptrunc' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getConvertionOpcodeAccess().getFptruncKeyword_3()); 
    }

    |
	kw='fpext' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getConvertionOpcodeAccess().getFpextKeyword_4()); 
    }

    |
	kw='fptoui' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getConvertionOpcodeAccess().getFptouiKeyword_5()); 
    }

    |
	kw='fptosi' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getConvertionOpcodeAccess().getFptosiKeyword_6()); 
    }

    |
	kw='uitofp' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getConvertionOpcodeAccess().getUitofpKeyword_7()); 
    }

    |
	kw='sitofp' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getConvertionOpcodeAccess().getSitofpKeyword_8()); 
    }

    |
	kw='ptrtoint' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getConvertionOpcodeAccess().getPtrtointKeyword_9()); 
    }

    |
	kw='inttoptr' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getConvertionOpcodeAccess().getInttoptrKeyword_10()); 
    }

    |
	kw='bitcast' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getConvertionOpcodeAccess().getBitcastKeyword_11()); 
    }

    |
	kw='addrspacecast' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getConvertionOpcodeAccess().getAddrspacecastKeyword_12()); 
    }
)
    ;





// Entry rule entryRuleOtherInstruction
entryRuleOtherInstruction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOtherInstructionRule()); }
	 iv_ruleOtherInstruction=ruleOtherInstruction 
	 { $current=$iv_ruleOtherInstruction.current; } 
	 EOF 
;

// Rule OtherInstruction
ruleOtherInstruction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getOtherInstructionAccess().getInstruction_icmpParserRuleCall_0()); 
    }
    this_Instruction_icmp_0=ruleInstruction_icmp
    { 
        $current = $this_Instruction_icmp_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOtherInstructionAccess().getInstruction_fcmpParserRuleCall_1()); 
    }
    this_Instruction_fcmp_1=ruleInstruction_fcmp
    { 
        $current = $this_Instruction_fcmp_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOtherInstructionAccess().getInstruction_selectParserRuleCall_2()); 
    }
    this_Instruction_select_2=ruleInstruction_select
    { 
        $current = $this_Instruction_select_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOtherInstructionAccess().getInstruction_va_argParserRuleCall_3()); 
    }
    this_Instruction_va_arg_3=ruleInstruction_va_arg
    { 
        $current = $this_Instruction_va_arg_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOtherInstructionAccess().getInstruction_landingpadParserRuleCall_4()); 
    }
    this_Instruction_landingpad_4=ruleInstruction_landingpad
    { 
        $current = $this_Instruction_landingpad_4.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleInstruction_icmp
entryRuleInstruction_icmp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstruction_icmpRule()); }
	 iv_ruleInstruction_icmp=ruleInstruction_icmp 
	 { $current=$iv_ruleInstruction_icmp.current; } 
	 EOF 
;

// Rule Instruction_icmp
ruleInstruction_icmp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_icmpAccess().getNameLocalNameParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleLocalName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_icmpRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"LocalName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_opcode_1_0=	'icmp' 
    {
        newLeafNode(lv_opcode_1_0, grammarAccess.getInstruction_icmpAccess().getOpcodeIcmpKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstruction_icmpRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_1_0, "icmp");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_icmpAccess().getConditionIcmpConditionParserRuleCall_2_0()); 
	    }
		lv_condition_2_0=ruleIcmpCondition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_icmpRule());
	        }
       		set(
       			$current, 
       			"condition",
        		lv_condition_2_0, 
        		"IcmpCondition");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_icmpAccess().getTypeTypeParserRuleCall_3_0()); 
	    }
		lv_type_3_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_icmpRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_icmpAccess().getOp1ValueRefParserRuleCall_4_0()); 
	    }
		lv_op1_4_0=ruleValueRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_icmpRule());
	        }
       		set(
       			$current, 
       			"op1",
        		lv_op1_4_0, 
        		"ValueRef");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getInstruction_icmpAccess().getCommaKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_icmpAccess().getOp2ValueRefParserRuleCall_6_0()); 
	    }
		lv_op2_6_0=ruleValueRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_icmpRule());
	        }
       		set(
       			$current, 
       			"op2",
        		lv_op2_6_0, 
        		"ValueRef");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleIcmpCondition
entryRuleIcmpCondition returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getIcmpConditionRule()); } 
	 iv_ruleIcmpCondition=ruleIcmpCondition 
	 { $current=$iv_ruleIcmpCondition.current.getText(); }  
	 EOF 
;

// Rule IcmpCondition
ruleIcmpCondition returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='eq' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIcmpConditionAccess().getEqKeyword_0()); 
    }

    |
	kw='ne' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIcmpConditionAccess().getNeKeyword_1()); 
    }

    |
	kw='ugt' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIcmpConditionAccess().getUgtKeyword_2()); 
    }

    |
	kw='uge' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIcmpConditionAccess().getUgeKeyword_3()); 
    }

    |
	kw='ult' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIcmpConditionAccess().getUltKeyword_4()); 
    }

    |
	kw='ule' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIcmpConditionAccess().getUleKeyword_5()); 
    }

    |
	kw='sgt' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIcmpConditionAccess().getSgtKeyword_6()); 
    }

    |
	kw='sge' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIcmpConditionAccess().getSgeKeyword_7()); 
    }

    |
	kw='slt' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIcmpConditionAccess().getSltKeyword_8()); 
    }

    |
	kw='sle' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIcmpConditionAccess().getSleKeyword_9()); 
    }
)
    ;





// Entry rule entryRuleInstruction_fcmp
entryRuleInstruction_fcmp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstruction_fcmpRule()); }
	 iv_ruleInstruction_fcmp=ruleInstruction_fcmp 
	 { $current=$iv_ruleInstruction_fcmp.current; } 
	 EOF 
;

// Rule Instruction_fcmp
ruleInstruction_fcmp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_fcmpAccess().getNameLocalNameParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleLocalName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_fcmpRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"LocalName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_opcode_1_0=	'fcmp' 
    {
        newLeafNode(lv_opcode_1_0, grammarAccess.getInstruction_fcmpAccess().getOpcodeFcmpKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstruction_fcmpRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_1_0, "fcmp");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_fcmpAccess().getConditionFcmpConditionParserRuleCall_2_0()); 
	    }
		lv_condition_2_0=ruleFcmpCondition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_fcmpRule());
	        }
       		set(
       			$current, 
       			"condition",
        		lv_condition_2_0, 
        		"FcmpCondition");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_fcmpAccess().getTypeTypeParserRuleCall_3_0()); 
	    }
		lv_type_3_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_fcmpRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_fcmpAccess().getOp1ValueRefParserRuleCall_4_0()); 
	    }
		lv_op1_4_0=ruleValueRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_fcmpRule());
	        }
       		set(
       			$current, 
       			"op1",
        		lv_op1_4_0, 
        		"ValueRef");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getInstruction_fcmpAccess().getCommaKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_fcmpAccess().getOp2ValueRefParserRuleCall_6_0()); 
	    }
		lv_op2_6_0=ruleValueRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_fcmpRule());
	        }
       		set(
       			$current, 
       			"op2",
        		lv_op2_6_0, 
        		"ValueRef");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleFcmpCondition
entryRuleFcmpCondition returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getFcmpConditionRule()); } 
	 iv_ruleFcmpCondition=ruleFcmpCondition 
	 { $current=$iv_ruleFcmpCondition.current.getText(); }  
	 EOF 
;

// Rule FcmpCondition
ruleFcmpCondition returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_BOOLEAN_0=RULE_BOOLEAN    {
		$current.merge(this_BOOLEAN_0);
    }

    { 
    newLeafNode(this_BOOLEAN_0, grammarAccess.getFcmpConditionAccess().getBOOLEANTerminalRuleCall_0()); 
    }

    |
	kw='oeq' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFcmpConditionAccess().getOeqKeyword_1()); 
    }

    |
	kw='ogt' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFcmpConditionAccess().getOgtKeyword_2()); 
    }

    |
	kw='oge' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFcmpConditionAccess().getOgeKeyword_3()); 
    }

    |
	kw='olt' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFcmpConditionAccess().getOltKeyword_4()); 
    }

    |
	kw='ole' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFcmpConditionAccess().getOleKeyword_5()); 
    }

    |
	kw='one' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFcmpConditionAccess().getOneKeyword_6()); 
    }

    |
	kw='ord' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFcmpConditionAccess().getOrdKeyword_7()); 
    }

    |
	kw='ueq' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFcmpConditionAccess().getUeqKeyword_8()); 
    }

    |
	kw='ugt' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFcmpConditionAccess().getUgtKeyword_9()); 
    }

    |
	kw='uge' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFcmpConditionAccess().getUgeKeyword_10()); 
    }

    |
	kw='ult' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFcmpConditionAccess().getUltKeyword_11()); 
    }

    |
	kw='ule' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFcmpConditionAccess().getUleKeyword_12()); 
    }

    |
	kw='une' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFcmpConditionAccess().getUneKeyword_13()); 
    }

    |
	kw='uno' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFcmpConditionAccess().getUnoKeyword_14()); 
    }
)
    ;





// Entry rule entryRuleInstruction_phi
entryRuleInstruction_phi returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstruction_phiRule()); }
	 iv_ruleInstruction_phi=ruleInstruction_phi 
	 { $current=$iv_ruleInstruction_phi.current; } 
	 EOF 
;

// Rule Instruction_phi
ruleInstruction_phi returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_phiAccess().getNameLocalNameParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleLocalName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_phiRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"LocalName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_opcode_1_0=	'phi' 
    {
        newLeafNode(lv_opcode_1_0, grammarAccess.getInstruction_phiAccess().getOpcodePhiKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstruction_phiRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_1_0, "phi");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_phiAccess().getTypeTypeParserRuleCall_2_0()); 
	    }
		lv_type_2_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_phiRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_2_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3='[' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getInstruction_phiAccess().getLeftSquareBracketKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_phiAccess().getValuesValueRefParserRuleCall_3_1_0()); 
	    }
		lv_values_4_0=ruleValueRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_phiRule());
	        }
       		add(
       			$current, 
       			"values",
        		lv_values_4_0, 
        		"ValueRef");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getInstruction_phiAccess().getCommaKeyword_3_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_phiAccess().getLabelsBasicBlockRefParserRuleCall_3_3_0()); 
	    }
		lv_labels_6_0=ruleBasicBlockRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_phiRule());
	        }
       		add(
       			$current, 
       			"labels",
        		lv_labels_6_0, 
        		"BasicBlockRef");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7=']' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getInstruction_phiAccess().getRightSquareBracketKeyword_3_4());
    }
)(	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getInstruction_phiAccess().getCommaKeyword_4_0());
    }
	otherlv_9='[' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getInstruction_phiAccess().getLeftSquareBracketKeyword_4_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_phiAccess().getValuesValueRefParserRuleCall_4_2_0()); 
	    }
		lv_values_10_0=ruleValueRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_phiRule());
	        }
       		add(
       			$current, 
       			"values",
        		lv_values_10_0, 
        		"ValueRef");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_11=',' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getInstruction_phiAccess().getCommaKeyword_4_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_phiAccess().getLabelsBasicBlockRefParserRuleCall_4_4_0()); 
	    }
		lv_labels_12_0=ruleBasicBlockRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_phiRule());
	        }
       		add(
       			$current, 
       			"labels",
        		lv_labels_12_0, 
        		"BasicBlockRef");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_13=']' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getInstruction_phiAccess().getRightSquareBracketKeyword_4_5());
    }
)*)
;





// Entry rule entryRuleInstruction_select
entryRuleInstruction_select returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstruction_selectRule()); }
	 iv_ruleInstruction_select=ruleInstruction_select 
	 { $current=$iv_ruleInstruction_select.current; } 
	 EOF 
;

// Rule Instruction_select
ruleInstruction_select returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_selectAccess().getNameLocalNameParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleLocalName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_selectRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"LocalName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_opcode_1_0=	'select' 
    {
        newLeafNode(lv_opcode_1_0, grammarAccess.getInstruction_selectAccess().getOpcodeSelectKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstruction_selectRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_1_0, "select");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_selectAccess().getConditionTypedValueParserRuleCall_2_0()); 
	    }
		lv_condition_2_0=ruleTypedValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_selectRule());
	        }
       		set(
       			$current, 
       			"condition",
        		lv_condition_2_0, 
        		"TypedValue");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getInstruction_selectAccess().getCommaKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_selectAccess().getValue1TypedValueParserRuleCall_4_0()); 
	    }
		lv_value1_4_0=ruleTypedValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_selectRule());
	        }
       		set(
       			$current, 
       			"value1",
        		lv_value1_4_0, 
        		"TypedValue");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getInstruction_selectAccess().getCommaKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_selectAccess().getValue2TypedValueParserRuleCall_6_0()); 
	    }
		lv_value2_6_0=ruleTypedValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_selectRule());
	        }
       		set(
       			$current, 
       			"value2",
        		lv_value2_6_0, 
        		"TypedValue");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleInstruction_call_nonVoid
entryRuleInstruction_call_nonVoid returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstruction_call_nonVoidRule()); }
	 iv_ruleInstruction_call_nonVoid=ruleInstruction_call_nonVoid 
	 { $current=$iv_ruleInstruction_call_nonVoid.current; } 
	 EOF 
;

// Rule Instruction_call_nonVoid
ruleInstruction_call_nonVoid returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_call_nonVoidAccess().getNameLocalNameParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleLocalName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_call_nonVoidRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"LocalName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_isTail_1_0=	'tail' 
    {
        newLeafNode(lv_isTail_1_0, grammarAccess.getInstruction_call_nonVoidAccess().getIsTailTailKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstruction_call_nonVoidRule());
	        }
       		setWithLastConsumed($current, "isTail", true, "tail");
	    }

)
)?(
(
		lv_opcode_2_0=	'call' 
    {
        newLeafNode(lv_opcode_2_0, grammarAccess.getInstruction_call_nonVoidAccess().getOpcodeCallKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstruction_call_nonVoidRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_2_0, "call");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_call_nonVoidAccess().getCconvCConvParserRuleCall_3_0()); 
	    }
		lv_cconv_3_0=ruleCConv		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_call_nonVoidRule());
	        }
       		set(
       			$current, 
       			"cconv",
        		lv_cconv_3_0, 
        		"CConv");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_call_nonVoidAccess().getReturnAttributesParameterAttributesParserRuleCall_4_0()); 
	    }
		lv_returnAttributes_4_0=ruleParameterAttributes		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_call_nonVoidRule());
	        }
       		set(
       			$current, 
       			"returnAttributes",
        		lv_returnAttributes_4_0, 
        		"ParameterAttributes");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_call_nonVoidAccess().getTypeNonVoidTypeParserRuleCall_5_0()); 
	    }
		lv_type_5_0=ruleNonVoidType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_call_nonVoidRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_5_0, 
        		"NonVoidType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_call_nonVoidAccess().getCalleeCalleeParserRuleCall_6_0()); 
	    }
		lv_callee_6_0=ruleCallee		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_call_nonVoidRule());
	        }
       		set(
       			$current, 
       			"callee",
        		lv_callee_6_0, 
        		"Callee");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_call_nonVoidAccess().getArgsArgListParserRuleCall_7_0()); 
	    }
		lv_args_7_0=ruleArgList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_call_nonVoidRule());
	        }
       		set(
       			$current, 
       			"args",
        		lv_args_7_0, 
        		"ArgList");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_call_nonVoidAccess().getAttributesFunctionAttributesParserRuleCall_8_0()); 
	    }
		lv_attributes_8_0=ruleFunctionAttributes		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_call_nonVoidRule());
	        }
       		set(
       			$current, 
       			"attributes",
        		lv_attributes_8_0, 
        		"FunctionAttributes");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleInstruction_call_void
entryRuleInstruction_call_void returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstruction_call_voidRule()); }
	 iv_ruleInstruction_call_void=ruleInstruction_call_void 
	 { $current=$iv_ruleInstruction_call_void.current; } 
	 EOF 
;

// Rule Instruction_call_void
ruleInstruction_call_void returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_isTail_0_0=	'tail' 
    {
        newLeafNode(lv_isTail_0_0, grammarAccess.getInstruction_call_voidAccess().getIsTailTailKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstruction_call_voidRule());
	        }
       		setWithLastConsumed($current, "isTail", true, "tail");
	    }

)
)?(
(
		lv_opcode_1_0=	'call' 
    {
        newLeafNode(lv_opcode_1_0, grammarAccess.getInstruction_call_voidAccess().getOpcodeCallKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstruction_call_voidRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_1_0, "call");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_call_voidAccess().getCconvCConvParserRuleCall_2_0()); 
	    }
		lv_cconv_2_0=ruleCConv		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_call_voidRule());
	        }
       		set(
       			$current, 
       			"cconv",
        		lv_cconv_2_0, 
        		"CConv");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_call_voidAccess().getReturnAttributesParameterAttributesParserRuleCall_3_0()); 
	    }
		lv_returnAttributes_3_0=ruleParameterAttributes		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_call_voidRule());
	        }
       		set(
       			$current, 
       			"returnAttributes",
        		lv_returnAttributes_3_0, 
        		"ParameterAttributes");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_call_voidAccess().getTypeVoidTypeParserRuleCall_4_0()); 
	    }
		lv_type_4_0=ruleVoidType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_call_voidRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_4_0, 
        		"VoidType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_call_voidAccess().getCalleeCalleeParserRuleCall_5_0()); 
	    }
		lv_callee_5_0=ruleCallee		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_call_voidRule());
	        }
       		set(
       			$current, 
       			"callee",
        		lv_callee_5_0, 
        		"Callee");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_call_voidAccess().getArgsArgListParserRuleCall_6_0()); 
	    }
		lv_args_6_0=ruleArgList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_call_voidRule());
	        }
       		set(
       			$current, 
       			"args",
        		lv_args_6_0, 
        		"ArgList");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_call_voidAccess().getAttributesFunctionAttributesParserRuleCall_7_0()); 
	    }
		lv_attributes_7_0=ruleFunctionAttributes		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_call_voidRule());
	        }
       		set(
       			$current, 
       			"attributes",
        		lv_attributes_7_0, 
        		"FunctionAttributes");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleArgList
entryRuleArgList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArgListRule()); }
	 iv_ruleArgList=ruleArgList 
	 { $current=$iv_ruleArgList.current; } 
	 EOF 
;

// Rule ArgList
ruleArgList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getArgListAccess().getArgListAction_0(),
            $current);
    }
)	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getArgListAccess().getLeftParenthesisKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getArgListAccess().getArgumentsArgumentParserRuleCall_2_0_0()); 
	    }
		lv_arguments_2_0=ruleArgument		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArgListRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_2_0, 
        		"Argument");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getArgListAccess().getCommaKeyword_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArgListAccess().getArgumentsArgumentParserRuleCall_2_1_1_0()); 
	    }
		lv_arguments_4_0=ruleArgument		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArgListRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_4_0, 
        		"Argument");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getArgListAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleCallee
entryRuleCallee returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCalleeRule()); }
	 iv_ruleCallee=ruleCallee 
	 { $current=$iv_ruleCallee.current; } 
	 EOF 
;

// Rule Callee
ruleCallee returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getCalleeAccess().getValueRefParserRuleCall_0()); 
    }
    this_ValueRef_0=ruleValueRef
    { 
        $current = $this_ValueRef_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getCalleeAccess().getInlineAssemblerParserRuleCall_1()); 
    }
    this_InlineAssembler_1=ruleInlineAssembler
    { 
        $current = $this_InlineAssembler_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleInlineAssembler
entryRuleInlineAssembler returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInlineAssemblerRule()); }
	 iv_ruleInlineAssembler=ruleInlineAssembler 
	 { $current=$iv_ruleInlineAssembler.current; } 
	 EOF 
;

// Rule InlineAssembler
ruleInlineAssembler returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='asm' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getInlineAssemblerAccess().getAsmKeyword_0());
    }
(	otherlv_1='sideeffect' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInlineAssemblerAccess().getSideeffectKeyword_1());
    }
)?(	otherlv_2='alignstack' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInlineAssemblerAccess().getAlignstackKeyword_2());
    }
)?(	otherlv_3='inteldialect' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getInlineAssemblerAccess().getInteldialectKeyword_3());
    }
)?(
(
		lv_assembler_4_0=RULE_STRING
		{
			newLeafNode(lv_assembler_4_0, grammarAccess.getInlineAssemblerAccess().getAssemblerSTRINGTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInlineAssemblerRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"assembler",
        		lv_assembler_4_0, 
        		"STRING");
	    }

)
)	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getInlineAssemblerAccess().getCommaKeyword_5());
    }
(
(
		lv_flags_6_0=RULE_STRING
		{
			newLeafNode(lv_flags_6_0, grammarAccess.getInlineAssemblerAccess().getFlagsSTRINGTerminalRuleCall_6_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInlineAssemblerRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"flags",
        		lv_flags_6_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleInstruction_va_arg
entryRuleInstruction_va_arg returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstruction_va_argRule()); }
	 iv_ruleInstruction_va_arg=ruleInstruction_va_arg 
	 { $current=$iv_ruleInstruction_va_arg.current; } 
	 EOF 
;

// Rule Instruction_va_arg
ruleInstruction_va_arg returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_va_argAccess().getNameLocalNameParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleLocalName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_va_argRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"LocalName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_opcode_1_0=	'va_arg' 
    {
        newLeafNode(lv_opcode_1_0, grammarAccess.getInstruction_va_argAccess().getOpcodeVa_argKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstruction_va_argRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_1_0, "va_arg");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_va_argAccess().getArglistTypedValueParserRuleCall_2_0()); 
	    }
		lv_arglist_2_0=ruleTypedValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_va_argRule());
	        }
       		set(
       			$current, 
       			"arglist",
        		lv_arglist_2_0, 
        		"TypedValue");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getInstruction_va_argAccess().getCommaKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_va_argAccess().getTypeTypeParserRuleCall_4_0()); 
	    }
		lv_type_4_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_va_argRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_4_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleInstruction_landingpad
entryRuleInstruction_landingpad returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstruction_landingpadRule()); }
	 iv_ruleInstruction_landingpad=ruleInstruction_landingpad 
	 { $current=$iv_ruleInstruction_landingpad.current; } 
	 EOF 
;

// Rule Instruction_landingpad
ruleInstruction_landingpad returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_landingpadAccess().getNameLocalNameParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleLocalName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_landingpadRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"LocalName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_opcode_1_0=	'landingpad' 
    {
        newLeafNode(lv_opcode_1_0, grammarAccess.getInstruction_landingpadAccess().getOpcodeLandingpadKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstruction_landingpadRule());
	        }
       		setWithLastConsumed($current, "opcode", lv_opcode_1_0, "landingpad");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_landingpadAccess().getResultTypeTypeParserRuleCall_2_0()); 
	    }
		lv_resultType_2_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_landingpadRule());
	        }
       		set(
       			$current, 
       			"resultType",
        		lv_resultType_2_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='personality' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getInstruction_landingpadAccess().getPersonalityKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_landingpadAccess().getPersonalityTypedValueParserRuleCall_4_0()); 
	    }
		lv_personality_4_0=ruleTypedValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_landingpadRule());
	        }
       		set(
       			$current, 
       			"personality",
        		lv_personality_4_0, 
        		"TypedValue");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_landingpadAccess().getClausesLandingpadClauseParserRuleCall_5_0_0()); 
	    }
		lv_clauses_5_0=ruleLandingpadClause		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_landingpadRule());
	        }
       		add(
       			$current, 
       			"clauses",
        		lv_clauses_5_0, 
        		"LandingpadClause");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |	otherlv_6='cleanup' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getInstruction_landingpadAccess().getCleanupKeyword_5_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstruction_landingpadAccess().getClausesLandingpadClauseParserRuleCall_6_0()); 
	    }
		lv_clauses_7_0=ruleLandingpadClause		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstruction_landingpadRule());
	        }
       		add(
       			$current, 
       			"clauses",
        		lv_clauses_7_0, 
        		"LandingpadClause");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleLandingpadClause
entryRuleLandingpadClause returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLandingpadClauseRule()); }
	 iv_ruleLandingpadClause=ruleLandingpadClause 
	 { $current=$iv_ruleLandingpadClause.current; } 
	 EOF 
;

// Rule LandingpadClause
ruleLandingpadClause returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_landingPadType_0_0=	'catch' 
    {
        newLeafNode(lv_landingPadType_0_0, grammarAccess.getLandingpadClauseAccess().getLandingPadTypeCatchKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLandingpadClauseRule());
	        }
       		setWithLastConsumed($current, "landingPadType", lv_landingPadType_0_0, "catch");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getLandingpadClauseAccess().getCatchTypeTypedValueParserRuleCall_0_1_0()); 
	    }
		lv_catchType_1_0=ruleTypedValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLandingpadClauseRule());
	        }
       		set(
       			$current, 
       			"catchType",
        		lv_catchType_1_0, 
        		"TypedValue");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_landingPadType_2_0=	'filter' 
    {
        newLeafNode(lv_landingPadType_2_0, grammarAccess.getLandingpadClauseAccess().getLandingPadTypeFilterKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLandingpadClauseRule());
	        }
       		setWithLastConsumed($current, "landingPadType", lv_landingPadType_2_0, "filter");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getLandingpadClauseAccess().getArrayTypeArrayTypeParserRuleCall_1_1_0()); 
	    }
		lv_arrayType_3_0=ruleArrayType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLandingpadClauseRule());
	        }
       		set(
       			$current, 
       			"arrayType",
        		lv_arrayType_3_0, 
        		"ArrayType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getLandingpadClauseAccess().getArrayConstantArrayConstantParserRuleCall_1_2_0()); 
	    }
		lv_arrayConstant_4_0=ruleArrayConstant		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLandingpadClauseRule());
	        }
       		set(
       			$current, 
       			"arrayConstant",
        		lv_arrayConstant_4_0, 
        		"ArrayConstant");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleOrdering
entryRuleOrdering returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOrderingRule()); } 
	 iv_ruleOrdering=ruleOrdering 
	 { $current=$iv_ruleOrdering.current.getText(); }  
	 EOF 
;

// Rule Ordering
ruleOrdering returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='unordered' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOrderingAccess().getUnorderedKeyword_0()); 
    }

    |
	kw='monotonic' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOrderingAccess().getMonotonicKeyword_1()); 
    }

    |
	kw='acquire' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOrderingAccess().getAcquireKeyword_2()); 
    }

    |
	kw='release' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOrderingAccess().getReleaseKeyword_3()); 
    }

    |
	kw='acq_rel' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOrderingAccess().getAcq_relKeyword_4()); 
    }

    |
	kw='seq_cst' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOrderingAccess().getSeq_cstKeyword_5()); 
    }
)
    ;





// Entry rule entryRuleTypedValue
entryRuleTypedValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypedValueRule()); }
	 iv_ruleTypedValue=ruleTypedValue 
	 { $current=$iv_ruleTypedValue.current; } 
	 EOF 
;

// Rule TypedValue
ruleTypedValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getTypedValueAccess().getTypeTypeParserRuleCall_0_0()); 
	    }
		lv_type_0_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypedValueRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_0_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getTypedValueAccess().getRefValueRefParserRuleCall_1_0()); 
	    }
		lv_ref_1_0=ruleValueRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypedValueRule());
	        }
       		set(
       			$current, 
       			"ref",
        		lv_ref_1_0, 
        		"ValueRef");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleParameterType
entryRuleParameterType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParameterTypeRule()); }
	 iv_ruleParameterType=ruleParameterType 
	 { $current=$iv_ruleParameterType.current; } 
	 EOF 
;

// Rule ParameterType
ruleParameterType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getParameterTypeAccess().getTypeTypeParserRuleCall_0_0()); 
	    }
		lv_type_0_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterTypeRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_0_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getParameterTypeAccess().getAttrsParameterAttributesParserRuleCall_1_0()); 
	    }
		lv_attrs_1_0=ruleParameterAttributes		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterTypeRule());
	        }
       		set(
       			$current, 
       			"attrs",
        		lv_attrs_1_0, 
        		"ParameterAttributes");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleParameterAttributes
entryRuleParameterAttributes returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParameterAttributesRule()); }
	 iv_ruleParameterAttributes=ruleParameterAttributes 
	 { $current=$iv_ruleParameterAttributes.current; } 
	 EOF 
;

// Rule ParameterAttributes
ruleParameterAttributes returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getParameterAttributesAccess().getAttributesParameterAttributeParserRuleCall_0()); 
	    }
		lv_attributes_0_0=ruleParameterAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterAttributesRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_0_0, 
        		"ParameterAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
)+
;





// Entry rule entryRuleParameterAttribute
entryRuleParameterAttribute returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getParameterAttributeRule()); } 
	 iv_ruleParameterAttribute=ruleParameterAttribute 
	 { $current=$iv_ruleParameterAttribute.current.getText(); }  
	 EOF 
;

// Rule ParameterAttribute
ruleParameterAttribute returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='zeroext' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getParameterAttributeAccess().getZeroextKeyword_0()); 
    }

    |
	kw='signext' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getParameterAttributeAccess().getSignextKeyword_1()); 
    }

    |
	kw='inreg' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getParameterAttributeAccess().getInregKeyword_2()); 
    }

    |(
	kw='byval' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getParameterAttributeAccess().getByvalKeyword_3_0()); 
    }
(
	kw='align' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getParameterAttributeAccess().getAlignKeyword_3_1_0()); 
    }
    this_INTEGER_5=RULE_INTEGER    {
		$current.merge(this_INTEGER_5);
    }

    { 
    newLeafNode(this_INTEGER_5, grammarAccess.getParameterAttributeAccess().getINTEGERTerminalRuleCall_3_1_1()); 
    }
)?)
    |
	kw='sret' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getParameterAttributeAccess().getSretKeyword_4()); 
    }

    |
	kw='noalias' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getParameterAttributeAccess().getNoaliasKeyword_5()); 
    }

    |
	kw='nocapture' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getParameterAttributeAccess().getNocaptureKeyword_6()); 
    }

    |
	kw='nest' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getParameterAttributeAccess().getNestKeyword_7()); 
    }

    |
	kw='returned' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getParameterAttributeAccess().getReturnedKeyword_8()); 
    }

    |
	kw='inalloca' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getParameterAttributeAccess().getInallocaKeyword_9()); 
    }
)
    ;





// Entry rule entryRuleArgument
entryRuleArgument returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArgumentRule()); }
	 iv_ruleArgument=ruleArgument 
	 { $current=$iv_ruleArgument.current; } 
	 EOF 
;

// Rule Argument
ruleArgument returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getArgumentAccess().getTypeParameterTypeParserRuleCall_0_0()); 
	    }
		lv_type_0_0=ruleParameterType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArgumentRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_0_0, 
        		"ParameterType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getArgumentAccess().getRefValueRefParserRuleCall_1_0()); 
	    }
		lv_ref_1_0=ruleValueRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArgumentRule());
	        }
       		set(
       			$current, 
       			"ref",
        		lv_ref_1_0, 
        		"ValueRef");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleParameter
entryRuleParameter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParameterRule()); }
	 iv_ruleParameter=ruleParameter 
	 { $current=$iv_ruleParameter.current; } 
	 EOF 
;

// Rule Parameter
ruleParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getParameterAccess().getTypeParameterTypeParserRuleCall_0_0()); 
	    }
		lv_type_0_0=ruleParameterType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_0_0, 
        		"ParameterType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getParameterAccess().getNameParamNameParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleParamName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ParamName");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleNonVoidType
entryRuleNonVoidType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNonVoidTypeRule()); }
	 iv_ruleNonVoidType=ruleNonVoidType 
	 { $current=$iv_ruleNonVoidType.current; } 
	 EOF 
;

// Rule NonVoidType
ruleNonVoidType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{ 
	        newCompositeNode(grammarAccess.getNonVoidTypeAccess().getBaseTypeVoidTypeParserRuleCall_0_0_0()); 
	    }
		lv_baseType_0_0=ruleVoidType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNonVoidTypeRule());
	        }
       		set(
       			$current, 
       			"baseType",
        		lv_baseType_0_0, 
        		"VoidType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getNonVoidTypeAccess().getSuffixesTypeSuffixParserRuleCall_0_1_0()); 
	    }
		lv_suffixes_1_0=ruleTypeSuffix		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNonVoidTypeRule());
	        }
       		add(
       			$current, 
       			"suffixes",
        		lv_suffixes_1_0, 
        		"TypeSuffix");
	        afterParserOrEnumRuleCall();
	    }

)
)+)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getNonVoidTypeAccess().getBaseTypeNonLeftRecursiveNonVoidTypeParserRuleCall_1_0_0()); 
	    }
		lv_baseType_2_0=ruleNonLeftRecursiveNonVoidType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNonVoidTypeRule());
	        }
       		set(
       			$current, 
       			"baseType",
        		lv_baseType_2_0, 
        		"NonLeftRecursiveNonVoidType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getNonVoidTypeAccess().getStarsStarParserRuleCall_1_1_0()); 
	    }
		lv_stars_3_0=ruleStar		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNonVoidTypeRule());
	        }
       		add(
       			$current, 
       			"stars",
        		lv_stars_3_0, 
        		"Star");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getNonVoidTypeAccess().getSuffixesTypeSuffixParserRuleCall_1_2_0()); 
	    }
		lv_suffixes_4_0=ruleTypeSuffix		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNonVoidTypeRule());
	        }
       		add(
       			$current, 
       			"suffixes",
        		lv_suffixes_4_0, 
        		"TypeSuffix");
	        afterParserOrEnumRuleCall();
	    }

)
)*))
;





// Entry rule entryRuleStar
entryRuleStar returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStarRule()); }
	 iv_ruleStar=ruleStar 
	 { $current=$iv_ruleStar.current; } 
	 EOF 
;

// Rule Star
ruleStar returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getStarAccess().getStarAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getStarAccess().getAddressSpaceAddressSpaceParserRuleCall_1_0()); 
	    }
		lv_addressSpace_1_0=ruleAddressSpace		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStarRule());
	        }
       		set(
       			$current, 
       			"addressSpace",
        		lv_addressSpace_1_0, 
        		"AddressSpace");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_2='*' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getStarAccess().getAsteriskKeyword_2());
    }
)
;





// Entry rule entryRuleType
entryRuleType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	 iv_ruleType=ruleType 
	 { $current=$iv_ruleType.current; } 
	 EOF 
;

// Rule Type
ruleType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getTypeAccess().getBaseTypeNonLeftRecursiveTypeParserRuleCall_0_0()); 
	    }
		lv_baseType_0_0=ruleNonLeftRecursiveType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeRule());
	        }
       		set(
       			$current, 
       			"baseType",
        		lv_baseType_0_0, 
        		"NonLeftRecursiveType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeAccess().getStarsStarParserRuleCall_1_0()); 
	    }
		lv_stars_1_0=ruleStar		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeRule());
	        }
       		add(
       			$current, 
       			"stars",
        		lv_stars_1_0, 
        		"Star");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeAccess().getSuffixesTypeSuffixParserRuleCall_2_0()); 
	    }
		lv_suffixes_2_0=ruleTypeSuffix		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeRule());
	        }
       		add(
       			$current, 
       			"suffixes",
        		lv_suffixes_2_0, 
        		"TypeSuffix");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleTypeSuffix
entryRuleTypeSuffix returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypeSuffixRule()); }
	 iv_ruleTypeSuffix=ruleTypeSuffix 
	 { $current=$iv_ruleTypeSuffix.current; } 
	 EOF 
;

// Rule TypeSuffix
ruleTypeSuffix returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getTypeSuffixAccess().getTypeSuffixAction_0(),
            $current);
    }
)	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTypeSuffixAccess().getLeftParenthesisKeyword_1());
    }
(((
(
		{ 
	        newCompositeNode(grammarAccess.getTypeSuffixAccess().getContainedTypesParameterTypeParserRuleCall_2_0_0_0()); 
	    }
		lv_containedTypes_2_0=ruleParameterType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeSuffixRule());
	        }
       		add(
       			$current, 
       			"containedTypes",
        		lv_containedTypes_2_0, 
        		"ParameterType");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTypeSuffixAccess().getCommaKeyword_2_0_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeSuffixAccess().getContainedTypesParameterTypeParserRuleCall_2_0_1_1_0()); 
	    }
		lv_containedTypes_4_0=ruleParameterType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeSuffixRule());
	        }
       		add(
       			$current, 
       			"containedTypes",
        		lv_containedTypes_4_0, 
        		"ParameterType");
	        afterParserOrEnumRuleCall();
	    }

)
))*(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getTypeSuffixAccess().getCommaKeyword_2_0_2_0());
    }
(
(
		lv_vararg_6_0=	'...' 
    {
        newLeafNode(lv_vararg_6_0, grammarAccess.getTypeSuffixAccess().getVarargFullStopFullStopFullStopKeyword_2_0_2_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeSuffixRule());
	        }
       		setWithLastConsumed($current, "vararg", lv_vararg_6_0, "...");
	    }

)
))?)?
    |(
(
		lv_vararg_7_0=	'...' 
    {
        newLeafNode(lv_vararg_7_0, grammarAccess.getTypeSuffixAccess().getVarargFullStopFullStopFullStopKeyword_2_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeSuffixRule());
	        }
       		setWithLastConsumed($current, "vararg", lv_vararg_7_0, "...");
	    }

)
))	otherlv_8=')' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getTypeSuffixAccess().getRightParenthesisKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeSuffixAccess().getStarsStarParserRuleCall_4_0()); 
	    }
		lv_stars_9_0=ruleStar		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeSuffixRule());
	        }
       		add(
       			$current, 
       			"stars",
        		lv_stars_9_0, 
        		"Star");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleNonLeftRecursiveType
entryRuleNonLeftRecursiveType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNonLeftRecursiveTypeRule()); }
	 iv_ruleNonLeftRecursiveType=ruleNonLeftRecursiveType 
	 { $current=$iv_ruleNonLeftRecursiveType.current; } 
	 EOF 
;

// Rule NonLeftRecursiveType
ruleNonLeftRecursiveType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
(
		{ 
	        newCompositeNode(grammarAccess.getNonLeftRecursiveTypeAccess().getTypeIntTypeParserRuleCall_0_0_0()); 
	    }
		lv_type_0_1=ruleIntType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNonLeftRecursiveTypeRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_0_1, 
        		"IntType");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getNonLeftRecursiveTypeAccess().getTypeFloatingTypeParserRuleCall_0_0_1()); 
	    }
		lv_type_0_2=ruleFloatingType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNonLeftRecursiveTypeRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_0_2, 
        		"FloatingType");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getNonLeftRecursiveTypeAccess().getTypeVectorTypeParserRuleCall_0_0_2()); 
	    }
		lv_type_0_3=ruleVectorType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNonLeftRecursiveTypeRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_0_3, 
        		"VectorType");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getNonLeftRecursiveTypeAccess().getTypeArrayTypeParserRuleCall_0_0_3()); 
	    }
		lv_type_0_4=ruleArrayType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNonLeftRecursiveTypeRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_0_4, 
        		"ArrayType");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getNonLeftRecursiveTypeAccess().getTypeX86mmxTypeParserRuleCall_0_0_4()); 
	    }
		lv_type_0_5=ruleX86mmxType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNonLeftRecursiveTypeRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_0_5, 
        		"X86mmxType");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getNonLeftRecursiveTypeAccess().getTypeVoidTypeParserRuleCall_0_0_5()); 
	    }
		lv_type_0_6=ruleVoidType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNonLeftRecursiveTypeRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_0_6, 
        		"VoidType");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getNonLeftRecursiveTypeAccess().getTypeMetadataTypeParserRuleCall_0_0_6()); 
	    }
		lv_type_0_7=ruleMetadataType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNonLeftRecursiveTypeRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_0_7, 
        		"MetadataType");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getNonLeftRecursiveTypeAccess().getTypeStructTypeParserRuleCall_0_0_7()); 
	    }
		lv_type_0_8=ruleStructType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNonLeftRecursiveTypeRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_0_8, 
        		"StructType");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getNonLeftRecursiveTypeAccess().getTypeOpaqueTypeParserRuleCall_0_0_8()); 
	    }
		lv_type_0_9=ruleOpaqueType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNonLeftRecursiveTypeRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_0_9, 
        		"OpaqueType");
	        afterParserOrEnumRuleCall();
	    }

)

)
)
    |(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getNonLeftRecursiveTypeRule());
	        }
        }
	otherlv_1=RULE_LOCAL_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getNonLeftRecursiveTypeAccess().getTypedefTypeDefCrossReference_1_0()); 
	}

)
))
;





// Entry rule entryRuleNonLeftRecursiveNonVoidType
entryRuleNonLeftRecursiveNonVoidType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNonLeftRecursiveNonVoidTypeRule()); }
	 iv_ruleNonLeftRecursiveNonVoidType=ruleNonLeftRecursiveNonVoidType 
	 { $current=$iv_ruleNonLeftRecursiveNonVoidType.current; } 
	 EOF 
;

// Rule NonLeftRecursiveNonVoidType
ruleNonLeftRecursiveNonVoidType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
(
		{ 
	        newCompositeNode(grammarAccess.getNonLeftRecursiveNonVoidTypeAccess().getTypeIntTypeParserRuleCall_0_0_0()); 
	    }
		lv_type_0_1=ruleIntType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNonLeftRecursiveNonVoidTypeRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_0_1, 
        		"IntType");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getNonLeftRecursiveNonVoidTypeAccess().getTypeFloatingTypeParserRuleCall_0_0_1()); 
	    }
		lv_type_0_2=ruleFloatingType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNonLeftRecursiveNonVoidTypeRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_0_2, 
        		"FloatingType");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getNonLeftRecursiveNonVoidTypeAccess().getTypeVectorTypeParserRuleCall_0_0_2()); 
	    }
		lv_type_0_3=ruleVectorType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNonLeftRecursiveNonVoidTypeRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_0_3, 
        		"VectorType");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getNonLeftRecursiveNonVoidTypeAccess().getTypeArrayTypeParserRuleCall_0_0_3()); 
	    }
		lv_type_0_4=ruleArrayType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNonLeftRecursiveNonVoidTypeRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_0_4, 
        		"ArrayType");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getNonLeftRecursiveNonVoidTypeAccess().getTypeX86mmxTypeParserRuleCall_0_0_4()); 
	    }
		lv_type_0_5=ruleX86mmxType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNonLeftRecursiveNonVoidTypeRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_0_5, 
        		"X86mmxType");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getNonLeftRecursiveNonVoidTypeAccess().getTypeMetadataTypeParserRuleCall_0_0_5()); 
	    }
		lv_type_0_6=ruleMetadataType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNonLeftRecursiveNonVoidTypeRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_0_6, 
        		"MetadataType");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getNonLeftRecursiveNonVoidTypeAccess().getTypeStructTypeParserRuleCall_0_0_6()); 
	    }
		lv_type_0_7=ruleStructType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNonLeftRecursiveNonVoidTypeRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_0_7, 
        		"StructType");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getNonLeftRecursiveNonVoidTypeAccess().getTypeOpaqueTypeParserRuleCall_0_0_7()); 
	    }
		lv_type_0_8=ruleOpaqueType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNonLeftRecursiveNonVoidTypeRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_0_8, 
        		"OpaqueType");
	        afterParserOrEnumRuleCall();
	    }

)

)
)
    |(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getNonLeftRecursiveNonVoidTypeRule());
	        }
        }
	otherlv_1=RULE_LOCAL_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getNonLeftRecursiveNonVoidTypeAccess().getTypedefTypeDefCrossReference_1_0()); 
	}

)
))
;





// Entry rule entryRuleTypeDef
entryRuleTypeDef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypeDefRule()); }
	 iv_ruleTypeDef=ruleTypeDef 
	 { $current=$iv_ruleTypeDef.current; } 
	 EOF 
;

// Rule TypeDef
ruleTypeDef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getTypeDefAccess().getNameLocalNameParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleLocalName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeDefRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"LocalName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='type' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTypeDefAccess().getTypeKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeDefAccess().getTypeNonVoidTypeParserRuleCall_2_0()); 
	    }
		lv_type_2_0=ruleNonVoidType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeDefRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_2_0, 
        		"NonVoidType");
	        afterParserOrEnumRuleCall();
	    }

)
))
;







// Entry rule entryRuleIntType
entryRuleIntType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntTypeRule()); }
	 iv_ruleIntType=ruleIntType 
	 { $current=$iv_ruleIntType.current; } 
	 EOF 
;

// Rule IntType
ruleIntType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(this_INT_TYPE_0=RULE_INT_TYPE
    { 
    newLeafNode(this_INT_TYPE_0, grammarAccess.getIntTypeAccess().getINT_TYPETerminalRuleCall_0()); 
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getIntTypeAccess().getIntTypeAction_1(),
            $current);
    }
))
;





// Entry rule entryRuleOpaqueType
entryRuleOpaqueType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpaqueTypeRule()); }
	 iv_ruleOpaqueType=ruleOpaqueType 
	 { $current=$iv_ruleOpaqueType.current; } 
	 EOF 
;

// Rule OpaqueType
ruleOpaqueType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='opaque' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getOpaqueTypeAccess().getOpaqueKeyword_0());
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getOpaqueTypeAccess().getOpaqueTypeAction_1(),
            $current);
    }
))
;





// Entry rule entryRuleStructType
entryRuleStructType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStructTypeRule()); }
	 iv_ruleStructType=ruleStructType 
	 { $current=$iv_ruleStructType.current; } 
	 EOF 
;

// Rule StructType
ruleStructType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getStructTypeAccess().getStructTypeAction_0(),
            $current);
    }
)((	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getStructTypeAccess().getLeftCurlyBracketKeyword_1_0_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getStructTypeAccess().getTypesTypeParserRuleCall_1_0_1_0_0()); 
	    }
		lv_types_2_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStructTypeRule());
	        }
       		add(
       			$current, 
       			"types",
        		lv_types_2_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getStructTypeAccess().getCommaKeyword_1_0_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStructTypeAccess().getTypesTypeParserRuleCall_1_0_1_1_1_0()); 
	    }
		lv_types_4_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStructTypeRule());
	        }
       		add(
       			$current, 
       			"types",
        		lv_types_4_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getStructTypeAccess().getRightCurlyBracketKeyword_1_0_2());
    }
)
    |((
(
		lv_packed_6_0=	'<' 
    {
        newLeafNode(lv_packed_6_0, grammarAccess.getStructTypeAccess().getPackedLessThanSignKeyword_1_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStructTypeRule());
	        }
       		setWithLastConsumed($current, "packed", lv_packed_6_0, "<");
	    }

)
)	otherlv_7='{' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getStructTypeAccess().getLeftCurlyBracketKeyword_1_1_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getStructTypeAccess().getTypesTypeParserRuleCall_1_1_2_0_0()); 
	    }
		lv_types_8_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStructTypeRule());
	        }
       		add(
       			$current, 
       			"types",
        		lv_types_8_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getStructTypeAccess().getCommaKeyword_1_1_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStructTypeAccess().getTypesTypeParserRuleCall_1_1_2_1_1_0()); 
	    }
		lv_types_10_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStructTypeRule());
	        }
       		add(
       			$current, 
       			"types",
        		lv_types_10_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getStructTypeAccess().getRightCurlyBracketKeyword_1_1_3());
    }
	otherlv_12='>' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getStructTypeAccess().getGreaterThanSignKeyword_1_1_4());
    }
)))
;





// Entry rule entryRuleVectorType
entryRuleVectorType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVectorTypeRule()); }
	 iv_ruleVectorType=ruleVectorType 
	 { $current=$iv_ruleVectorType.current; } 
	 EOF 
;

// Rule VectorType
ruleVectorType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='<' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getVectorTypeAccess().getLessThanSignKeyword_0());
    }
(
(
		lv_size_1_0=RULE_INTEGER
		{
			newLeafNode(lv_size_1_0, grammarAccess.getVectorTypeAccess().getSizeINTEGERTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVectorTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"size",
        		lv_size_1_0, 
        		"INTEGER");
	    }

)
)	otherlv_2='x' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getVectorTypeAccess().getXKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVectorTypeAccess().getElemTypeTypeParserRuleCall_3_0()); 
	    }
		lv_elemType_3_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVectorTypeRule());
	        }
       		set(
       			$current, 
       			"elemType",
        		lv_elemType_3_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='>' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getVectorTypeAccess().getGreaterThanSignKeyword_4());
    }
)
;





// Entry rule entryRuleArrayType
entryRuleArrayType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArrayTypeRule()); }
	 iv_ruleArrayType=ruleArrayType 
	 { $current=$iv_ruleArrayType.current; } 
	 EOF 
;

// Rule ArrayType
ruleArrayType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='[' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getArrayTypeAccess().getLeftSquareBracketKeyword_0());
    }
(
(
		lv_size_1_0=RULE_INTEGER
		{
			newLeafNode(lv_size_1_0, grammarAccess.getArrayTypeAccess().getSizeINTEGERTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArrayTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"size",
        		lv_size_1_0, 
        		"INTEGER");
	    }

)
)	otherlv_2='x' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getArrayTypeAccess().getXKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArrayTypeAccess().getElemTypeTypeParserRuleCall_3_0()); 
	    }
		lv_elemType_3_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArrayTypeRule());
	        }
       		set(
       			$current, 
       			"elemType",
        		lv_elemType_3_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=']' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getArrayTypeAccess().getRightSquareBracketKeyword_4());
    }
)
;





// Entry rule entryRuleX86mmxType
entryRuleX86mmxType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getX86mmxTypeRule()); }
	 iv_ruleX86mmxType=ruleX86mmxType 
	 { $current=$iv_ruleX86mmxType.current; } 
	 EOF 
;

// Rule X86mmxType
ruleX86mmxType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='x86_mmx' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getX86mmxTypeAccess().getX86_mmxKeyword_0());
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getX86mmxTypeAccess().getX86mmxTypeAction_1(),
            $current);
    }
))
;





// Entry rule entryRuleVoidType
entryRuleVoidType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVoidTypeRule()); }
	 iv_ruleVoidType=ruleVoidType 
	 { $current=$iv_ruleVoidType.current; } 
	 EOF 
;

// Rule VoidType
ruleVoidType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='void' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getVoidTypeAccess().getVoidKeyword_0());
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getVoidTypeAccess().getVoidTypeAction_1(),
            $current);
    }
))
;





// Entry rule entryRuleMetadataType
entryRuleMetadataType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMetadataTypeRule()); }
	 iv_ruleMetadataType=ruleMetadataType 
	 { $current=$iv_ruleMetadataType.current; } 
	 EOF 
;

// Rule MetadataType
ruleMetadataType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='metadata' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMetadataTypeAccess().getMetadataKeyword_0());
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getMetadataTypeAccess().getMetadataTypeAction_1(),
            $current);
    }
))
;





// Entry rule entryRuleFloatingType
entryRuleFloatingType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFloatingTypeRule()); }
	 iv_ruleFloatingType=ruleFloatingType 
	 { $current=$iv_ruleFloatingType.current; } 
	 EOF 
;

// Rule FloatingType
ruleFloatingType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='half' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFloatingTypeAccess().getHalfKeyword_0_0());
    }

    |	otherlv_1='float' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFloatingTypeAccess().getFloatKeyword_0_1());
    }

    |	otherlv_2='double' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFloatingTypeAccess().getDoubleKeyword_0_2());
    }

    |	otherlv_3='fp128' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getFloatingTypeAccess().getFp128Keyword_0_3());
    }

    |	otherlv_4='x86_fp80' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getFloatingTypeAccess().getX86_fp80Keyword_0_4());
    }

    |	otherlv_5='ppc_fp128' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getFloatingTypeAccess().getPpc_fp128Keyword_0_5());
    }
)(
    {
        $current = forceCreateModelElement(
            grammarAccess.getFloatingTypeAccess().getFloatingTypeAction_1(),
            $current);
    }
))
;





// Entry rule entryRuleLinkage
entryRuleLinkage returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getLinkageRule()); } 
	 iv_ruleLinkage=ruleLinkage 
	 { $current=$iv_ruleLinkage.current.getText(); }  
	 EOF 
;

// Rule Linkage
ruleLinkage returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='private' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLinkageAccess().getPrivateKeyword_0()); 
    }

    |
	kw='linker_private' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLinkageAccess().getLinker_privateKeyword_1()); 
    }

    |
	kw='linker_private_weak' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLinkageAccess().getLinker_private_weakKeyword_2()); 
    }

    |
	kw='linker_private_weak_def_auto' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLinkageAccess().getLinker_private_weak_def_autoKeyword_3()); 
    }

    |
	kw='internal' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLinkageAccess().getInternalKeyword_4()); 
    }

    |
	kw='available_externally' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLinkageAccess().getAvailable_externallyKeyword_5()); 
    }

    |
	kw='linkonce' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLinkageAccess().getLinkonceKeyword_6()); 
    }

    |
	kw='weak' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLinkageAccess().getWeakKeyword_7()); 
    }

    |
	kw='common' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLinkageAccess().getCommonKeyword_8()); 
    }

    |
	kw='appending' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLinkageAccess().getAppendingKeyword_9()); 
    }

    |
	kw='extern_weak' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLinkageAccess().getExtern_weakKeyword_10()); 
    }

    |
	kw='linkonce_odr' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLinkageAccess().getLinkonce_odrKeyword_11()); 
    }

    |
	kw='weak_odr' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLinkageAccess().getWeak_odrKeyword_12()); 
    }

    |
	kw='external' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLinkageAccess().getExternalKeyword_13()); 
    }

    |
	kw='dllimport' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLinkageAccess().getDllimportKeyword_14()); 
    }

    |
	kw='dllexport' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLinkageAccess().getDllexportKeyword_15()); 
    }
)
    ;





// Entry rule entryRuleCConv
entryRuleCConv returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCConvRule()); }
	 iv_ruleCConv=ruleCConv 
	 { $current=$iv_ruleCConv.current; } 
	 EOF 
;

// Rule CConv
ruleCConv returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
(
		lv_val_0_1=	'ccc' 
    {
        newLeafNode(lv_val_0_1, grammarAccess.getCConvAccess().getValCccKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCConvRule());
	        }
       		setWithLastConsumed($current, "val", lv_val_0_1, null);
	    }

    |		lv_val_0_2=	'fastcc' 
    {
        newLeafNode(lv_val_0_2, grammarAccess.getCConvAccess().getValFastccKeyword_0_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCConvRule());
	        }
       		setWithLastConsumed($current, "val", lv_val_0_2, null);
	    }

    |		lv_val_0_3=	'coldcc' 
    {
        newLeafNode(lv_val_0_3, grammarAccess.getCConvAccess().getValColdccKeyword_0_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCConvRule());
	        }
       		setWithLastConsumed($current, "val", lv_val_0_3, null);
	    }

    |		lv_val_0_4=	'webkit_jscc' 
    {
        newLeafNode(lv_val_0_4, grammarAccess.getCConvAccess().getValWebkit_jsccKeyword_0_0_3());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCConvRule());
	        }
       		setWithLastConsumed($current, "val", lv_val_0_4, null);
	    }

    |		lv_val_0_5=	'anyregcc' 
    {
        newLeafNode(lv_val_0_5, grammarAccess.getCConvAccess().getValAnyregccKeyword_0_0_4());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCConvRule());
	        }
       		setWithLastConsumed($current, "val", lv_val_0_5, null);
	    }

    |		lv_val_0_6=	'preserve_mostcc' 
    {
        newLeafNode(lv_val_0_6, grammarAccess.getCConvAccess().getValPreserve_mostccKeyword_0_0_5());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCConvRule());
	        }
       		setWithLastConsumed($current, "val", lv_val_0_6, null);
	    }

    |		lv_val_0_7=	'preserve_allcc' 
    {
        newLeafNode(lv_val_0_7, grammarAccess.getCConvAccess().getValPreserve_allccKeyword_0_0_6());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCConvRule());
	        }
       		setWithLastConsumed($current, "val", lv_val_0_7, null);
	    }

    |		lv_val_0_8=	'intel_ocl_bicc' 
    {
        newLeafNode(lv_val_0_8, grammarAccess.getCConvAccess().getValIntel_ocl_biccKeyword_0_0_7());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCConvRule());
	        }
       		setWithLastConsumed($current, "val", lv_val_0_8, null);
	    }

    |		lv_val_0_9=	'x86_stdcallcc' 
    {
        newLeafNode(lv_val_0_9, grammarAccess.getCConvAccess().getValX86_stdcallccKeyword_0_0_8());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCConvRule());
	        }
       		setWithLastConsumed($current, "val", lv_val_0_9, null);
	    }

    |		lv_val_0_10=	'x86_fastcallcc' 
    {
        newLeafNode(lv_val_0_10, grammarAccess.getCConvAccess().getValX86_fastcallccKeyword_0_0_9());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCConvRule());
	        }
       		setWithLastConsumed($current, "val", lv_val_0_10, null);
	    }

    |		lv_val_0_11=	'x86_thiscallcc' 
    {
        newLeafNode(lv_val_0_11, grammarAccess.getCConvAccess().getValX86_thiscallccKeyword_0_0_10());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCConvRule());
	        }
       		setWithLastConsumed($current, "val", lv_val_0_11, null);
	    }

    |		lv_val_0_12=	'arm_apcscc' 
    {
        newLeafNode(lv_val_0_12, grammarAccess.getCConvAccess().getValArm_apcsccKeyword_0_0_11());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCConvRule());
	        }
       		setWithLastConsumed($current, "val", lv_val_0_12, null);
	    }

    |		lv_val_0_13=	'arm_aapcscc' 
    {
        newLeafNode(lv_val_0_13, grammarAccess.getCConvAccess().getValArm_aapcsccKeyword_0_0_12());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCConvRule());
	        }
       		setWithLastConsumed($current, "val", lv_val_0_13, null);
	    }

    |		lv_val_0_14=	'arm_aapcs_vfpcc' 
    {
        newLeafNode(lv_val_0_14, grammarAccess.getCConvAccess().getValArm_aapcs_vfpccKeyword_0_0_13());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCConvRule());
	        }
       		setWithLastConsumed($current, "val", lv_val_0_14, null);
	    }

    |		lv_val_0_15=	'msp430_intrcc' 
    {
        newLeafNode(lv_val_0_15, grammarAccess.getCConvAccess().getValMsp430_intrccKeyword_0_0_14());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCConvRule());
	        }
       		setWithLastConsumed($current, "val", lv_val_0_15, null);
	    }

    |		lv_val_0_16=	'ptx_kernel' 
    {
        newLeafNode(lv_val_0_16, grammarAccess.getCConvAccess().getValPtx_kernelKeyword_0_0_15());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCConvRule());
	        }
       		setWithLastConsumed($current, "val", lv_val_0_16, null);
	    }

    |		lv_val_0_17=	'ptx_device' 
    {
        newLeafNode(lv_val_0_17, grammarAccess.getCConvAccess().getValPtx_deviceKeyword_0_0_16());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCConvRule());
	        }
       		setWithLastConsumed($current, "val", lv_val_0_17, null);
	    }

    |		lv_val_0_18=	'spir_kernel' 
    {
        newLeafNode(lv_val_0_18, grammarAccess.getCConvAccess().getValSpir_kernelKeyword_0_0_17());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCConvRule());
	        }
       		setWithLastConsumed($current, "val", lv_val_0_18, null);
	    }

    |		lv_val_0_19=	'spir_func' 
    {
        newLeafNode(lv_val_0_19, grammarAccess.getCConvAccess().getValSpir_funcKeyword_0_0_18());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCConvRule());
	        }
       		setWithLastConsumed($current, "val", lv_val_0_19, null);
	    }

    |		lv_val_0_20=	'x86_64_sysvcc' 
    {
        newLeafNode(lv_val_0_20, grammarAccess.getCConvAccess().getValX86_64_sysvccKeyword_0_0_19());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCConvRule());
	        }
       		setWithLastConsumed($current, "val", lv_val_0_20, null);
	    }

    |		lv_val_0_21=	'x86_64_win64cc' 
    {
        newLeafNode(lv_val_0_21, grammarAccess.getCConvAccess().getValX86_64_win64ccKeyword_0_0_20());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCConvRule());
	        }
       		setWithLastConsumed($current, "val", lv_val_0_21, null);
	    }

)

)
)
    |((
(
		lv_val_1_0=	'cc' 
    {
        newLeafNode(lv_val_1_0, grammarAccess.getCConvAccess().getValCcKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCConvRule());
	        }
       		setWithLastConsumed($current, "val", lv_val_1_0, "cc");
	    }

)
)(
(
		lv_customNumber_2_0=RULE_INTEGER
		{
			newLeafNode(lv_customNumber_2_0, grammarAccess.getCConvAccess().getCustomNumberINTEGERTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCConvRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"customNumber",
        		lv_customNumber_2_0, 
        		"INTEGER");
	    }

)
)))
;





// Entry rule entryRuleVisibility
entryRuleVisibility returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getVisibilityRule()); } 
	 iv_ruleVisibility=ruleVisibility 
	 { $current=$iv_ruleVisibility.current.getText(); }  
	 EOF 
;

// Rule Visibility
ruleVisibility returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='default' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVisibilityAccess().getDefaultKeyword_0()); 
    }

    |
	kw='hidden' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVisibilityAccess().getHiddenKeyword_1()); 
    }

    |
	kw='protected' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVisibilityAccess().getProtectedKeyword_2()); 
    }
)
    ;





RULE_BOOLEAN : ('true'|'false');

RULE_NULL : 'null';

RULE_INT_TYPE : 'i' RULE_INTEGER;

RULE_GLOBAL_ID : '@' (RULE_INTEGER|RULE_NAME|RULE_STRING);

RULE_LOCAL_ID : '%' (RULE_INTEGER|RULE_NAME|RULE_STRING);

RULE_BASIC_BLOCK_ID : (RULE_INTEGER|RULE_NAME|RULE_STRING) ':';

RULE_META_INT : '!' RULE_INTEGER;

RULE_META_NAME : '!' RULE_NAME;

RULE_ATTRIBUTE_ID : '#' (RULE_INTEGER|RULE_NAME);

RULE_INTEGER : ('0'..'9')+;

RULE_SIGNED_INT : ('+'|'-') RULE_INTEGER;

fragment RULE_NAME : ('a'..'z'|'A'..'Z'|'$'|'.'|'_'|'-') ('a'..'z'|'A'..'Z'|'$'|'.'|'_'|'0'..'9'|'-')*;

RULE_CSTRING : 'c' RULE_STRING;

RULE_STRING : '"' ('\\' ('\\'|('a'..'f'|'A'..'F'|'0'..'9') ('a'..'f'|'A'..'F'|'0'..'9'))|~(('\\'|'"')))* '"';

RULE_METADATA_STRING : '!' RULE_STRING;

RULE_FLOAT : ((RULE_SIGNED_INT|RULE_INTEGER) '.' RULE_INTEGER ('e' (RULE_SIGNED_INT|RULE_INTEGER))?|'0x' ('K'|'L'|'M'|'H')? ('a'..'f'|'A'..'F'|'0'..'9')+);

RULE_FILECHECK_COMMENT : '; ' ('A'..'Z'|'_'|'-')+ ': ' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_SL_COMMENT : ';' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


